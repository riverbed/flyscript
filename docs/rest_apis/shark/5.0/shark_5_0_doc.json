{
  "restSchemaVersion": "1.0", 
  "name": "shark", 
  "version": "5.0", 
  "title": "Riverbed Cascade Shark REST API", 
  "description_file": "overview_shark_5_0.md", 
  "defaultAuthorization": "required", 
  "servicePath": "/api/shark/5.0", 
  "schemas": {
    "timestamp-hp": {
      "type": "timestamp-hp", 
      "id": "timestamp-hp"
    }, 
    "interface": {
      "description": "Information on a Shark interface", 
      "example": {
        "interface_components": [], 
        "description": "TurboCap 1Gb device no.0", 
        "link": {
          "status": "UP", 
          "tap_type": "NONE", 
          "stats": {
            "bytes_rx": 73479647, 
            "packets_rx": 1007765
          }, 
          "dedup_status": "DISABLED", 
          "speed_options": [
            {
              "status": "ENABLED", 
              "speed_mbps": "MBPS_10", 
              "duplex_type": "FULL"
            }, 
            {
              "status": "ENABLED", 
              "speed_mbps": "MBPS_10", 
              "duplex_type": "HALF"
            }, 
            {
              "status": "ENABLED", 
              "speed_mbps": "MBPS_100", 
              "duplex_type": "FULL"
            }, 
            {
              "status": "ENABLED", 
              "speed_mbps": "MBPS_100", 
              "duplex_type": "HALF"
            }, 
            {
              "status": "NEGOTIATED", 
              "speed_mbps": "MBPS_1000", 
              "duplex_type": "FULL"
            }
          ], 
          "mac_address": "00:e0:ed:1e:9d:1a", 
          "blink_status": "OFF", 
          "type": "EN10MB"
        }, 
        "board": {
          "pass_thru": "DISABLED", 
          "type": "1G_COPPER", 
          "name": "TurboCap 1 Gigabit Ethernet Board (00:e0:ed:1e:9d:1a)"
        }, 
        "is_promiscuous_mode": true, 
        "type": "TURBOCAP_ADAPTER", 
        "id": "tc0", 
        "name": "tc0"
      }, 
      "type": "object", 
      "id": "interface", 
      "properties": {
        "id": {
          "description": "ID of this interface", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "Name of this interface", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "String describing this interface", 
          "required": true, 
          "type": "string"
        }, 
        "type": {
          "description": "Type of this interface", 
          "required": true, 
          "type": "string", 
          "enum": [
            "TURBOCAP_ADAPTER", 
            "PCAP_ADAPTER", 
            "AIRPCAP_ADAPTER", 
            "VIRTUAL", 
            "BOARD_AGGREGATING", 
            "AGGREGATING", 
            "UNKNOWN"
          ]
        }, 
        "is_promiscuous_mode": {
          "description": "'true' if interface is in promiscuous mode, 'false' otherwise", 
          "required": false, 
          "type": "boolean"
        }, 
        "board": {
          "description": "Information on a physical packet capture board", 
          "required": false, 
          "type": "object", 
          "properties": {
            "name": {
              "description": "Name of this board", 
              "required": true, 
              "type": "string"
            }, 
            "type": {
              "description": "Type of this board", 
              "required": true, 
              "type": "string", 
              "enum": [
                "1G_COPPER", 
                "1G_FIBER", 
                "10G_FIBER", 
                "PCAP", 
                "UNKNOWN"
              ]
            }, 
            "pass_thru": {
              "description": "Enabled status of pass-thru mode (only supported on 1GB Copper TurboCap cards)", 
              "required": true, 
              "type": "string", 
              "enum": [
                "ENABLED", 
                "DISABLED", 
                "NOT_SUPPORTED"
              ]
            }
          }
        }, 
        "link": {
          "description": "Information on a physical interface link", 
          "required": false, 
          "type": "object", 
          "properties": {
            "status": {
              "description": "Indicates whether this link is up or down", 
              "required": false, 
              "type": "string", 
              "enum": [
                "UP", 
                "DOWN", 
                "UNKNOWN"
              ]
            }, 
            "type": {
              "description": "Link layer type of this link", 
              "required": true, 
              "type": "string", 
              "enum": [
                "NONE", 
                "EN10MB", 
                "RAW", 
                "IEEE802_11", 
                "IEEE802_11_RADIO", 
                "PPI", 
                "PPP_WITH_DIR", 
                "LINUX_SLL", 
                "C_HDLC", 
                "UNKNOWN"
              ]
            }, 
            "tap_type": {
              "description": "Tap type used on this link", 
              "required": true, 
              "type": "string", 
              "enum": [
                "NONE", 
                "CPACKET", 
                "GIGAMON_HEADER", 
                "GIGAMON_TRAILER", 
                "GIGAMON_TRAILER_X12", 
                "VSS", 
                "VSS_PORT_ID", 
                "ANUE", 
                "ARISTA", 
                "UNKNOWN"
              ]
            }, 
            "mac_address": {
              "description": "MAC address of this link", 
              "required": true, 
              "type": "string"
            }, 
            "is_profiler_export_enabled": {
              "description": "'true' if profiler export has been enabled for this link, 'false' otherwise", 
              "required": false, 
              "type": "boolean"
            }, 
            "blink_status": {
              "description": "Indicates 'blink' status for this link", 
              "required": false, 
              "type": "string", 
              "enum": [
                "ON", 
                "OFF", 
                "UNKNOWN"
              ]
            }, 
            "dedup_status": {
              "description": "Indicates whether or not packet deduplication has been enabled for this link", 
              "required": false, 
              "type": "string", 
              "enum": [
                "ENABLED", 
                "DISABLED", 
                "NOT_SUPPORTED"
              ]
            }, 
            "addresses": {
              "description": "List of link addresses", 
              "required": false, 
              "type": "array", 
              "items": {
                "id": "link_address", 
                "type": "object", 
                "properties": {
                  "address": {
                    "description": "IP address for this interface", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "netmask": {
                    "description": "Netmask for this interface", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "broadcast": {
                    "description": "Broadcast address for this interface", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "family": {
                    "description": "Protocol family served by this interface", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "destination": {
                    "description": "Destination address for this interface", 
                    "required": false, 
                    "type": "string"
                  }
                }, 
                "description": "Address information for a physical interface"
              }
            }, 
            "stats": {
              "description": "Low-level statistics on traffic over this interface", 
              "required": false, 
              "type": "object", 
              "properties": {
                "bytes_rx": {
                  "description": "Bytes received", 
                  "required": true, 
                  "type": "number"
                }, 
                "packets_rx": {
                  "description": "Packets received", 
                  "required": true, 
                  "type": "number"
                }
              }
            }, 
            "speed_options": {
              "description": "List of link speed options", 
              "required": false, 
              "type": "array", 
              "items": {
                "id": "link_speed_option", 
                "type": "object", 
                "properties": {
                  "status": {
                    "description": "Status of this link speed option for this interface", 
                    "required": false, 
                    "type": "string", 
                    "enum": [
                      "SUPPORTED", 
                      "ENABLED", 
                      "NEGOTIATED"
                    ]
                  }, 
                  "duplex_type": {
                    "description": "Duplex type for this speed option", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "HALF", 
                      "FULL", 
                      "UNKNOWN"
                    ]
                  }, 
                  "speed_mbps": {
                    "description": "Throughput for this speed option", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "MBPS_10", 
                      "MBPS_100", 
                      "MBPS_1000", 
                      "MBPS_10000"
                    ]
                  }
                }, 
                "description": "Speed, duplex type, and status of a speed option"
              }
            }
          }
        }, 
        "virtual_info": {
          "description": "Information on a virtual interface (used internally by Shark)", 
          "required": false, 
          "type": "object", 
          "properties": {
            "file_name": {
              "description": "File name corresponding to virtual interface", 
              "required": true, 
              "type": "string"
            }, 
            "device_name": {
              "description": "Device name corresponding to virtual interface", 
              "required": true, 
              "type": "string"
            }, 
            "job_handle": {
              "description": "If virtual interface is a capture job, handle of the job", 
              "required": false, 
              "type": "string"
            }
          }
        }, 
        "interface_components": {
          "description": "For aggregating ports, list of physical ports making up the aggregation", 
          "required": true, 
          "type": "array", 
          "items": {
            "type": "string", 
            "id": "component_interface"
          }
        }
      }
    }, 
    "job_config": {
      "description": "Configuration information for a job", 
      "example": {
        "packet_retention": {
          "size_limit": 5368709120
        }, 
        "name": "New Job 1", 
        "interface_description": "mon0", 
        "snap_length": 65535, 
        "interface_name": "mon0"
      }, 
      "type": "object", 
      "id": "job_config", 
      "properties": {
        "name": {
          "description": "Job name", 
          "required": true, 
          "type": "string"
        }, 
        "interface_name": {
          "description": "Name of interface on which job is collecting packet data", 
          "required": true, 
          "type": "string"
        }, 
        "interface_description": {
          "description": "Description of interface on which job is collecting packet data", 
          "required": false, 
          "type": "string"
        }, 
        "bpf_filter": {
          "description": "BPF filter applied to this capture job", 
          "required": false, 
          "type": "string"
        }, 
        "snap_length": {
          "description": "Packet snap length for this capture job", 
          "required": false, 
          "default": "65535", 
          "type": "number"
        }, 
        "start_immediately": {
          "description": "'true' if job is to start immediately upon creation, 'false' otherwise", 
          "required": false, 
          "default": "true", 
          "type": "boolean"
        }, 
        "requested_start_time": {
          "description": "Specific time at which job is to start", 
          "required": false, 
          "type": "timestamp"
        }, 
        "requested_end_time": {
          "description": "Specific time at which job is to end", 
          "required": false, 
          "type": "timestamp"
        }, 
        "packet_retention": {
          "description": "Packet retention info for a job", 
          "required": true, 
          "type": "object", 
          "properties": {
            "size_limit": {
              "description": "Max bytes of packet data to be retained", 
              "required": true, 
              "type": "number"
            }, 
            "packet_limit": {
              "description": "Max number of packets to be retained", 
              "required": false, 
              "type": "number"
            }, 
            "time_limit": {
              "description": "Time period for which packet data will be retained", 
              "required": false, 
              "type": "number"
            }
          }
        }, 
        "indexing": {
          "description": "Job index configuration", 
          "required": false, 
          "type": "object", 
          "properties": {
            "size_limit": {
              "description": "Max number of bytes for this index", 
              "required": false, 
              "type": "number"
            }, 
            "time_limit": {
              "description": "Max time this index can exist", 
              "required": false, 
              "type": "number"
            }, 
            "synced": {
              "description": "'true' if index is synced with packet storage", 
              "required": false, 
              "type": "boolean"
            }, 
            "dpi_enabled": {
              "description": "'true' if dpi taggging is enabled", 
              "required": false, 
              "type": "boolean"
            }
          }
        }, 
        "stop_rule": {
          "description": "Stop rule for a job", 
          "required": false, 
          "type": "object", 
          "properties": {
            "size_limit": {
              "description": "Max bytes of packet data", 
              "required": false, 
              "type": "number"
            }, 
            "packet_limit": {
              "description": "Max number of packets", 
              "required": false, 
              "type": "number"
            }, 
            "time_limit": {
              "description": "Max time in seconds", 
              "required": false, 
              "type": "number"
            }
          }
        }
      }
    }, 
    "job_status": {
      "description": "Status information for a job", 
      "example": {
        "state": "STOPPED", 
        "packet_size": 44781772, 
        "packet_start_time": 1344456875000000000, 
        "packet_end_time": 1345512749000000000
      }, 
      "type": "object", 
      "id": "job_status", 
      "properties": {
        "state": {
          "description": "Running state of a capture job", 
          "required": true, 
          "type": "string", 
          "enum": [
            "ACTIVE", 
            "RUNNING", 
            "STOPPED", 
            "UNKNOWN"
          ]
        }, 
        "packet_start_time": {
          "description": "First packet timestamp for this job", 
          "required": true, 
          "$ref": "timestamp-hp"
        }, 
        "packet_end_time": {
          "description": "Last packet timestamp for this job", 
          "required": true, 
          "$ref": "timestamp-hp"
        }, 
        "packet_size": {
          "description": "Size of this job in packet storage", 
          "required": true, 
          "type": "number"
        }
      }
    }, 
    "job_index_info": {
      "example": {
        "status": "RUNNING", 
        "start_time": 1354054943377117000, 
        "end_time": 1354657734848519000, 
        "synced_with_job": false, 
        "size": 3065578
      }, 
      "type": "object", 
      "id": "job_index_info", 
      "properties": {
        "status": {
          "required": true, 
          "type": "string", 
          "description": "Running state of an index", 
          "enum": [
            "OK", 
            "RUNNING", 
            "ERROR"
          ]
        }, 
        "start_time": {
          "description": "Start time of the index", 
          "required": true, 
          "$ref": "timestamp-hp"
        }, 
        "end_time": {
          "description": "End time of the index", 
          "required": true, 
          "$ref": "timestamp-hp"
        }, 
        "synced_with_job": {
          "required": false, 
          "type": "boolean"
        }, 
        "size": {
          "description": "Size of index on the OS file system", 
          "required": false, 
          "type": "number"
        }
      }
    }, 
    "clip_config": {
      "description": "Configuration of a clip", 
      "example": {
        "job_id": "000000A3", 
        "description": "This is a clip on job 000000A3", 
        "filters": [
          {
            "type": "TIME", 
            "value": "1345830425000000000, 1345830435000000000", 
            "description": "This is a time filter."
          }, 
          {
            "type": "BPF", 
            "value": "port 80"
          }
        ]
      }, 
      "type": "object", 
      "id": "clip_config", 
      "properties": {
        "job_id": {
          "description": "Job ID on which the clip is applied", 
          "required": false, 
          "type": "string"
        }, 
        "description": {
          "description": "Description of this clip configuration", 
          "required": false, 
          "type": "string"
        }, 
        "filters": {
          "description": "List of clip filters", 
          "required": false, 
          "type": "array", 
          "id": "filters", 
          "items": {
            "id": "filters", 
            "description": "Configuration for a clip filter", 
            "type": "object", 
            "properties": {
              "type": {
                "description": "Clip configuration filter type", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "TIME", 
                  "SHARK", 
                  "BPF", 
                  "WIRESHARK_DISPLAY"
                ]
              }, 
              "value": {
                "description": "Value of this filter", 
                "required": true, 
                "type": "string"
              }, 
              "description": {
                "description": "Description of this filter", 
                "required": false, 
                "type": "string"
              }
            }
          }
        }
      }
    }, 
    "clip_status": {
      "description": "Status information for a clip", 
      "example": {
        "creation_time": 1345830425, 
        "modification_time": 1345830535, 
        "estimated_size": 268435456, 
        "locked": true
      }, 
      "type": "object", 
      "id": "clip_status", 
      "properties": {
        "creation_time": {
          "description": "Clip creation time", 
          "required": false, 
          "type": "timestamp"
        }, 
        "modification_time": {
          "description": "Clip last modified time", 
          "required": false, 
          "type": "timestamp"
        }, 
        "estimated_size": {
          "description": "Estimated size for this clip in packet storage", 
          "required": false, 
          "type": "number"
        }, 
        "locked": {
          "description": "'true' if packets and the index for this clip are locked, 'false' otherwise", 
          "required": true, 
          "type": "boolean"
        }
      }
    }, 
    "index_info": {
      "description": "Information for one index", 
      "example": {
        "status": "OK", 
        "start_time": 1345830425000000000, 
        "end_time": 1345830435000000000
      }, 
      "type": "object", 
      "id": "index_info", 
      "properties": {
        "status": {
          "description": "Running state of an index", 
          "required": true, 
          "type": "string", 
          "enum": [
            "OK", 
            "RUNNING", 
            "ERROR"
          ]
        }, 
        "start_time": {
          "description": "First packet timestamp for this index", 
          "required": true, 
          "$ref": "timestamp-hp"
        }, 
        "end_time": {
          "description": "Last packet timestamp for this index", 
          "required": true, 
          "$ref": "timestamp-hp"
        }
      }
    }, 
    "file": {
      "description": "File's details", 
      "example": {
        "created": 1342768079, 
        "modified": 1348764826, 
        "linked_sources": [
          {
            "path": "2-router1-in.pcap"
          }, 
          {
            "path": "4-router2-in.pcap"
          }, 
          {
            "path": "6-router3-in.pcap"
          }
        ], 
        "id": "/admin/multisegment/merged.pvt", 
        "type": "MERGED_FILE", 
        "link_type": "DLT_EN10MB", 
        "size": 243
      }, 
      "type": "object", 
      "id": "file", 
      "properties": {
        "type": {
          "description": "File type", 
          "required": true, 
          "type": "string", 
          "enum": [
            "MULTISEGMENT_FILE", 
            "MERGED_FILE", 
            "PCAP_FILE", 
            "PCAPNG_FILE", 
            "ERF_FILE", 
            "UNKNOWN_FILE"
          ]
        }, 
        "id": {
          "description": "File id", 
          "required": true, 
          "type": "string"
        }, 
        "link_type": {
          "description": "Link layer type", 
          "required": false, 
          "type": "string"
        }, 
        "format": {
          "required": false, 
          "type": "string", 
          "description": "File time format", 
          "enum": [
            "PCAP_US", 
            "PCAP_NS", 
            "PCAPNG_US", 
            "PCAPNG_NS", 
            "UNKNOWN"
          ]
        }, 
        "size": {
          "description": "File size in bytes", 
          "required": false, 
          "type": "number"
        }, 
        "created": {
          "description": "Creation time in Unix time format", 
          "required": false, 
          "type": "timestamp"
        }, 
        "modified": {
          "description": "Modification time in Unix time format", 
          "required": false, 
          "type": "timestamp"
        }, 
        "linked_sources": {
          "description": "Linked sources details list", 
          "required": false, 
          "type": "array", 
          "items": {
            "id": "linked_source", 
            "type": "object", 
            "properties": {
              "path": {
                "description": "Linked source path. It could be either an absolute path (fs/ID) or a relative path starting from the aggregated file folder.", 
                "required": true, 
                "type": "string"
              }, 
              "default_source": {
                "description": "The default source is the reference source in a multisegment file collection and it is used as reference for the time skew calculation", 
                "required": false, 
                "type": "boolean"
              }, 
              "timeskew": {
                "description": "It is the packets timestamps offset associated with the linked source", 
                "required": false, 
                "type": "number"
              }, 
              "description": {
                "description": "A simple description field associated with the linked source", 
                "required": false, 
                "type": "string"
              }
            }
          }
        }, 
        "index": {
          "description": "Index info", 
          "required": false, 
          "$ref": "index_info"
        }
      }
    }, 
    "dir": {
      "description": "Directory details", 
      "example": {
        "files": [
          {
            "created": 1347053478, 
            "modified": 1347053478, 
            "id": "/admin/http-ng.pcapng", 
            "type": "PCAPNG_FILE", 
            "link_type": "DLT_EN10MB", 
            "size": 149952
          }, 
          {
            "created": 1343026049, 
            "modified": 1343026050, 
            "id": "/admin/prova.cap", 
            "type": "PCAP_FILE", 
            "link_type": "DLT_EN10MB", 
            "size": 145919
          }
        ], 
        "dirs": [
          {
            "files": [
              {
                "created": 1342768036, 
                "modified": 1342768037, 
                "id": "/admin/multisegment/2-router1-in.pcap", 
                "type": "PCAP_FILE", 
                "link_type": "DLT_EN10MB", 
                "size": 16246
              }, 
              {
                "created": 1342768038, 
                "modified": 1342768038, 
                "id": "/admin/multisegment/4-router2-in.pcap", 
                "type": "PCAP_FILE", 
                "link_type": "DLT_EN10MB", 
                "size": 15988
              }, 
              {
                "created": 1342768038, 
                "modified": 1342768038, 
                "id": "/admin/multisegment/6-router3-in.pcap", 
                "type": "PCAP_FILE", 
                "link_type": "DLT_EN10MB", 
                "size": 15988
              }, 
              {
                "created": 1342768079, 
                "modified": 1348764826, 
                "linked_sources": [
                  {
                    "path": "2-router1-in.pcap"
                  }, 
                  {
                    "path": "4-router2-in.pcap"
                  }, 
                  {
                    "path": "6-router3-in.pcap"
                  }
                ], 
                "id": "/admin/multisegment/merged.pvt", 
                "type": "MERGED_FILE", 
                "link_type": "DLT_EN10MB", 
                "size": 243
              }, 
              {
                "created": 1342768084, 
                "modified": 1348764826, 
                "linked_sources": [
                  {
                    "path": "2-router1-in.pcap", 
                    "default_source": true
                  }, 
                  {
                    "path": "4-router2-in.pcap"
                  }, 
                  {
                    "path": "fs/admin/multisegment/6-router3-in.pcap"
                  }
                ], 
                "id": "/admin/multisegment/multisegment.pvt", 
                "type": "MULTISEGMENT_FILE", 
                "link_type": "DLT_EN10MB", 
                "size": 264
              }
            ], 
            "dirs": [], 
            "description": "This is a multi-segment file", 
            "created": 1342767955, 
            "modified": 1343077906, 
            "id": "/admin/multisegment"
          }, 
          {
            "files": [
              {
                "created": 1342645581, 
                "modified": 1342646988, 
                "id": "/admin/new-dir/http.cap", 
                "type": "PCAP_FILE", 
                "link_type": "DLT_EN10MB", 
                "size": 147456
              }
            ], 
            "dirs": [], 
            "description": "This is a custom folder", 
            "created": 1348764627, 
            "modified": 1348764743, 
            "id": "/admin/new-dir"
          }
        ], 
        "description": "My Files", 
        "created": 1341252038, 
        "modified": 1348764743, 
        "id": "/admin"
      }, 
      "type": "object", 
      "id": "dir", 
      "properties": {
        "id": {
          "description": "Directory id", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "Directory description. It is used when the directory has an alias name.", 
          "required": false, 
          "type": "string"
        }, 
        "created": {
          "description": "Creation time in Unix time format", 
          "required": false, 
          "type": "timestamp"
        }, 
        "modified": {
          "description": "Modification time in Unix time format", 
          "required": false, 
          "type": "timestamp"
        }, 
        "files": {
          "description": "List of files", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "file", 
            "$ref": "file"
          }
        }, 
        "dirs": {
          "description": "List of directories", 
          "required": true, 
          "type": "array", 
          "id": "fs", 
          "items": {
            "id": "dir", 
            "$ref": "dir"
          }, 
          "example": [
            {
              "files": [
                {
                  "created": 1347053478, 
                  "modified": 1347053478, 
                  "id": "/admin/http-ng.pcapng", 
                  "type": "PCAPNG_FILE", 
                  "link_type": "DLT_EN10MB", 
                  "size": 149952
                }, 
                {
                  "created": 1343026049, 
                  "modified": 1343026050, 
                  "id": "/admin/prova.cap", 
                  "type": "PCAP_FILE", 
                  "link_type": "DLT_EN10MB", 
                  "size": 145919
                }
              ], 
              "dirs": [
                {
                  "files": [
                    {
                      "created": 1342768036, 
                      "modified": 1342768037, 
                      "id": "/admin/multisegment/2-router1-in.pcap", 
                      "type": "PCAP_FILE", 
                      "link_type": "DLT_EN10MB", 
                      "size": 16246
                    }, 
                    {
                      "created": 1342768038, 
                      "modified": 1342768038, 
                      "id": "/admin/multisegment/4-router2-in.pcap", 
                      "type": "PCAP_FILE", 
                      "link_type": "DLT_EN10MB", 
                      "size": 15988
                    }, 
                    {
                      "created": 1342768038, 
                      "modified": 1342768038, 
                      "id": "/admin/multisegment/6-router3-in.pcap", 
                      "type": "PCAP_FILE", 
                      "link_type": "DLT_EN10MB", 
                      "size": 15988
                    }, 
                    {
                      "created": 1342768079, 
                      "modified": 1348764826, 
                      "linked_sources": [
                        {
                          "path": "2-router1-in.pcap"
                        }, 
                        {
                          "path": "4-router2-in.pcap"
                        }, 
                        {
                          "path": "6-router3-in.pcap"
                        }
                      ], 
                      "id": "/admin/multisegment/merged.pvt", 
                      "type": "MERGED_FILE", 
                      "link_type": "DLT_EN10MB", 
                      "size": 243
                    }, 
                    {
                      "created": 1342768084, 
                      "modified": 1348764826, 
                      "linked_sources": [
                        {
                          "path": "2-router1-in.pcap", 
                          "default_source": true
                        }, 
                        {
                          "path": "4-router2-in.pcap"
                        }, 
                        {
                          "path": "fs/admin/multisegment/6-router3-in.pcap"
                        }
                      ], 
                      "id": "/admin/multisegment/multisegment.pvt", 
                      "type": "MULTISEGMENT_FILE", 
                      "link_type": "DLT_EN10MB", 
                      "size": 264
                    }
                  ], 
                  "dirs": [], 
                  "description": "This is a multi-segment file", 
                  "created": 1342767955, 
                  "modified": 1343077906, 
                  "id": "/admin/multisegment"
                }, 
                {
                  "files": [
                    {
                      "created": 1342645581, 
                      "modified": 1342646988, 
                      "id": "/admin/new-dir/http.cap", 
                      "type": "PCAP_FILE", 
                      "link_type": "DLT_EN10MB", 
                      "size": 147456
                    }
                  ], 
                  "dirs": [], 
                  "description": "This is a custom folder", 
                  "created": 1348764627, 
                  "modified": 1348764743, 
                  "id": "/admin/new-dir"
                }
              ], 
              "description": "My Files", 
              "created": 1341252038, 
              "modified": 1348764743, 
              "id": "/admin"
            }, 
            {
              "files": [], 
              "dirs": [], 
              "description": "normaluser Home Folder", 
              "created": 1341252038, 
              "modified": 1341252038, 
              "id": "/normaluser"
            }, 
            {
              "files": [], 
              "dirs": [], 
              "description": "Files Shared with Administrators", 
              "created": 1341252871, 
              "modified": 1341252871, 
              "id": "/Administrators"
            }, 
            {
              "files": [], 
              "dirs": [], 
              "description": "Files Shared with NormalUsers", 
              "created": 1341252871, 
              "modified": 1341252871, 
              "id": "/NormalUsers"
            }, 
            {
              "files": [], 
              "dirs": [], 
              "description": "Files Shared with Viewers", 
              "created": 1341252871, 
              "modified": 1341252871, 
              "id": "/Viewers"
            }
          ]
        }
      }
    }, 
    "filter": {
      "id": "filter", 
      "type": "object", 
      "properties": {
        "type": {
          "description": "Filter type", 
          "required": true, 
          "type": "string", 
          "enum": [
            "TIME", 
            "SHARK", 
            "BPF", 
            "WIRESHARK_DISPLAY", 
            "DECRYPT", 
            "STATE"
          ]
        }, 
        "value": {
          "description": "Filter value", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "Description, if needed", 
          "required": false, 
          "type": "string"
        }
      }, 
      "example": {
        "type": "BPF", 
        "value": "port 80", 
        "description": "BPF filter on port 80"
      }
    }, 
    "export_config": {
      "example": {
        "output_format": "PCAP_US", 
        "start_time": 1364230800, 
        "end_time": 1364317200
      }, 
      "type": "object", 
      "id": "export_config", 
      "properties": {
        "output_filename": {
          "description": "If sending packets to file, the filename within the Shark file system", 
          "required": false, 
          "type": "string"
        }, 
        "output_format": {
          "description": "Output format (PCAP or PCAP-NG) and resolution of packet stream", 
          "required": true, 
          "type": "string", 
          "enum": [
            "PCAP_US", 
            "PCAP_NS", 
            "PCAPNG_US", 
            "PCAPNG_NS"
          ]
        }, 
        "start_time": {
          "description": "Time (seconds from epoch) at which export is to begin", 
          "required": false, 
          "type": "timestamp"
        }, 
        "end_time": {
          "description": "Time (seconds from epoch) at which export is to end", 
          "required": false, 
          "type": "timestamp"
        }, 
        "stop_rule": {
          "description": "Stop rule for a job", 
          "required": false, 
          "type": "object", 
          "properties": {
            "size_limit": {
              "description": "Max bytes of packet data", 
              "required": false, 
              "type": "number"
            }, 
            "packet_limit": {
              "description": "Max number of packets", 
              "required": false, 
              "type": "number"
            }, 
            "time_limit": {
              "description": "Max time in seconds", 
              "required": false, 
              "type": "number"
            }
          }
        }, 
        "filters": {
          "description": "Collection of filters to apply to packets prior to export", 
          "required": false, 
          "type": "array", 
          "items": {
            "id": "filter", 
            "$ref": "filter"
          }
        }, 
        "snap_length": {
          "description": "Packet snap length for this export", 
          "required": false, 
          "default": "65535", 
          "type": "number"
        }
      }
    }, 
    "export_status": {
      "example": {
        "owner": "admin", 
        "creation_time": 1364334117658433000, 
        "state": "RUNNING", 
        "bytes_approx": 855784
      }, 
      "type": "object", 
      "id": "export_status", 
      "properties": {
        "state": {
          "description": "State of the export", 
          "required": true, 
          "type": "string", 
          "enum": [
            "UNINITIALIZED", 
            "LOADED", 
            "PARAMS_LOADED", 
            "INITIALIZED", 
            "READY", 
            "RUNNING", 
            "ERRORS", 
            "DONE", 
            "CLOSING", 
            "PAUSED"
          ]
        }, 
        "bytes_approx": {
          "description": "For exports from a job, approximate number of bytes in the export", 
          "required": false, 
          "type": "number"
        }, 
        "creation_time": {
          "description": "Time at which the export was created", 
          "required": true, 
          "$ref": "timestamp-hp"
        }, 
        "owner": {
          "description": "User who initiated the export", 
          "required": true, 
          "type": "string"
        }
      }
    }, 
    "export": {
      "description": "Information about an export", 
      "example": {
        "status": {
          "owner": "admin", 
          "creation_time": 1364334117658433000, 
          "state": "RUNNING", 
          "bytes_approx": 855784
        }, 
        "config": {
          "output_format": "PCAP_US", 
          "end_time": 1364317200, 
          "start_time": 1364230933
        }, 
        "id": "000193E1"
      }, 
      "type": "object", 
      "id": "export", 
      "properties": {
        "id": {
          "description": "ID of export", 
          "required": true, 
          "type": "string"
        }, 
        "config": {
          "description": "Configuration of this export", 
          "required": true, 
          "$ref": "export_config"
        }, 
        "status": {
          "description": "Status of this export", 
          "required": true, 
          "$ref": "export_status"
        }
      }
    }, 
    "dimension_restrictions": {
      "id": "dimension_restrictions", 
      "example": {
        "bool_operator": "OR", 
        "restrictions": [
          {
            "field": "c1", 
            "value": "Web"
          }, 
          {
            "field": "c1", 
            "value": "DNS"
          }
        ], 
        "sub_restrictions": []
      }, 
      "type": "object", 
      "properties": {
        "bool_operator": {
          "description": "The boolean operation to apply: \"And\" or \"Or\"", 
          "required": true, 
          "type": "string", 
          "enum": [
            "NOT_INITIALIZED", 
            "AND", 
            "OR"
          ]
        }, 
        "restrictions": {
          "description": "Restriction list", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "restriction", 
            "type": "object", 
            "properties": {
              "field": {
                "description": "The dimension field identified by the database column name (e.g. c2 or c5)", 
                "notes": "Column numbering starts with 1 and the field must be a dimension", 
                "required": true, 
                "type": "string"
              }, 
              "value": {
                "description": "The matching value", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "sub_restrictions": {
          "description": "Sub-restriction list", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "sub_restriction", 
            "$ref": "dimension_restrictions"
          }
        }
      }, 
      "description": "Specification of dimension restrictions for a watch. Dimension restrictions can be used to narrow down what the watch checks, so that, for example, only some bars in a barchart are observed. If multiple restrictions are present in the list, the server ANDs them."
    }, 
    "watch": {
      "description": "Watch configuration", 
      "example": {
        "info": {
          "name": "Watch 1"
        }, 
        "severity": 6, 
        "triggers": [
          {
            "uid": "Trigger 1", 
            "dimension_restrictions": {
              "sub_restrictions": [], 
              "restrictions": [
                {
                  "field": "c1", 
                  "value": "Web"
                }
              ], 
              "bool_operator": "OR"
            }, 
            "condition_operator": "AND", 
            "bool_operator": "OR", 
            "conditions": [
              {
                "field": "c2", 
                "condition_info": {
                  "aggregation_type": "VALUE", 
                  "check_type": "GREATER", 
                  "value": "0"
                }
              }
            ]
          }
        ], 
        "watch_uid": "watch_1", 
        "enabled": true, 
        "actions": {
          "actions": [
            {
              "type": "InternalDBLog", 
              "uid": "Action 1", 
              "parameters": [], 
              "side": "SERVER"
            }
          ], 
          "fired_triggers": {
            "bool_operator": "AND", 
            "triggering_mode": "LEADINGEDGE", 
            "triggers": [
              "Trigger 1"
            ]
          }
        }, 
        "timing": {
          "time_analysis_mode": "SAMPLE_BY_SAMPLE", 
          "from": "NOW", 
          "interval_ms": 1000
        }, 
        "output_uid": "OUID_Output_Over_Time"
      }, 
      "type": "object", 
      "id": "watch", 
      "properties": {
        "watch_uid": {
          "description": "Watch Id", 
          "required": true, 
          "type": "string"
        }, 
        "output_uid": {
          "description": "Output Id that the watch refers to", 
          "required": true, 
          "type": "string"
        }, 
        "enabled": {
          "description": "True if enabled", 
          "required": true, 
          "type": "boolean"
        }, 
        "severity": {
          "description": "Severity, specified as an integer number with with syslog convention", 
          "required": false, 
          "default": "5", 
          "type": "number"
        }, 
        "info": {
          "description": "Watch info section", 
          "required": true, 
          "type": "object", 
          "properties": {
            "name": {
              "description": "Watch human-friendly name", 
              "required": true, 
              "type": "string"
            }, 
            "description": {
              "description": "Watch human-friendly description", 
              "required": false, 
              "type": "string"
            }, 
            "group": {
              "description": "Watch group. Can be used to organize the watches.", 
              "required": false, 
              "type": "string"
            }
          }
        }, 
        "validity": {
          "description": "Timing information for the watch. It specifies when the watch must be considered valid and keep under control.", 
          "required": false, 
          "type": "object", 
          "properties": {
            "from": {
              "description": "Watch validity start time. If not specified, Start time will be used.", 
              "required": true, 
              "type": "object", 
              "properties": {
                "value_type": {
                  "description": "Validity type", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "DEFAULT", 
                    "NOT_SPECIFIED", 
                    "START", 
                    "END", 
                    "RELATIVE", 
                    "ABSOLUTE"
                  ]
                }, 
                "value_us": {
                  "description": "Validity value, can be expressed as the absolute timestamp or relative time span depending on the type", 
                  "required": true, 
                  "type": "number"
                }
              }
            }, 
            "to": {
              "description": "Watch validity end time. If not specified, End time will be used.", 
              "required": true, 
              "type": "object", 
              "properties": {
                "value_type": {
                  "description": "Validity type", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "DEFAULT", 
                    "NOT_SPECIFIED", 
                    "START", 
                    "END", 
                    "RELATIVE", 
                    "ABSOLUTE"
                  ]
                }, 
                "value_us": {
                  "description": "Validity value, can be expressed as the absolute timestamp or relative time span depending on the type", 
                  "required": true, 
                  "type": "number"
                }
              }
            }
          }
        }, 
        "timing": {
          "description": "Information about the window that is considered by the watch during every check", 
          "required": true, 
          "type": "object", 
          "properties": {
            "sampling_ms": {
              "description": "", 
              "required": false, 
              "type": "number"
            }, 
            "interval_ms": {
              "description": "The time interval that the watch will cover. This is the time window that the watch must consider during every check.", 
              "required": false, 
              "type": "number"
            }, 
            "from": {
              "description": "The time interval that the watch will cover", 
              "notes": "This is the time window that the watch must consider during every check.", 
              "required": false, 
              "type": "string", 
              "enum": [
                "NOT_INITIALIZED", 
                "NOW", 
                "BEGINNING_OF_VIEW", 
                "SECOND", 
                "MINUTE", 
                "HOUR", 
                "DAY", 
                "WEEK", 
                "MONTH", 
                "YEAR"
              ]
            }, 
            "time_analysis_mode": {
              "description": "Specification of the type of analysis for the data samples", 
              "notes": "If SAMPLE_BY_SAMPLE, checks every sample and applies the conditions to it (stripchart style). If AGGREGATED, aggregates per interval_ms to calculate the value for the conditions (barchart style).", 
              "required": false, 
              "type": "string", 
              "enum": [
                "SAMPLE_BY_SAMPLE", 
                "AGGREGATED"
              ]
            }
          }
        }, 
        "conversation_dimensions": {
          "description": "This is used when the watch is supposed to treat two dimensions as if they are part of a single connection. For example, the source and destination ip addresses of a conversation ring. The watch will detect a connection and include the traffic coming from both the senders in a single value to check.", 
          "required": false, 
          "type": "array", 
          "items": {
            "id": "conversation_group", 
            "type": "array", 
            "items": {
              "type": "string", 
              "id": "field_name"
            }
          }
        }, 
        "triggers": {
          "description": "List of the events that are watched. An event is something like \"bandwdth bigger than 1000\" or \"packets for host 1.2.3.4 smaller than 10 for more than a minute\".", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "trigger", 
            "type": "object", 
            "properties": {
              "uid": {
                "description": "The unique identifier of the event", 
                "required": true, 
                "type": "string"
              }, 
              "bool_operator": {
                "description": "The boolean operation to apply: \"And\" or \"Or\"", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "NOT_INITIALIZED", 
                  "AND", 
                  "OR"
                ]
              }, 
              "dimension_restrictions": {
                "description": "The list of dimension restrictions", 
                "required": false, 
                "$ref": "dimension_restrictions"
              }, 
              "duration_info": {
                "description": "Information about the amount of time the value crosses the threshold before the event is triggered. If this field is not present, the server event will be triggered after the first sampling interval in which the value is beyond the threshold. The duration must be a multiple of the view sampling time, otherwise the server will return an error.", 
                "required": false, 
                "type": "object", 
                "properties": {
                  "duration_type": {
                    "description": "Type of duration", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "NOT_INITIALIZED", 
                      "MORE_THAN", 
                      "EQUALS"
                    ]
                  }, 
                  "duration_ms": {
                    "description": "The duration time, in milliseconds. This must be a multiple of the view sampling time.", 
                    "required": true, 
                    "type": "number"
                  }
                }
              }, 
              "repetition_info": {
                "description": "Information about how many times the treshold needs to be crossed in order for the event to become signaled", 
                "required": false, 
                "type": "object", 
                "properties": {
                  "number_of_times": {
                    "description": "How many times the treshold needs to be crossed in order for the event to become signaled", 
                    "required": true, 
                    "type": "number"
                  }
                }
              }, 
              "condition_operator": {
                "description": "The boolean operation to apply: \"And\" or \"Or\"", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "NOT_INITIALIZED", 
                  "AND", 
                  "OR"
                ]
              }, 
              "conditions": {
                "description": "The list of conditions that will have to be validated in order for the event to be satisfied. If multiple conditions are present, the event is satisfied according to the operation value.", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "condition", 
                  "type": "object", 
                  "properties": {
                    "field": {
                      "description": "The numeric (or non-numeric) value that will be checked against the threshold. Non numeric values can be checked with the Equal, NotEqual and Exists operators. NOTE: the field name refers to the database column name (e.g. c2 or c5) (the base number is 1).", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "condition_info": {
                      "description": "Generic information about this threshold", 
                      "required": true, 
                      "type": "object", 
                      "properties": {
                        "check_type": {
                          "description": "The type of check to perform", 
                          "required": true, 
                          "type": "string", 
                          "enum": [
                            "EQUAL", 
                            "NOT_EQUAL", 
                            "LESS", 
                            "LESS_OR_EQUAL", 
                            "GREATER", 
                            "GREATER_OR_EQUAL", 
                            "INSIDE_RANGE", 
                            "OUTSIDE_RANGE", 
                            "EXISTS", 
                            "TOPN_CHANGED"
                          ]
                        }, 
                        "value": {
                          "description": "The threshold value", 
                          "required": false, 
                          "type": "string"
                        }, 
                        "second_value": {
                          "description": "Second threshold value, when supported (e.g. Inside/Outside range).", 
                          "required": false, 
                          "type": "string"
                        }, 
                        "aggregation_type": {
                          "description": "The type of threshold value", 
                          "required": true, 
                          "type": "string", 
                          "enum": [
                            "VALUE", 
                            "PERCENTAGE", 
                            "SUMVALUE", 
                            "SUMPERCENTAGE", 
                            "COUNT"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }, 
        "actions": {
          "description": "The actions to be performed when one or more events are signaled. Action examples are: start dumping to disk, create a report, start a view, etc.", 
          "required": true, 
          "type": "object", 
          "properties": {
            "fired_triggers": {
              "description": "The list of events that need to be signaled AT THE SAME TIME in order for the watch actions to run", 
              "required": true, 
              "type": "object", 
              "properties": {
                "bool_operator": {
                  "description": "The boolean operation to apply: \"And\" or \"Or\"", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "NOT_INITIALIZED", 
                    "AND", 
                    "OR"
                  ]
                }, 
                "triggering_mode": {
                  "description": "The condition that will cause a line to be considered true", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "ONESHOT", 
                    "LEADINGEDGE", 
                    "CONTINUOUS", 
                    "TRAILINGEDGE", 
                    "LEADING_AND_TRAILING_EDGE"
                  ]
                }, 
                "triggers": {
                  "description": "The List of unique ids of the events that need to be signaled", 
                  "required": true, 
                  "type": "array", 
                  "items": {
                    "type": "string", 
                    "id": "trigger_uid"
                  }
                }
              }
            }, 
            "actions": {
              "description": "Action list", 
              "required": true, 
              "type": "array", 
              "items": {
                "id": "action", 
                "type": "object", 
                "properties": {
                  "uid": {
                    "description": "Action Id", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "type": {
                    "description": "The type of action. This must correspond to the name of a Shark Probe's action plugin.", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "side": {
                    "description": "Who is in charge of performing the action, either server or client", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "CLIENT", 
                      "SERVER"
                    ]
                  }, 
                  "parameters": {
                    "description": "Parameter list", 
                    "required": true, 
                    "type": "array", 
                    "items": {
                      "id": "parameter", 
                      "type": "object", 
                      "properties": {
                        "name": {
                          "description": "Parameter name", 
                          "required": true, 
                          "type": "string"
                        }, 
                        "value": {
                          "description": "Parameter value", 
                          "required": true, 
                          "type": "string"
                        }, 
                        "custom": {
                          "description": "True if it is a custom parameter", 
                          "required": false, 
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }, 
    "view": {
      "properties": {
        "info": {
          "description": "View information section", 
          "required": false, 
          "type": "object", 
          "properties": {
            "title": {
              "description": "View title", 
              "required": false, 
              "type": "string"
            }, 
            "description": {
              "description": "View description", 
              "required": false, 
              "type": "string"
            }
          }
        }, 
        "parameters": {
          "description": "View main configuration parameters section", 
          "required": true, 
          "type": "object", 
          "properties": {
            "sampling_time_msec": {
              "description": "View data sampling time", 
              "required": false, 
              "default": "1000", 
              "type": "number"
            }, 
            "retention_time_msec": {
              "description": "Data retention time: data collected for a view will be deleted after the retention time elapsed", 
              "required": false, 
              "default": "86400000", 
              "type": "number"
            }, 
            "autoclose_idle_timeout_msec": {
              "description": "Autoclose timeout: if set, the view will be closed if it is not accessed for a period of time equal to the timeout value", 
              "required": false, 
              "default": "0", 
              "type": "number"
            }
          }
        }, 
        "input_source": {
          "description": "Input source configuration", 
          "required": true, 
          "type": "object", 
          "properties": {
            "path": {
              "description": "Path of the source to open", 
              "notes": "Specifies a job, clip, file or live device. Must start with the source type, e.g. fs/admin/trace.pcap or interfaces/tc0", 
              "required": true, 
              "type": "string"
            }, 
            "disable_index": {
              "description": "If true, the source will not be allowed to use an index to speed up the processing", 
              "required": false, 
              "type": "boolean"
            }, 
            "filters": {
              "description": "List or filters for this input", 
              "required": true, 
              "type": "array", 
              "items": {
                "id": "filter", 
                "$ref": "filter"
              }
            }
          }
        }, 
        "processors": {
          "description": "Processors configuration", 
          "required": true, 
          "type": "array", 
          "minItems": 1, 
          "items": {
            "id": "processor", 
            "type": "object", 
            "properties": {
              "id": {
                "description": "Processor Id", 
                "required": true, 
                "type": "string"
              }, 
              "keys": {
                "description": "List of fields that will act as keys in this configuration", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "key", 
                  "type": "object", 
                  "properties": {
                    "field": {
                      "description": "Field name according to the Shark syntax", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "id": {
                      "description": "Alias that can be given to the field, used as identifier in the output configuration", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "default_value": {
                      "description": "Default value, if needed", 
                      "required": false, 
                      "type": "string"
                    }
                  }
                }
              }, 
              "metrics": {
                "description": "List of fields that will act as metrics in this configuration", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "metric", 
                  "type": "object", 
                  "properties": {
                    "field": {
                      "description": "Field name according to the Shark syntax", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "operation": {
                      "description": "Calculation type", 
                      "required": true, 
                      "type": "string", 
                      "enum": [
                        "NONE", 
                        "SUM", 
                        "MAX", 
                        "MIN", 
                        "AVG", 
                        "TIME_AVG"
                      ]
                    }, 
                    "id": {
                      "description": "Alias that can be given to the field, used as identifier in the output configuration", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "default_value": {
                      "description": "Default value, if needed", 
                      "required": false, 
                      "type": "string"
                    }
                  }
                }
              }, 
              "filters": {
                "description": "Filter list for the processor", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "filter", 
                  "$ref": "filter"
                }
              }, 
              "outputs": {
                "description": "Output list for the processor", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "output", 
                  "type": "object", 
                  "properties": {
                    "id": {
                      "description": "Output Id", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "fields": {
                      "description": "List of requested fields in the output", 
                      "required": true, 
                      "type": "array", 
                      "items": {
                        "id": "field", 
                        "type": "object", 
                        "properties": {
                          "id": {
                            "description": "Id of the field. This is the same of the processor configuration.", 
                            "required": true, 
                            "type": "string"
                          }, 
                          "description": {
                            "description": "Description, if needed", 
                            "required": false, 
                            "type": "string"
                          }, 
                          "operation": {
                            "description": "Further output operation, if needed. Notice that using this might reduce performance.", 
                            "required": false, 
                            "default": "NONE", 
                            "type": "string", 
                            "enum": [
                              "NONE", 
                              "AVG", 
                              "COUNT", 
                              "MAX", 
                              "MIN", 
                              "SUM"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }, 
            "description": "Processor configuration"
          }
        }, 
        "watches": {
          "description": "Watch list", 
          "required": true, 
          "type": "array", 
          "id": "watches", 
          "items": {
            "id": "watch", 
            "$ref": "watch"
          }, 
          "example": [
            {
              "info": {
                "name": "Watch 1"
              }, 
              "severity": 6, 
              "triggers": [
                {
                  "uid": "Trigger 1", 
                  "dimension_restrictions": {
                    "sub_restrictions": [], 
                    "restrictions": [
                      {
                        "field": "c1", 
                        "value": "Web"
                      }
                    ], 
                    "bool_operator": "OR"
                  }, 
                  "condition_operator": "AND", 
                  "bool_operator": "OR", 
                  "conditions": [
                    {
                      "field": "c2", 
                      "condition_info": {
                        "aggregation_type": "VALUE", 
                        "check_type": "GREATER", 
                        "value": "0"
                      }
                    }
                  ]
                }
              ], 
              "watch_uid": "watch_1", 
              "enabled": true, 
              "actions": {
                "actions": [
                  {
                    "type": "InternalDBLog", 
                    "uid": "Action 1", 
                    "parameters": [], 
                    "side": "SERVER"
                  }
                ], 
                "fired_triggers": {
                  "bool_operator": "AND", 
                  "triggering_mode": "LEADINGEDGE", 
                  "triggers": [
                    "Trigger 1"
                  ]
                }
              }, 
              "timing": {
                "time_analysis_mode": "SAMPLE_BY_SAMPLE", 
                "from": "NOW", 
                "interval_ms": 1000
              }, 
              "output_uid": "OUID_Output_Over_Time"
            }
          ]
        }, 
        "client_config": {
          "description": "Client-specific section, not used by Shark", 
          "notes": "Encoded as CDATA in XML", 
          "required": false, 
          "type": "string"
        }
      }, 
      "description": "View configuration", 
      "id": "view", 
      "xmlExample": "<view>\n  <info description=\"Network Usage by Traffic Type\" title=\"Network Usage by Traffic Type\"/>\n  <input_source disable_index=\"false\" path=\"fs/admin/pcap/noon.cap\">\n    <filters>\n      <filter type=\"SHARK\" value=\"generic.frame.valid = true\"/>\n      <filter type=\"DECRYPT\" value=\"true\"/>\n    </filters>\n  </input_source>\n  <processors>\n    <processor id=\"PUID_Overview_Grid\">\n      <keys>\n        <key field=\"generic.application\" id=\"c1\"/>\n      </keys>\n      <metrics>\n        <metric field=\"generic.bits\" id=\"c2\" operation=\"TIME_AVG\"/>\n        <metric field=\"generic.bits\" id=\"c3\" operation=\"SUM\"/>\n      </metrics>\n      <filters/>\n      <outputs>\n        <output id=\"OUID_Output_Over_Time\">\n          <fields>\n            <field description=\"Traffic Type\" id=\"c1\"/>\n            <field description=\"Bits\" id=\"c2\"/>\n          </fields>\n        </output>\n        <output id=\"OUID_Output_Aggregated\">\n          <fields>\n            <field description=\"Traffic Type\" id=\"c1\"/>\n            <field description=\"Bits\" id=\"c3\"/>\n          </fields>\n        </output>\n      </outputs>\n    </processor>\n  </processors>\n  <parameters retention_time_msec=\"86400000\" sampling_time_msec=\"1000\"/>\n  <watches/>\n  <client_config><![CDATA[<CACEPilotConfiguration xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"..\\..\\..\\..\\..\\specs\\XML\\PilotConfig.xsd\"><Version Client=\"3.6\"/><Info><Title>Network Usage by Traffic Type</Title><Description>Network Usage by Traffic Type</Description><Info>This view gives a great overview of how the network is utilized by the different protocols and applications. It breaks the network traffic into the following categories: Routing, Web, Email, Data Transfer, SSH/Telnet, MS networking, SNMP, VPN/Tunnel, Remote-Desktop, VoIP, Database, IM.</Info><Notes Subject=\"Warning\">The protocol transported by TCP or UDP are discovered by a port lookup, not by payload inspection. This makes this view very fast and suitable for high speed networks. On the other side, it could cause false positives. For example, all the traffic on TCP port 80 will be reported as &quot;Web&quot;.</Notes></Info><DisplaysData><DisplayData DisplayUId=\"DUID_Over_Time\"><DataSources><DataSource OutputUId=\"OUID_Output_Over_Time\" RefreshInterval=\"1000\"/></DataSources></DisplayData><DisplayData DisplayUId=\"DUID_Total\"><DataSources><DataSource OutputUId=\"OUID_Output_Aggregated\" RefreshInterval=\"1000\"/></DataSources></DisplayData><DisplayData DisplayUId=\"DUID_Total_Pie\"><DataSources><DataSource OutputUId=\"OUID_Output_Aggregated\" RefreshInterval=\"1000\"/></DataSources></DisplayData></DisplaysData><DisplaysUI><DisplayUI ComponentName=\"StripChart\" DisplayUId=\"DUID_Over_Time\"><DisplayProperties><Property Name=\"Title\" Value=\"Bits Over Time\"/><Property Name=\"ColorRule\" Value=\"Dimension\"/><Property Name=\"ColorParameter\" Value=\"x0\"/><Property Name=\"TimeFormatStr\" Value=\"HH:mm:ss \"/><Property Name=\"LegendDimension\" Value=\"113\"/><Property Name=\"YAxisLabel\" Value=\"Bits/s\"/></DisplayProperties><Help><Text>Amount of bits per second for each type of network traffic, charted over time.</Text></Help></DisplayUI><DisplayUI ComponentName=\"SingleBars\" DisplayUId=\"DUID_Total\"><DisplayProperties><Property Name=\"Title\" Value=\"Total Bits\"/><Property Name=\"ShowLegend\" Value=\"False\"/><Property Name=\"LegendDimension\" Value=\"105\"/><Property Name=\"YAxisLabel\" Value=\"Total Bits\"/><Property Name=\"PxFromBottomBorder\" Value=\"60\"/><Property Name=\"UserPageSize\" Value=\"30\"/><Property Name=\"ColorRule\" Value=\"Dimension\"/><Property Name=\"ColorParameter\" Value=\"x0\"/></DisplayProperties><Help Visible=\"False\"><Text>Total network usage for the different types of network traffic, during the visualized time interval.</Text></Help></DisplayUI><DisplayUI ComponentName=\"Pie\" DisplayUId=\"DUID_Total_Pie\"><DisplayProperties><Property Name=\"Title\" Value=\"Relative Network Usage\"/><Property Name=\"LegendPosition\" Value=\"Right\"/><Property Name=\"PieLabelType\" Value=\"Percentage\"/><Property Name=\"ColorParameter\" Value=\"x0\"/><Property Name=\"ColorRule\" Value=\"Dimension\"/></DisplayProperties><Help><Text>Relative network usage for the different types of network traffic, during the visualized time interval.</Text></Help></DisplayUI><DisplaysUILayout><dotnetbarlayout version=\"6\" zorder=\"3,4,1,2\"><documents><dockcontainer h=\"0\" orientation=\"1\" w=\"0\"><barcontainer h=\"311\" w=\"978\"><bar dockline=\"0\" dockoffset=\"0\" dockside=\"5\" layout=\"2\" name=\"BaseBar\" seldocktab=\"0\" state=\"2\" visible=\"true\"><items><item name=\"DUID_Over_Time\" origBar=\"\" origPos=\"-1\" pos=\"0\"/></items></bar></barcontainer><dockcontainer h=\"311\" orientation=\"0\" w=\"978\"><barcontainer h=\"279\" w=\"487\"><bar ahanim=\"0\" autocaptionsync=\"true\" cancust=\"false\" candockbottom=\"false\" candockdoc=\"true\" candockleft=\"false\" candockright=\"false\" candocktab=\"true\" candocktop=\"false\" canhide=\"false\" canundock=\"false\" custom=\"true\" dockline=\"0\" dockside=\"5\" eqbutton=\"false\" fontemsize=\"8.25\" fontname=\"Microsoft Sans Serif\" fontstyle=\"0\" grabhandle=\"0\" imagesize=\"0\" itemsp=\"0\" layout=\"2\" menubar=\"false\" name=\"DUID_Total\" seldocktab=\"0\" showtab=\"true\" state=\"2\" stretch=\"true\" style=\"4\" tabalign=\"2\" tabnav=\"true\" text=\"Total Bits\" themes=\"false\" visible=\"true\" wrapdock=\"false\" wrapfloat=\"true\"><items><item name=\"DUID_Total\" origBar=\"\" origPos=\"-1\" pos=\"0\"/></items></bar></barcontainer><barcontainer h=\"279\" w=\"488\"><bar ahanim=\"0\" autocaptionsync=\"true\" cancust=\"false\" candockbottom=\"false\" candockdoc=\"true\" candockleft=\"false\" candockright=\"false\" candocktab=\"true\" candocktop=\"false\" canhide=\"false\" canundock=\"false\" custom=\"true\" dockline=\"0\" dockside=\"5\" eqbutton=\"false\" fontemsize=\"8.25\" fontname=\"Microsoft Sans Serif\" fontstyle=\"0\" grabhandle=\"0\" imagesize=\"0\" itemsp=\"0\" layout=\"2\" menubar=\"false\" name=\"DUID_Total_Pie\" seldocktab=\"0\" showtab=\"true\" state=\"2\" stretch=\"true\" style=\"4\" tabalign=\"2\" tabnav=\"true\" text=\"Relative Network Usage\" themes=\"false\" visible=\"true\" wrapdock=\"false\" wrapfloat=\"true\"><items><item name=\"DUID_Total_Pie\" origBar=\"\" origPos=\"-1\" pos=\"0\"/></items></bar></barcontainer></dockcontainer></dockcontainer></documents><bars/></dotnetbarlayout></DisplaysUILayout></DisplaysUI></CACEPilotConfiguration>\n]]>\n</client_config>\n</view>", 
      "type": "object", 
      "example": {
        "info": {
          "description": "Network Usage by Traffic Type", 
          "title": "Network Usage by Traffic Type"
        }, 
        "processors": [
          {
            "keys": [
              {
                "field": "generic.application", 
                "id": "c1"
              }
            ], 
            "metrics": [
              {
                "field": "generic.bits", 
                "operation": "TIME_AVG", 
                "id": "c2"
              }, 
              {
                "field": "generic.bits", 
                "operation": "SUM", 
                "id": "c3"
              }
            ], 
            "id": "PUID_Overview_Grid", 
            "filters": [], 
            "outputs": [
              {
                "fields": [
                  {
                    "id": "c1", 
                    "description": "Traffic Type"
                  }, 
                  {
                    "id": "c2", 
                    "description": "Bits"
                  }
                ], 
                "id": "OUID_Output_Over_Time"
              }, 
              {
                "fields": [
                  {
                    "id": "c1", 
                    "description": "Traffic Type"
                  }, 
                  {
                    "id": "c3", 
                    "description": "Bits"
                  }
                ], 
                "id": "OUID_Output_Aggregated"
              }
            ]
          }
        ], 
        "parameters": {
          "sampling_time_msec": 1000, 
          "retention_time_msec": 86400000
        }, 
        "watches": [], 
        "client_config": "<CACEPilotConfiguration xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"..\\..\\..\\..\\..\\specs\\XML\\PilotConfig.xsd\">\n\t<Version Client=\"3.6\"/>\n\t<Info>\n\t\t<Title>Network Usage by Traffic Type</Title>\n\t\t<Description>Network Usage by Traffic Type</Description>\n\t\t<Info>This view gives a great overview of how the network is utilized by the different protocols and applications. It breaks the network traffic into the following categories: Routing, Web, Email, Data Transfer, SSH/Telnet, MS networking, SNMP, VPN/Tunnel, Remote-Desktop, VoIP, Database, IM.</Info>\n\t\t<Notes Subject=\"Warning\">The protocol transported by TCP or UDP are discovered by a port lookup, not by payload inspection. This makes this view very fast and suitable for high speed networks. On the other side, it could cause false positives. For example, all the traffic on TCP port 80 will be reported as &quot;Web&quot;.</Notes>\n\t</Info>\n\t<DisplaysData>\n\t\t<DisplayData DisplayUId=\"DUID_Over_Time\">\n\t\t\t<DataSources>\n\t\t\t\t<DataSource OutputUId=\"OUID_Output_Over_Time\" RefreshInterval=\"1000\"/>\n\t\t\t</DataSources>\n\t\t</DisplayData>\n\t\t<DisplayData DisplayUId=\"DUID_Total\">\n\t\t\t<DataSources>\n\t\t\t\t<DataSource OutputUId=\"OUID_Output_Aggregated\" RefreshInterval=\"1000\"/>\n\t\t\t</DataSources>\n\t\t</DisplayData>\n\t\t<DisplayData DisplayUId=\"DUID_Total_Pie\">\n\t\t\t<DataSources>\n\t\t\t\t<DataSource OutputUId=\"OUID_Output_Aggregated\" RefreshInterval=\"1000\"/>\n\t\t\t</DataSources>\n\t\t</DisplayData>\n\t</DisplaysData>\n\t<DisplaysUI>\n\t\t<DisplayUI ComponentName=\"StripChart\" DisplayUId=\"DUID_Over_Time\">\n\t\t\t<DisplayProperties>\n\t\t\t\t<Property Name=\"Title\" Value=\"Bits Over Time\"/>\n\t\t\t\t<Property Name=\"ColorRule\" Value=\"Dimension\"/>\n\t\t\t\t<Property Name=\"ColorParameter\" Value=\"x0\"/>\n\t\t\t\t<Property Name=\"TimeFormatStr\" Value=\"HH:mm:ss \"/>\n\t\t\t\t<Property Name=\"LegendDimension\" Value=\"113\"/>\n\t\t\t\t<Property Name=\"YAxisLabel\" Value=\"Bits/s\"/>\n\t\t\t</DisplayProperties>\n\t\t\t<Help>\n\t\t\t\t<Text>Amount of bits per second for each type of network traffic, charted over time.</Text>\n\t\t\t</Help>\n\t\t</DisplayUI>\n\t\t<DisplayUI ComponentName=\"SingleBars\" DisplayUId=\"DUID_Total\">\n\t\t\t<DisplayProperties>\n\t\t\t\t<Property Name=\"Title\" Value=\"Total Bits\"/>\n\t\t\t\t<Property Name=\"ShowLegend\" Value=\"False\"/>\n\t\t\t\t<Property Name=\"LegendDimension\" Value=\"105\"/>\n\t\t\t\t<Property Name=\"YAxisLabel\" Value=\"Total Bits\"/>\n\t\t\t\t<Property Name=\"PxFromBottomBorder\" Value=\"60\"/>\n\t\t\t\t<Property Name=\"UserPageSize\" Value=\"30\"/>\n\t\t\t\t<Property Name=\"ColorRule\" Value=\"Dimension\"/>\n\t\t\t\t<Property Name=\"ColorParameter\" Value=\"x0\"/>\n\t\t\t</DisplayProperties>\n\t\t\t<Help Visible=\"False\">\n\t\t\t\t<Text>Total network usage for the different types of network traffic, during the visualized time interval.</Text>\n\t\t\t</Help>\n\t\t</DisplayUI>\n\t\t<DisplayUI ComponentName=\"Pie\" DisplayUId=\"DUID_Total_Pie\">\n\t\t\t<DisplayProperties>\n\t\t\t\t<Property Name=\"Title\" Value=\"Relative Network Usage\"/>\n\t\t\t\t<Property Name=\"LegendPosition\" Value=\"Right\"/>\n\t\t\t\t<Property Name=\"PieLabelType\" Value=\"Percentage\"/>\n\t\t\t\t<Property Name=\"ColorParameter\" Value=\"x0\"/>\n\t\t\t\t<Property Name=\"ColorRule\" Value=\"Dimension\"/>\n\t\t\t</DisplayProperties>\n\t\t\t<Help>\n\t\t\t\t<Text>Relative network usage for the different types of network traffic, during the visualized time interval.</Text>\n\t\t\t</Help>\n\t\t</DisplayUI>\n\t\t<DisplaysUILayout>\n\t\t\t<dotnetbarlayout version=\"6\" zorder=\"3,4,1,2\">\n\t\t\t\t<documents>\n\t\t\t\t\t<dockcontainer h=\"0\" orientation=\"1\" w=\"0\">\n\t\t\t\t\t\t<barcontainer h=\"311\" w=\"978\">\n\t\t\t\t\t\t\t<bar dockline=\"0\" dockoffset=\"0\" dockside=\"5\" layout=\"2\" name=\"BaseBar\" seldocktab=\"0\" state=\"2\" visible=\"true\">\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<item name=\"DUID_Over_Time\" origBar=\"\" origPos=\"-1\" pos=\"0\"/>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</bar>\n\t\t\t\t\t\t</barcontainer>\n\t\t\t\t\t\t<dockcontainer h=\"311\" orientation=\"0\" w=\"978\">\n\t\t\t\t\t\t\t<barcontainer h=\"279\" w=\"487\">\n\t\t\t\t\t\t\t\t<bar ahanim=\"0\" autocaptionsync=\"true\" cancust=\"false\" candockbottom=\"false\" candockdoc=\"true\" candockleft=\"false\" candockright=\"false\" candocktab=\"true\" candocktop=\"false\" canhide=\"false\" canundock=\"false\" custom=\"true\" dockline=\"0\" dockside=\"5\" eqbutton=\"false\" fontemsize=\"8.25\" fontname=\"Microsoft Sans Serif\" fontstyle=\"0\" grabhandle=\"0\" imagesize=\"0\" itemsp=\"0\" layout=\"2\" menubar=\"false\" name=\"DUID_Total\" seldocktab=\"0\" showtab=\"true\" state=\"2\" stretch=\"true\" style=\"4\" tabalign=\"2\" tabnav=\"true\" text=\"Total Bits\" themes=\"false\" visible=\"true\" wrapdock=\"false\" wrapfloat=\"true\">\n\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t<item name=\"DUID_Total\" origBar=\"\" origPos=\"-1\" pos=\"0\"/>\n\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t</bar>\n\t\t\t\t\t\t\t</barcontainer>\n\t\t\t\t\t\t\t<barcontainer h=\"279\" w=\"488\">\n\t\t\t\t\t\t\t\t<bar ahanim=\"0\" autocaptionsync=\"true\" cancust=\"false\" candockbottom=\"false\" candockdoc=\"true\" candockleft=\"false\" candockright=\"false\" candocktab=\"true\" candocktop=\"false\" canhide=\"false\" canundock=\"false\" custom=\"true\" dockline=\"0\" dockside=\"5\" eqbutton=\"false\" fontemsize=\"8.25\" fontname=\"Microsoft Sans Serif\" fontstyle=\"0\" grabhandle=\"0\" imagesize=\"0\" itemsp=\"0\" layout=\"2\" menubar=\"false\" name=\"DUID_Total_Pie\" seldocktab=\"0\" showtab=\"true\" state=\"2\" stretch=\"true\" style=\"4\" tabalign=\"2\" tabnav=\"true\" text=\"Relative Network Usage\" themes=\"false\" visible=\"true\" wrapdock=\"false\" wrapfloat=\"true\">\n\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t<item name=\"DUID_Total_Pie\" origBar=\"\" origPos=\"-1\" pos=\"0\"/>\n\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t</bar>\n\t\t\t\t\t\t\t</barcontainer>\n\t\t\t\t\t\t</dockcontainer>\n\t\t\t\t\t</dockcontainer>\n\t\t\t\t</documents>\n\t\t\t\t<bars/>\n\t\t\t</dotnetbarlayout>\n\t\t</DisplaysUILayout>\n\t</DisplaysUI>\n</CACEPilotConfiguration>\n", 
        "input_source": {
          "disable_index": false, 
          "path": "fs/admin/pcap/noon.cap", 
          "filters": [
            {
              "type": "SHARK", 
              "value": "generic.frame.valid = true"
            }, 
            {
              "type": "DECRYPT", 
              "value": "true"
            }
          ]
        }
      }
    }, 
    "group": {
      "description": "Definition of a user group", 
      "example": {
        "name": "Administrators", 
        "capabilities": [
          "CAPABILITY_ADMINISTRATOR"
        ], 
        "description": "Administrators"
      }, 
      "type": "object", 
      "id": "group", 
      "properties": {
        "name": {
          "description": "Group name", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "Group description", 
          "required": true, 
          "type": "string"
        }, 
        "capabilities": {
          "description": "Specifies the list of capabilities for the group", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "capability", 
            "type": "string", 
            "description": "Specifies the capabilities of the group", 
            "enum": [
              "CAPABILITY_ADMINISTRATOR", 
              "CAPABILITY_APPLY_VIEWS_ON_FILES", 
              "CAPABILITY_APPLY_VIEWS_ON_INTERFACES", 
              "CAPABILITY_SHARE_VIEWS", 
              "CAPABILITY_CREATE_FILES", 
              "CAPABILITY_IMPORT_FILES", 
              "CAPABILITY_EXPORT_FILES", 
              "CAPABILITY_CREATE_JOBS", 
              "CAPABILITY_SCHEDULE_WATCHES", 
              "CAPABILITY_ACCESS_PROBE_FILES"
            ]
          }
        }
      }
    }, 
    "user": {
      "description": "Information about a user account", 
      "example": {
        "is_locked": false, 
        "can_be_locked": false, 
        "is_admin": true, 
        "name": "admin", 
        "groups": [
          "Administrators"
        ]
      }, 
      "type": "object", 
      "id": "user", 
      "properties": {
        "name": {
          "description": "User name", 
          "required": true, 
          "type": "string"
        }, 
        "is_admin": {
          "description": "Indication if the user is an administrator", 
          "required": true, 
          "type": "boolean"
        }, 
        "is_locked": {
          "description": "Indication if the user account is locked", 
          "required": true, 
          "type": "boolean"
        }, 
        "can_be_locked": {
          "description": "Indication if the user account can be locked", 
          "required": true, 
          "type": "boolean"
        }, 
        "groups": {
          "required": true, 
          "type": "array", 
          "description": "List of groups of which the user is a member", 
          "items": {
            "type": "string", 
            "id": "group"
          }
        }
      }
    }, 
    "basic_settings": {
      "description": "Basic Shark configuration options", 
      "example": {
        "ntp_config": {
          "profiler_mode": false, 
          "servers": [
            "10.0.0.1", 
            "10.0.0.2"
          ]
        }, 
        "domain": "riverbed.com", 
        "primary_dns": "10.1.0.1", 
        "hostname": "shark", 
        "fips_enabled": false, 
        "mgmt_ports": [
          {
            "enabled": true, 
            "netmask": "", 
            "interface": "eth0", 
            "dhcp": true, 
            "ip_address": "", 
            "gateway": ""
          }, 
          {
            "enabled": false, 
            "netmask": "255.255.255.0", 
            "interface": "eth1", 
            "dhcp": false, 
            "ip_address": "172.16.22.33", 
            "gateway": "172.16.22.11"
          }
        ], 
        "timezone": "America/Los_Angeles", 
        "secondary_dns": "172.16.1.1", 
        "ssh_enabled": true
      }, 
      "type": "object", 
      "id": "basic_settings", 
      "properties": {
        "hostname": {
          "description": "Shark host name", 
          "required": true, 
          "type": "string"
        }, 
        "domain": {
          "description": "Network domain", 
          "required": true, 
          "type": "string"
        }, 
        "primary_dns": {
          "description": "Primary DNS server", 
          "required": true, 
          "type": "string"
        }, 
        "secondary_dns": {
          "description": "Secondary DNS server", 
          "required": false, 
          "type": "string"
        }, 
        "ssh_enabled": {
          "description": "'true' if SSH access to this shark is enabled, 'false' otherwise", 
          "required": true, 
          "type": "boolean"
        }, 
        "fips_enabled": {
          "description": "'true' if FIPS mode is enabled, 'false' otherwise", 
          "required": true, 
          "type": "boolean"
        }, 
        "timezone": {
          "description": "Time zone (from IANA Time Zone Database) of this Shark", 
          "required": true, 
          "type": "string"
        }, 
        "ntp_config": {
          "description": "Shark NTP Configuration", 
          "required": true, 
          "type": "object", 
          "properties": {
            "profiler_mode": {
              "description": "'true' if Profiler acts as NTP server, 'false' otherwise", 
              "required": true, 
              "type": "boolean"
            }, 
            "servers": {
              "description": "List of NTP Servers", 
              "required": true, 
              "type": "array", 
              "items": {
                "type": "string", 
                "id": "server"
              }
            }
          }
        }, 
        "mgmt_ports": {
          "description": "List of management ports", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "port", 
            "type": "object", 
            "properties": {
              "interface": {
                "description": "Interface name", 
                "required": true, 
                "type": "string"
              }, 
              "enabled": {
                "description": "'true' if enabled, 'false' if disabled", 
                "required": false, 
                "type": "boolean"
              }, 
              "dhcp": {
                "description": "'true' if DHCP is enabled on this interface, 'false' otherwise", 
                "required": true, 
                "type": "boolean"
              }, 
              "ip_address": {
                "description": "IPV4 address for this interface (empty if DHCP is enabled)", 
                "required": true, 
                "type": "string"
              }, 
              "netmask": {
                "description": "Network mask for this interface (empty of DHCP is enabled)", 
                "required": true, 
                "type": "string"
              }, 
              "gateway": {
                "description": "Network gateway for this interface (empty if DHCP is enabled)", 
                "required": true, 
                "type": "string"
              }
            }, 
            "description": "Shark management port configuration"
          }
        }
      }
    }, 
    "auth_settings": {
      "description": "Authentication settings", 
      "example": {
        "local_settings": {
          "min_password_length": 8, 
          "password_change_history": 10, 
          "min_password_special_character": 1, 
          "min_password_upper_letter": 1, 
          "max_unsuccessful_login_attempts": 3, 
          "min_password_lower_letter": 1, 
          "max_password_lifetime_days": 90, 
          "min_password_numeric_character": 1
        }, 
        "radius_settings": {
          "client_port": "na", 
          "servers": [], 
          "encryption_protocol": "PAP", 
          "accounting_enabled": false
        }, 
        "tacacs_settings": {
          "accounting_terminator": "2>&1", 
          "accounting_enabled": true, 
          "accounting_value": "cace", 
          "authorization_value": "cace", 
          "servers": [
            {
              "shared_secret": "key", 
              "port": 49, 
              "address": "10.1.1.1"
            }
          ], 
          "client_port": "ttyp6", 
          "authorization_response_attribute": "*", 
          "authorization_attribute": "service", 
          "accounting_attribute": "task_id"
        }, 
        "auth_sequence": [
          "LOCAL", 
          "TACACS"
        ], 
        "remote_auth_settings": {
          "fallback_on_unavailable_only": true, 
          "default_group": "Administrators"
        }, 
        "webui_settings": {
          "login_banner": "Welcome to Shark.", 
          "need_purpose": false, 
          "session_duration": 60
        }
      }, 
      "type": "object", 
      "id": "auth_settings", 
      "properties": {
        "webui_settings": {
          "description": "WebUI configuration settings for this Shark", 
          "required": true, 
          "type": "object", 
          "id": "webui_settings", 
          "properties": {
            "need_purpose": {
              "description": "Enabled if the user should be prompted to specify a purpose during login", 
              "required": true, 
              "type": "boolean"
            }, 
            "session_duration": {
              "description": "Session inactivity timeout", 
              "notes": "In minutes", 
              "required": true, 
              "type": "number"
            }, 
            "login_banner": {
              "description": "Login banner", 
              "required": true, 
              "type": "string"
            }
          }
        }, 
        "auth_sequence": {
          "description": "List of authentication mechanisms used by Shark", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "auth_type", 
            "type": "string", 
            "description": "Authentication Mode", 
            "enum": [
              "LOCAL", 
              "TACACS", 
              "RADIUS"
            ]
          }
        }, 
        "remote_auth_settings": {
          "description": "Additional authentication parameter settings for TACACS+ and RADIUS servers", 
          "required": false, 
          "type": "object", 
          "id": "remote_auth_settings", 
          "properties": {
            "default_group": {
              "description": "Default group used for remote authentication", 
              "required": true, 
              "type": "string"
            }, 
            "fallback_on_unavailable_only": {
              "description": "'true' fallbacks to the next authentication mechanism if TACACS+ or RADIUS servers are unavailable, 'false' otherwise", 
              "required": true, 
              "type": "boolean"
            }
          }
        }, 
        "local_settings": {
          "description": "Local authentication type parameters", 
          "required": true, 
          "type": "object", 
          "id": "local_settings", 
          "properties": {
            "max_unsuccessful_login_attempts": {
              "description": "Number of unsuccessful attempts before user is locked out", 
              "required": true, 
              "type": "number"
            }, 
            "min_password_length": {
              "description": "Minimum password length", 
              "required": true, 
              "type": "number"
            }, 
            "min_password_upper_letter": {
              "description": "Minimum number of upper-case letters", 
              "required": true, 
              "type": "number"
            }, 
            "min_password_lower_letter": {
              "description": "Minimum number of lower-case letters", 
              "required": true, 
              "type": "number"
            }, 
            "min_password_numeric_character": {
              "description": "Minimum number of numeric characters", 
              "required": true, 
              "type": "number"
            }, 
            "min_password_special_character": {
              "description": "Minimum number of special characters", 
              "required": true, 
              "type": "number"
            }, 
            "password_change_history": {
              "description": "Number of previous user passwords stored in history", 
              "required": true, 
              "type": "number"
            }, 
            "max_password_lifetime_days": {
              "description": "Number of days after which password expires", 
              "required": true, 
              "type": "number"
            }
          }
        }, 
        "tacacs_settings": {
          "description": "TACACS+ authentication configuration", 
          "required": true, 
          "type": "object", 
          "id": "tacacs_settings", 
          "properties": {
            "client_port": {
              "description": "Client port", 
              "required": true, 
              "type": "string"
            }, 
            "authorization_attribute": {
              "description": "Authorization attribute", 
              "required": true, 
              "type": "string"
            }, 
            "authorization_value": {
              "description": "Authorization value", 
              "required": true, 
              "type": "string"
            }, 
            "authorization_response_attribute": {
              "description": "Authorization response attribute. If set to '*', only the first attribute-value pair returned by the server will be considered during authorization.", 
              "required": true, 
              "type": "string"
            }, 
            "accounting_enabled": {
              "description": "'true' to enable TACACS+ accounting, 'false' otherwise", 
              "required": true, 
              "type": "boolean"
            }, 
            "accounting_attribute": {
              "description": "Acccounting attribute", 
              "required": true, 
              "type": "string"
            }, 
            "accounting_value": {
              "description": "Accounting value", 
              "required": true, 
              "type": "string"
            }, 
            "accounting_terminator": {
              "description": "Accounting terminator", 
              "required": true, 
              "type": "string"
            }, 
            "servers": {
              "description": "List of server mappings", 
              "required": true, 
              "type": "array", 
              "items": {
                "id": "server", 
                "type": "object", 
                "properties": {
                  "address": {
                    "description": "IP Address", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "port": {
                    "description": "Port number", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "shared_secret": {
                    "description": "Shared secret key", 
                    "required": true, 
                    "type": "string"
                  }
                }
              }
            }
          }
        }, 
        "radius_settings": {
          "description": "RADIUS authentication configuration", 
          "required": true, 
          "type": "object", 
          "id": "radius_settings", 
          "properties": {
            "client_port": {
              "description": "Client port", 
              "required": true, 
              "type": "string"
            }, 
            "encryption_protocol": {
              "required": true, 
              "type": "string", 
              "description": "Encryption protocol", 
              "enum": [
                "PAP", 
                "CHAP", 
                "MSCHAP1", 
                "MSCHAP2"
              ]
            }, 
            "accounting_enabled": {
              "description": "'true' to enable RADIUS accounting, 'false' otherwise", 
              "required": true, 
              "type": "boolean"
            }, 
            "servers": {
              "description": "List of server mappings", 
              "required": true, 
              "type": "array", 
              "items": {
                "id": "server", 
                "type": "object", 
                "properties": {
                  "address": {
                    "description": "IP Address", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "port": {
                    "description": "Port number", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "shared_secret": {
                    "description": "Shared secret key", 
                    "required": true, 
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }, 
    "audit_settings": {
      "description": "Audit system settings", 
      "example": {
        "audit_categories": [
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "AUTHENTICATION", 
            "min_syslog_level": "INFO", 
            "name": "AUTHENTICATION", 
            "description": "Audits login attempts."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "CAPTURE_JOBS", 
            "min_syslog_level": "INFO", 
            "name": "CAPTURE JOBS", 
            "description": "Audits capture jobs."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "CRYPTOGRAPHY", 
            "min_syslog_level": "INFO", 
            "name": "CRYPTOGRAPHY", 
            "description": "Audits cryptographic functions."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "COMMUNICATIONS", 
            "min_syslog_level": "DISABLED", 
            "name": "COMMUNICATIONS", 
            "description": "Audits HTTPS requests."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "FILE_OPERATIONS", 
            "min_syslog_level": "INFO", 
            "name": "FILE OPERATIONS", 
            "description": "Audits file operations."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "LICENSING", 
            "min_syslog_level": "INFO", 
            "name": "LICENSING", 
            "description": "Audits license operations."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "SETTINGS", 
            "min_syslog_level": "INFO", 
            "name": "SETTINGS", 
            "description": "Audits modification to settings."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "SYSTEM_OPERATIONS", 
            "min_syslog_level": "INFO", 
            "name": "SYSTEM OPERATIONS", 
            "description": "Audits system operations."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "USER_MANAGEMENT", 
            "min_syslog_level": "INFO", 
            "name": "USER MANAGEMENT", 
            "description": "Audits users and groups setting."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "VIEWS", 
            "min_syslog_level": "INFO", 
            "name": "VIEWS", 
            "description": "Audits view operations."
          }, 
          {
            "min_remote_server_level": "DISABLED", 
            "audit_type": "WATCHES", 
            "min_syslog_level": "INFO", 
            "name": "WATCHES", 
            "description": "Audits watch operations."
          }
        ]
      }, 
      "type": "object", 
      "id": "audit_settings", 
      "properties": {
        "audit_categories": {
          "description": "List of audit categories", 
          "required": true, 
          "type": "array", 
          "id": "audit_categories", 
          "items": {
            "id": "audit_category", 
            "description": "Information for each audit category", 
            "type": "object", 
            "properties": {
              "name": {
                "description": "Audit category name", 
                "required": true, 
                "type": "string"
              }, 
              "description": {
                "description": "Description of events captured by this audit category", 
                "required": true, 
                "type": "string"
              }, 
              "audit_type": {
                "description": "Audit categories", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "AUTHENTICATION", 
                  "CAPTURE_JOBS", 
                  "CRYPTOGRAPHY", 
                  "COMMUNICATIONS", 
                  "FILE_OPERATIONS", 
                  "LICENSING", 
                  "SETTINGS", 
                  "SYSTEM_OPERATIONS", 
                  "USER_MANAGEMENT", 
                  "VIEWS", 
                  "WATCHES"
                ]
              }, 
              "min_remote_server_level": {
                "description": "Audit levels for each audit category", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "INFO", 
                  "ERROR", 
                  "DISABLED"
                ]
              }, 
              "min_syslog_level": {
                "description": "Audit levels for each audit category", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "INFO", 
                  "ERROR", 
                  "DISABLED"
                ]
              }
            }
          }
        }
      }
    }, 
    "notification_settings": {
      "description": "Configuration for email notifications", 
      "example": {
        "mail": {
          "smtp_server_port": 25, 
          "smtp_server_address": "smtp.foo.com", 
          "to_address": "admin@foo.com", 
          "from_address": "shark@foo.com"
        }, 
        "trap": {
          "receivers": [
            {
              "address": "1.2.3.4", 
              "community": "public", 
              "version": "V1"
            }, 
            {
              "address": "1.2.3.5", 
              "community": "public", 
              "version": "V1"
            }
          ]
        }, 
        "notifier": {
          "notifications": [
            {
              "enabled": true, 
              "id": "m_clock_monitor.time_shift", 
              "description": "Notify every time the system clock is modified"
            }, 
            {
              "enabled": true, 
              "id": "m_link_state_monitor.link_up_down", 
              "description": "Notify when link up/down state changes"
            }, 
            {
              "enabled": true, 
              "id": "m_reboot_monitor.reboot", 
              "description": "Notify every time this Shark appliance is rebooted"
            }, 
            {
              "enabled": true, 
              "id": "m_sa_events.job_change", 
              "description": "Notify whenever there is job status change"
            }, 
            {
              "enabled": true, 
              "id": "m_sa_events.disk_pressure", 
              "description": "Notify whenever there is disk pressure event"
            }, 
            {
              "enabled": true, 
              "id": "m_sa_events.memory_pressure", 
              "description": "Notify whenever there is memory pressure event"
            }, 
            {
              "enabled": true, 
              "id": "m_sa_events.watch_events", 
              "description": "Notify whenever there is watch event"
            }, 
            {
              "enabled": true, 
              "id": "m_sa_events.view_killed_events", 
              "description": "Notify whenever there is a view killed"
            }, 
            {
              "enabled": true, 
              "id": "m_storage_monitor.bad_storage", 
              "description": "Notify whenever there is a change in the packet storage status"
            }
          ], 
          "enabled": true, 
          "trap_notification_enabled": true
        }
      }, 
      "type": "object", 
      "id": "notification_settings", 
      "properties": {
        "mail": {
          "description": "SMTP settings for email notifications", 
          "required": false, 
          "type": "object", 
          "id": "smtp_config", 
          "properties": {
            "from_address": {
              "description": "SMTP 'from' address", 
              "required": true, 
              "type": "string"
            }, 
            "to_address": {
              "description": "SMTP 'to' address", 
              "required": true, 
              "type": "string"
            }, 
            "smtp_server_address": {
              "description": "SMTP server IP address", 
              "required": true, 
              "type": "string"
            }, 
            "smtp_server_port": {
              "description": "SMTP server port (defaults to 25)", 
              "required": false, 
              "type": "number"
            }
          }
        }, 
        "notifier": {
          "description": "Notification settings", 
          "required": true, 
          "type": "object", 
          "id": "notifier_config", 
          "properties": {
            "enabled": {
              "description": "'true' if SMTP notifications are enabled, 'false' otherwise", 
              "required": true, 
              "type": "boolean"
            }, 
            "trap_notification_enabled": {
              "description": "'true' if trap notifications are enabled, 'false' otherwise", 
              "required": false, 
              "type": "boolean"
            }, 
            "notifications": {
              "description": "A list of notification descriptors", 
              "required": true, 
              "type": "array", 
              "id": "notifications", 
              "items": {
                "id": "notification", 
                "description": "A single notification descriptor", 
                "type": "object", 
                "properties": {
                  "id": {
                    "description": "Unique ID for the notification (assigned by the system)", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "description": {
                    "description": "(Optional) Description for the notification", 
                    "required": false, 
                    "type": "string"
                  }, 
                  "enabled": {
                    "description": "'true' if notification is enabled, 'false' otherwise", 
                    "required": true, 
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }, 
        "trap": {
          "description": "Trap notification settings", 
          "required": false, 
          "type": "object", 
          "properties": {
            "receivers": {
              "description": "A list of trap receivers", 
              "required": true, 
              "type": "array", 
              "items": {
                "id": "trap", 
                "type": "object", 
                "properties": {
                  "version": {
                    "description": "SNMP version", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "V1", 
                      "V2C", 
                      "V3"
                    ]
                  }, 
                  "address": {
                    "description": "Receiver address (hostname or IP address)", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "username": {
                    "description": "(Required for V3) SNMP user name", 
                    "required": false, 
                    "type": "string"
                  }, 
                  "engine_id": {
                    "description": "(Required for V3) Unique ID associated with the trap receiver", 
                    "required": false, 
                    "type": "string"
                  }, 
                  "community": {
                    "description": "(Required for V1 and V2C) SNMP community string", 
                    "required": false, 
                    "type": "string"
                  }, 
                  "security_level": {
                    "description": "(Required for V3) SNMP security level", 
                    "required": false, 
                    "type": "string", 
                    "enum": [
                      "NO_AUTH_NO_PRIVACY", 
                      "AUTH_NO_PRIVACY", 
                      "AUTH_PRIVACY"
                    ]
                  }, 
                  "authentication": {
                    "description": "(Required with SNMP authentication) SNMP authentication information", 
                    "required": false, 
                    "type": "object", 
                    "properties": {
                      "passphrase": {
                        "description": "Authentication passphrase (must be at least 8 characters long)", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "protocol": {
                        "description": "Authentication protocol", 
                        "required": true, 
                        "type": "string", 
                        "enum": [
                          "MD5", 
                          "SHA"
                        ]
                      }
                    }
                  }, 
                  "privacy": {
                    "description": "(Required with SNMP privacy) SNMP privacy information", 
                    "required": false, 
                    "type": "object", 
                    "properties": {
                      "passphrase": {
                        "description": "Privacy passphrase (must be at least 8 characters long)", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "protocol": {
                        "description": "Privacy protocol", 
                        "required": true, 
                        "type": "string", 
                        "enum": [
                          "DES", 
                          "AES"
                        ]
                      }
                    }
                  }
                }, 
                "description": "SNMP trap receiver configuration"
              }
            }
          }
        }
      }
    }, 
    "snmp_settings": {
      "description": "SNMP configuration for this Shark", 
      "example": {
        "username": "admin", 
        "version": "V3", 
        "enabled": true, 
        "authentication": {
          "protocol": "SHA", 
          "passphrase": "passphrase123"
        }, 
        "contact": "admin@foo.com", 
        "location": "6th Floor West", 
        "security_level": "AUTH_NO_PRIVACY", 
        "description": "shark"
      }, 
      "type": "object", 
      "id": "snmp_settings", 
      "properties": {
        "enabled": {
          "description": "'true' if SNMP is enabled, 'false' otherwise", 
          "required": true, 
          "type": "boolean"
        }, 
        "version": {
          "description": "SNMP version", 
          "required": true, 
          "type": "string", 
          "enum": [
            "V1", 
            "V2C", 
            "V3"
          ]
        }, 
        "location": {
          "description": "(Optional) SNMP location string", 
          "required": false, 
          "type": "string"
        }, 
        "description": {
          "description": "(Optional) SNMP description string", 
          "required": false, 
          "type": "string"
        }, 
        "contact": {
          "description": "(Optional) SNMP contact string", 
          "required": false, 
          "type": "string"
        }, 
        "username": {
          "description": "(Required for V3) SNMP user name", 
          "required": false, 
          "type": "string"
        }, 
        "community": {
          "description": "(Required for V1 and V2C) SNMP community string", 
          "required": false, 
          "type": "string"
        }, 
        "security_level": {
          "description": "(Required for V3) SNMP security level", 
          "required": false, 
          "type": "string", 
          "enum": [
            "NO_AUTH_NO_PRIVACY", 
            "AUTH_NO_PRIVACY", 
            "AUTH_PRIVACY"
          ]
        }, 
        "authentication": {
          "description": "(Required with SNMP authentication) SNMP authentication information", 
          "required": false, 
          "type": "object", 
          "properties": {
            "passphrase": {
              "description": "Authentication passphrase (must be at least 8 characters long)", 
              "required": true, 
              "type": "string"
            }, 
            "protocol": {
              "description": "Authentication protocol", 
              "required": true, 
              "type": "string", 
              "enum": [
                "MD5", 
                "SHA"
              ]
            }
          }
        }, 
        "privacy": {
          "description": "(Required with SNMP privacy) SNMP privacy information", 
          "required": false, 
          "type": "object", 
          "properties": {
            "passphrase": {
              "description": "Privacy passphrase (must be at least 8 characters long)", 
              "required": true, 
              "type": "string"
            }, 
            "protocol": {
              "description": "Privacy protocol", 
              "required": true, 
              "type": "string", 
              "enum": [
                "DES", 
                "AES"
              ]
            }
          }
        }
      }
    }, 
    "profilerexport_settings": {
      "description": "Configuration of the Profiler Export", 
      "example": {
        "profilers": [
          {
            "status": {
              "state": "ERROR", 
              "cause": "Host not found: myprofiler.mydomain.com"
            }, 
            "address": "myprofiler.mydomain.com"
          }, 
          {
            "status": {
              "state": "OK"
            }, 
            "address": "myprofiler1.mydomain.com"
          }
        ], 
        "enabled": true, 
        "adapter_ports": [
          {
            "voip_enabled": true, 
            "enabled": true, 
            "name": "tc0", 
            "description": "TurboCap 1Gb device no.0"
          }, 
          {
            "voip_enabled": false, 
            "bpf_filter": "tcp", 
            "enabled": true, 
            "name": "tc1", 
            "description": "TurboCap 1Gb device no.1"
          }
        ], 
        "valid_license": true
      }, 
      "type": "object", 
      "id": "profilerexport_settings", 
      "properties": {
        "enabled": {
          "description": "Enable/disable the Profiler Export", 
          "required": true, 
          "type": "boolean"
        }, 
        "valid_license": {
          "required": false, 
          "type": "boolean"
        }, 
        "profilers": {
          "description": "List of profilers", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "profiler", 
            "type": "object", 
            "properties": {
              "address": {
                "description": "Address of a profiler, either IP or full qualified name", 
                "required": true, 
                "type": "string"
              }, 
              "status": {
                "description": "Information on a profiler connection", 
                "required": false, 
                "type": "object", 
                "id": "status", 
                "properties": {
                  "state": {
                    "description": "Connection state of a profiler", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "OK", 
                      "ERROR", 
                      "DISABLED"
                    ]
                  }, 
                  "cause": {
                    "description": "In case of connection error this field contains the cause", 
                    "required": false, 
                    "type": "string"
                  }
                }
              }, 
              "sync": {
                "required": false, 
                "type": "object", 
                "properties": {
                  "sync_port_names": {
                    "required": true, 
                    "type": "boolean"
                  }, 
                  "sync_port_groups": {
                    "required": true, 
                    "type": "boolean"
                  }, 
                  "sync_layer4_mappings": {
                    "required": true, 
                    "type": "boolean"
                  }, 
                  "sync_custom_applications": {
                    "required": true, 
                    "type": "boolean"
                  }
                }
              }
            }, 
            "description": "Description of a single profiler"
          }
        }, 
        "adapter_ports": {
          "description": "List of the capture physical ports installed on the appliance", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "adapter_port", 
            "type": "object", 
            "properties": {
              "enabled": {
                "description": "Enable/disable the export on the capture port", 
                "required": true, 
                "type": "boolean"
              }, 
              "name": {
                "description": "Name of the capture port, unique on the appliance", 
                "required": true, 
                "type": "string"
              }, 
              "description": {
                "description": "Description of the capture port", 
                "required": false, 
                "type": "string"
              }, 
              "bpf_filter": {
                "description": "BPF filter applied on the traffic captured on the capture port", 
                "required": false, 
                "type": "string"
              }, 
              "voip_enabled": {
                "description": "Enable/disable the export of VoIP metrics to profiler", 
                "required": true, 
                "type": "boolean"
              }, 
              "dpi_enabled": {
                "description": "Enable/disable the export of Application tags to profiler", 
                "required": false, 
                "type": "boolean"
              }
            }, 
            "description": "Description of a single physical capture port"
          }
        }
      }
    }, 
    "port_name": {
      "example": {
        "udp": "http", 
        "port": 80, 
        "tcp": "http"
      }, 
      "type": "object", 
      "id": "port_name", 
      "properties": {
        "port": {
          "description": "Transport port number", 
          "required": false, 
          "type": "number"
        }, 
        "tcp": {
          "description": "TCP port name for this port number", 
          "required": false, 
          "type": "string"
        }, 
        "udp": {
          "description": "UDP port name for this port number", 
          "required": false, 
          "type": "string"
        }
      }
    }, 
    "port_group": {
      "example": {
        "priority": 0, 
        "name": "Web", 
        "ports": [
          {
            "port_range": "80", 
            "protocol": "TCP"
          }, 
          {
            "port_range": "8080", 
            "protocol": "TCP"
          }, 
          {
            "port_range": "443", 
            "protocol": "TCP"
          }
        ]
      }, 
      "type": "object", 
      "id": "port_group", 
      "properties": {
        "name": {
          "description": "Port group name", 
          "required": false, 
          "type": "string"
        }, 
        "priority": {
          "description": "Port group priority: smaller values have higher priority", 
          "required": false, 
          "type": "number"
        }, 
        "ports": {
          "description": "List of port range definitions for this group", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "port_range", 
            "type": "object", 
            "properties": {
              "protocol": {
                "required": true, 
                "type": "string", 
                "enum": [
                  "TCP", 
                  "UDP"
                ]
              }, 
              "port_range": {
                "description": "Port range definition: portA[-portB]", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }
      }
    }, 
    "layer4_mapping": {
      "example": {
        "override": true, 
        "priority": 0, 
        "hosts": [
          "192.168.140.18"
        ], 
        "name": "My_server", 
        "ports": [
          {
            "port_range": "99", 
            "protocol": "TCP"
          }, 
          {
            "port_range": "15", 
            "protocol": "TCP"
          }
        ]
      }, 
      "type": "object", 
      "id": "layer4_mapping", 
      "properties": {
        "name": {
          "description": "Layer4 mapping name", 
          "required": false, 
          "type": "string"
        }, 
        "override": {
          "description": "If true this L4 mapping rule overrides the L7 applications", 
          "required": false, 
          "type": "boolean"
        }, 
        "priority": {
          "description": "Layer4 mapping priority: smaller values have higher priority", 
          "required": false, 
          "type": "number"
        }, 
        "hosts": {
          "required": true, 
          "type": "array", 
          "description": "List of hosts: each host can be defined as 'address[/mask]'", 
          "items": {
            "type": "string", 
            "id": "host"
          }
        }, 
        "ports": {
          "description": "List of port range definitions for this layer4 mapping", 
          "required": true, 
          "type": "array", 
          "items": {
            "id": "port_range", 
            "type": "object", 
            "properties": {
              "protocol": {
                "required": true, 
                "type": "string", 
                "enum": [
                  "TCP", 
                  "UDP"
                ]
              }, 
              "port_range": {
                "description": "Port range definition: portA[-portB]", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }
      }
    }, 
    "custom_application": {
      "id": "custom_application", 
      "type": "object", 
      "properties": {
        "name": {
          "description": "Custom L7 signature name", 
          "required": true, 
          "type": "string"
        }, 
        "uri": {
          "description": "Custom L7 signature URI rule", 
          "required": true, 
          "type": "string"
        }
      }, 
      "example": {
        "name": "My_Bugzilla", 
        "uri": "http://bugzilla.mydomain.com/"
      }
    }, 
    "application": {
      "id": "application", 
      "type": "object", 
      "properties": {
        "display_name": {
          "description": "Application name", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "Application description", 
          "required": false, 
          "type": "string"
        }, 
        "id": {
          "description": "Application unique identifier", 
          "required": true, 
          "type": "number"
        }, 
        "type": {
          "description": "Application type, it can be either '1' for system applications or '2' for custom applications", 
          "required": true, 
          "type": "number"
        }
      }, 
      "example": {
        "type": 1, 
        "display_name": "Facebook", 
        "description": "Facebook is a social networking service.", 
        "id": 206
      }
    }
  }, 
  "resources": {
    "interfaces": {
      "methods": {
        "List interfaces": {
          "path": "interfaces", 
          "parameters": {
            "filter": {
              "type": "string", 
              "description": "'device' to limit list to physical devices; 'virtual' to limit list to virtual files; 'aggregating' to limit list to aggregating ports.", 
              "required": false
            }
          }, 
          "httpmethod": "GET", 
          "description": "Get the list of capture interfaces", 
          "response": {
            "type": "array", 
            "description": "List of interfaces", 
            "id": "interfaces", 
            "items": {
              "id": "interface", 
              "$ref": "interface"
            }, 
            "example": [
              {
                "interface_components": [], 
                "description": "TurboCap 1Gb device no.0", 
                "link": {
                  "status": "UP", 
                  "tap_type": "NONE", 
                  "stats": {
                    "bytes_rx": 73478815, 
                    "packets_rx": 1007752
                  }, 
                  "dedup_status": "DISABLED", 
                  "speed_options": [
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_10", 
                      "duplex_type": "FULL"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_10", 
                      "duplex_type": "HALF"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_100", 
                      "duplex_type": "FULL"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_100", 
                      "duplex_type": "HALF"
                    }, 
                    {
                      "status": "NEGOTIATED", 
                      "speed_mbps": "MBPS_1000", 
                      "duplex_type": "FULL"
                    }
                  ], 
                  "mac_address": "00:e0:ed:1e:9d:1a", 
                  "blink_status": "OFF", 
                  "type": "EN10MB"
                }, 
                "board": {
                  "pass_thru": "DISABLED", 
                  "type": "1G_COPPER", 
                  "name": "TurboCap 1 Gigabit Ethernet Board (00:e0:ed:1e:9d:1a)"
                }, 
                "is_promiscuous_mode": true, 
                "type": "TURBOCAP_ADAPTER", 
                "id": "tc0", 
                "name": "tc0"
              }, 
              {
                "interface_components": [], 
                "description": "TurboCap 1Gb device no.1", 
                "link": {
                  "status": "DOWN", 
                  "tap_type": "NONE", 
                  "stats": {
                    "bytes_rx": 0, 
                    "packets_rx": 0
                  }, 
                  "dedup_status": "DISABLED", 
                  "speed_options": [
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_10", 
                      "duplex_type": "FULL"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_10", 
                      "duplex_type": "HALF"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_100", 
                      "duplex_type": "FULL"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_100", 
                      "duplex_type": "HALF"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_1000", 
                      "duplex_type": "FULL"
                    }
                  ], 
                  "mac_address": "00:e0:ed:1e:9d:1b", 
                  "blink_status": "OFF", 
                  "type": "EN10MB"
                }, 
                "board": {
                  "pass_thru": "DISABLED", 
                  "type": "1G_COPPER", 
                  "name": "TurboCap 1 Gigabit Ethernet Board (00:e0:ed:1e:9d:1a)"
                }, 
                "is_promiscuous_mode": true, 
                "type": "TURBOCAP_ADAPTER", 
                "id": "tc1", 
                "name": "tc1"
              }, 
              {
                "interface_components": [], 
                "description": "TurboCap 1Gb device no.2", 
                "link": {
                  "status": "UP", 
                  "tap_type": "NONE", 
                  "stats": {
                    "bytes_rx": 0, 
                    "packets_rx": 0
                  }, 
                  "dedup_status": "DISABLED", 
                  "speed_options": [
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_10", 
                      "duplex_type": "FULL"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_10", 
                      "duplex_type": "HALF"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_100", 
                      "duplex_type": "FULL"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_100", 
                      "duplex_type": "HALF"
                    }, 
                    {
                      "status": "NEGOTIATED", 
                      "speed_mbps": "MBPS_1000", 
                      "duplex_type": "FULL"
                    }
                  ], 
                  "mac_address": "00:e0:ed:1e:9d:1c", 
                  "blink_status": "OFF", 
                  "type": "EN10MB"
                }, 
                "board": {
                  "pass_thru": "DISABLED", 
                  "type": "1G_COPPER", 
                  "name": "TurboCap 1 Gigabit Ethernet Board (00:e0:ed:1e:9d:1c)"
                }, 
                "is_promiscuous_mode": true, 
                "type": "TURBOCAP_ADAPTER", 
                "id": "tc2", 
                "name": "tc2"
              }, 
              {
                "interface_components": [], 
                "description": "TurboCap 1Gb device no.3", 
                "link": {
                  "status": "UP", 
                  "tap_type": "NONE", 
                  "stats": {
                    "bytes_rx": 0, 
                    "packets_rx": 0
                  }, 
                  "dedup_status": "DISABLED", 
                  "speed_options": [
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_10", 
                      "duplex_type": "FULL"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_10", 
                      "duplex_type": "HALF"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_100", 
                      "duplex_type": "FULL"
                    }, 
                    {
                      "status": "ENABLED", 
                      "speed_mbps": "MBPS_100", 
                      "duplex_type": "HALF"
                    }, 
                    {
                      "status": "NEGOTIATED", 
                      "speed_mbps": "MBPS_1000", 
                      "duplex_type": "FULL"
                    }
                  ], 
                  "mac_address": "00:e0:ed:1e:9d:1d", 
                  "blink_status": "OFF", 
                  "type": "EN10MB"
                }, 
                "board": {
                  "pass_thru": "DISABLED", 
                  "type": "1G_COPPER", 
                  "name": "TurboCap 1 Gigabit Ethernet Board (00:e0:ed:1e:9d:1c)"
                }, 
                "is_promiscuous_mode": true, 
                "type": "TURBOCAP_ADAPTER", 
                "id": "tc3", 
                "name": "tc3"
              }, 
              {
                "interface_components": [
                  "tc2", 
                  "tc3"
                ], 
                "description": "TurboCap Board Aggregating Port", 
                "board": {
                  "pass_thru": "DISABLED", 
                  "type": "1G_COPPER", 
                  "name": "TurboCap 1 Gigabit Ethernet Board (00:e0:ed:1e:9d:1c)"
                }, 
                "is_promiscuous_mode": true, 
                "type": "BOARD_AGGREGATING", 
                "id": "tc_bap_00e0ed1e9d1c", 
                "name": "tc_bap_00e0ed1e9d1c"
              }, 
              {
                "interface_components": [
                  "tc0", 
                  "tc1"
                ], 
                "description": "TurboCap Board Aggregating Port (2)", 
                "board": {
                  "pass_thru": "DISABLED", 
                  "type": "1G_COPPER", 
                  "name": "TurboCap 1 Gigabit Ethernet Board (00:e0:ed:1e:9d:1a)"
                }, 
                "is_promiscuous_mode": true, 
                "type": "BOARD_AGGREGATING", 
                "id": "tc_bap_00e0ed1e9d1a", 
                "name": "tc_bap_00e0ed1e9d1a"
              }, 
              {
                "interface_components": [
                  "tc0", 
                  "tc1", 
                  "tc2", 
                  "tc3"
                ], 
                "description": "TurboCap Aggregating Port", 
                "is_promiscuous_mode": true, 
                "type": "AGGREGATING", 
                "id": "tc_tcap", 
                "name": "tc_tcap"
              }
            ]
          }
        }, 
        "Get interface info": {
          "path": "interfaces/{interface_id}", 
          "httpmethod": "GET", 
          "description": "Get information on capture interface {interface_id}.", 
          "parameters": {
            "interface_id": {
              "type": "string", 
              "description": "Interface identifier", 
              "required": true
            }
          }, 
          "response": {
            "$ref": "interface"
          }
        }, 
        "Update interface settings": {
          "path": "interfaces/{interface_id}", 
          "httpmethod": "PUT", 
          "description": "Update information on capture interface {interface_id}.", 
          "parameters": {
            "interface_id": {
              "type": "string", 
              "description": "Interface identifier", 
              "required": true
            }
          }, 
          "request": {
            "description": "Update information for a Shark physical interface. Note: If new passthru mode setting is present, all other settings are ignored.", 
            "example": {
              "dedup_status": "ENABLED", 
              "tap_type": "GIGAMON_HEADER", 
              "speed_options": [
                {
                  "speed_mbps": "MBPS_10", 
                  "duplex_type": "HALF"
                }, 
                {
                  "speed_mbps": "MBPS_10", 
                  "duplex_type": "FULL"
                }, 
                {
                  "speed_mbps": "MBPS_100", 
                  "duplex_type": "HALF"
                }, 
                {
                  "speed_mbps": "MBPS_100", 
                  "duplex_type": "FULL"
                }, 
                {
                  "speed_mbps": "MBPS_1000", 
                  "duplex_type": "FULL"
                }
              ]
            }, 
            "type": "object", 
            "id": "interface_settings", 
            "properties": {
              "name": {
                "description": "New alias for this interface", 
                "required": false, 
                "type": "string"
              }, 
              "description": {
                "description": "New description string for this interface", 
                "required": false, 
                "type": "string"
              }, 
              "pass_thru": {
                "description": "New passthru mode status", 
                "required": false, 
                "type": "string", 
                "enum": [
                  "ENABLED", 
                  "DISABLED", 
                  "NOT_SUPPORTED"
                ]
              }, 
              "board_speed": {
                "description": "Speed, duplex type, and status of a speed option", 
                "required": false, 
                "type": "object", 
                "properties": {
                  "status": {
                    "description": "Status of this link speed option for this interface", 
                    "required": false, 
                    "type": "string", 
                    "enum": [
                      "SUPPORTED", 
                      "ENABLED", 
                      "NEGOTIATED"
                    ]
                  }, 
                  "duplex_type": {
                    "description": "Duplex type for this speed option", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "HALF", 
                      "FULL", 
                      "UNKNOWN"
                    ]
                  }, 
                  "speed_mbps": {
                    "description": "Throughput for this speed option", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "MBPS_10", 
                      "MBPS_100", 
                      "MBPS_1000", 
                      "MBPS_10000"
                    ]
                  }
                }
              }, 
              "tap_type": {
                "description": "New tap type setting", 
                "required": false, 
                "type": "string", 
                "enum": [
                  "NONE", 
                  "CPACKET", 
                  "GIGAMON_HEADER", 
                  "GIGAMON_TRAILER", 
                  "GIGAMON_TRAILER_X12", 
                  "VSS", 
                  "VSS_PORT_ID", 
                  "ANUE", 
                  "ARISTA", 
                  "UNKNOWN"
                ]
              }, 
              "dedup_status": {
                "description": "New packet deduplication setting", 
                "required": false, 
                "type": "string", 
                "enum": [
                  "ENABLED", 
                  "DISABLED", 
                  "NOT_SUPPORTED"
                ]
              }, 
              "speed_options": {
                "description": "List of link speed options", 
                "required": false, 
                "type": "array", 
                "items": {
                  "id": "link_speed_option", 
                  "type": "object", 
                  "properties": {
                    "status": {
                      "description": "Status of this link speed option for this interface", 
                      "required": false, 
                      "type": "string", 
                      "enum": [
                        "SUPPORTED", 
                        "ENABLED", 
                        "NEGOTIATED"
                      ]
                    }, 
                    "duplex_type": {
                      "description": "Duplex type for this speed option", 
                      "required": true, 
                      "type": "string", 
                      "enum": [
                        "HALF", 
                        "FULL", 
                        "UNKNOWN"
                      ]
                    }, 
                    "speed_mbps": {
                      "description": "Throughput for this speed option", 
                      "required": true, 
                      "type": "string", 
                      "enum": [
                        "MBPS_10", 
                        "MBPS_100", 
                        "MBPS_1000", 
                        "MBPS_10000"
                      ]
                    }
                  }, 
                  "description": "Speed, duplex type, and status of a speed option"
                }
              }
            }
          }
        }, 
        "Update interface blink status": {
          "path": "interfaces/{interface_id}/blink_status", 
          "httpmethod": "PUT", 
          "description": "Request update of interface blink status.", 
          "parameters": {
            "interface_id": {
              "type": "string", 
              "description": "Interface identifier", 
              "required": true
            }
          }, 
          "request": {
            "description": "Update interface 'blink' status", 
            "example": {
              "blink_status": "ON"
            }, 
            "type": "object", 
            "id": "blink_settings", 
            "properties": {
              "blink_status": {
                "description": "New 'blink' status for this interface", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "ON", 
                  "OFF", 
                  "UNKNOWN"
                ]
              }
            }
          }
        }
      }
    }, 
    "jobs": {
      "methods": {
        "List jobs": {
          "path": "jobs", 
          "httpmethod": "GET", 
          "description": "Get the list of configured capture jobs", 
          "response": {
            "type": "array", 
            "description": "List of capture jobs", 
            "id": "jobs", 
            "items": {
              "id": "job", 
              "description": "A capture job", 
              "example": {
                "id": "00000001", 
                "status": {
                  "state": "STOPPED", 
                  "packet_size": 44781772, 
                  "packet_start_time": 1344456875000000000, 
                  "packet_end_time": 1345512749000000000
                }, 
                "config": {
                  "packet_retention": {
                    "size_limit": 5368709120
                  }, 
                  "indexing": {
                    "size_limit": 52428800, 
                    "synced": false, 
                    "time_limit": 604800, 
                    "dpi_enabled": true
                  }, 
                  "name": "New Job 1", 
                  "interface_description": "mon0", 
                  "snap_length": 65535, 
                  "interface_name": "mon0"
                }, 
                "index": {
                  "status": "RUNNING", 
                  "start_time": 1344456875000000000, 
                  "end_time": 1345512749000000000, 
                  "size": 52348800
                }
              }, 
              "type": "object", 
              "properties": {
                "id": {
                  "description": "Job ID", 
                  "required": true, 
                  "type": "string"
                }, 
                "status": {
                  "description": "Status information for this job", 
                  "required": true, 
                  "$ref": "job_status"
                }, 
                "config": {
                  "description": "Configuration information for this job", 
                  "required": true, 
                  "$ref": "job_config"
                }, 
                "index": {
                  "description": "Index information for this job", 
                  "required": false, 
                  "$ref": "job_index_info"
                }
              }
            }, 
            "example": [
              {
                "id": "00000001", 
                "status": {
                  "state": "STOPPED", 
                  "packet_size": 44781772, 
                  "packet_start_time": 1344456875, 
                  "packet_end_time": 1345512749
                }, 
                "config": {
                  "packet_retention": {
                    "size_limit": 5368709120
                  }, 
                  "name": "New Job 1", 
                  "interface_description": "mon0", 
                  "snap_length": 65535, 
                  "interface_name": "mon0"
                }
              }
            ]
          }
        }, 
        "Create job": {
          "path": "jobs", 
          "httpmethod": "POST", 
          "description": "Create a new capture job", 
          "request": {
            "$ref": "job_config"
          }, 
          "response": {
            "description": "Information for a new job", 
            "example": {
              "id": "00000001"
            }, 
            "type": "object", 
            "id": "job", 
            "properties": {
              "id": {
                "description": "Job id", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "Get job information": {
          "path": "jobs/{job_id}", 
          "httpmethod": "GET", 
          "parameters": {
            "job_id": {
              "type": "string", 
              "description": "Job identifier", 
              "required": true
            }
          }, 
          "description": "Get information (status and config) for a capture job", 
          "response": {
            "description": "A capture job", 
            "example": {
              "id": "00000001", 
              "status": {
                "state": "STOPPED", 
                "packet_size": 44781772, 
                "packet_start_time": 1344456875000000000, 
                "packet_end_time": 1345512749000000000
              }, 
              "config": {
                "packet_retention": {
                  "size_limit": 5368709120
                }, 
                "indexing": {
                  "size_limit": 52428800, 
                  "synced": false, 
                  "time_limit": 604800, 
                  "dpi_enabled": true
                }, 
                "name": "New Job 1", 
                "interface_description": "mon0", 
                "snap_length": 65535, 
                "interface_name": "mon0"
              }, 
              "index": {
                "status": "RUNNING", 
                "start_time": 1344456875000000000, 
                "end_time": 1345512749000000000, 
                "size": 52348800
              }
            }, 
            "type": "object", 
            "id": "job", 
            "properties": {
              "id": {
                "description": "Job ID", 
                "required": true, 
                "type": "string"
              }, 
              "status": {
                "description": "Status information for this job", 
                "required": true, 
                "$ref": "job_status"
              }, 
              "config": {
                "description": "Configuration information for this job", 
                "required": true, 
                "$ref": "job_config"
              }, 
              "index": {
                "description": "Index information for this job", 
                "required": false, 
                "$ref": "job_index_info"
              }
            }
          }
        }, 
        "Get job config": {
          "path": "jobs/{job_id}/config", 
          "httpmethod": "GET", 
          "parameters": {
            "job_id": {
              "type": "string", 
              "description": "Job identifier", 
              "required": true
            }
          }, 
          "description": "Get configuration for capture job", 
          "response": {
            "$ref": "job_config"
          }
        }, 
        "Get job status": {
          "path": "jobs/{job_id}/status", 
          "httpmethod": "GET", 
          "parameters": {
            "job_id": {
              "type": "string", 
              "description": "Job identifier", 
              "required": true
            }
          }, 
          "description": "Get status information for a capture job", 
          "response": {
            "$ref": "job_status"
          }
        }, 
        "Get job stats": {
          "path": "jobs/{job_id}/stats", 
          "httpmethod": "GET", 
          "parameters": {
            "job_id": {
              "type": "string", 
              "description": "Job identifier", 
              "required": true
            }
          }, 
          "description": "Statistics for a capture job", 
          "response": {
            "description": "Capture job statistics", 
            "example": {
              "packets_dropped": {
                "last_minute": 0, 
                "last_hour": 0, 
                "total": 0, 
                "last_second": 0
              }, 
              "packets_written": {
                "last_minute": 1815, 
                "last_hour": 3019, 
                "total": 123387, 
                "last_second": 0
              }
            }, 
            "type": "object", 
            "id": "job_stats", 
            "properties": {
              "packets_written": {
                "description": "Statistics for the number of packets successfully written to the packet storage", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "total": {
                    "description": "Total number of packets since the job was started", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "last_second": {
                    "description": "Number of packets in the last second", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "last_minute": {
                    "description": "Number of packets in the last minute", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "last_hour": {
                    "description": "Number of packets in the last hour", 
                    "required": true, 
                    "type": "number"
                  }
                }
              }, 
              "packets_dropped": {
                "description": "Statistics for the number of packets that arrived at the capture port but could not be written successfully to the packet storage", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "total": {
                    "description": "Total number of packets since the job was started", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "last_second": {
                    "description": "Number of packets in the last second", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "last_minute": {
                    "description": "Number of packets in the last minute", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "last_hour": {
                    "description": "Number of packets in the last hour", 
                    "required": true, 
                    "type": "number"
                  }
                }
              }
            }
          }
        }, 
        "Get job index status": {
          "path": "jobs/{job_id}/index", 
          "httpmethod": "GET", 
          "parameters": {
            "job_id": {
              "type": "string", 
              "description": "Job identifier", 
              "required": true
            }
          }, 
          "description": "Index information for capture job.", 
          "response": {
            "$ref": "job_index_info"
          }
        }, 
        "Update job configuration": {
          "path": "jobs/{job_id}", 
          "httpmethod": "PUT", 
          "parameters": {
            "job_id": {
              "type": "string", 
              "description": "Job identifier", 
              "required": true
            }
          }, 
          "description": "Update configuration of a capture job", 
          "request": {
            "$ref": "job_config"
          }
        }, 
        "Update job status": {
          "path": "jobs/{job_id}/status", 
          "httpmethod": "PUT", 
          "parameters": {
            "job_id": {
              "type": "string", 
              "description": "Job identifier", 
              "required": true
            }
          }, 
          "description": "Update running status of capture job", 
          "request": {
            "description": "Update job state, optionally clear packets for job", 
            "example": {
              "state": "STOPPED", 
              "clear_packets": true
            }, 
            "type": "object", 
            "id": "status", 
            "properties": {
              "state": {
                "description": "Running state of a capture job", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "ACTIVE", 
                  "RUNNING", 
                  "STOPPED", 
                  "UNKNOWN"
                ]
              }, 
              "clear_packets": {
                "description": "'true' to clear packets for this job", 
                "required": false, 
                "type": "boolean"
              }
            }
          }
        }, 
        "Delete job": {
          "path": "jobs/{job_id}", 
          "httpmethod": "DELETE", 
          "parameters": {
            "job_id": {
              "type": "string", 
              "description": "Job identifier", 
              "required": true
            }
          }, 
          "description": "Delete capture job"
        }
      }
    }, 
    "clips": {
      "methods": {
        "List clips": {
          "path": "clips", 
          "httpmethod": "GET", 
          "description": "Get the list of trace clips", 
          "response": {
            "type": "array", 
            "description": "List of clips", 
            "id": "clips", 
            "items": {
              "id": "clip", 
              "description": "Description and status of trace clip", 
              "example": {
                "id": "000000A30002", 
                "status": {
                  "creation_time": 1345830425, 
                  "modification_time": 1345830535, 
                  "estimated_size": 268435456, 
                  "locked": true
                }, 
                "config": {
                  "job_id": "000000A3", 
                  "description": "This is a clip on job 000000A3", 
                  "filters": [
                    {
                      "type": "TIME", 
                      "value": "1345830425000000000, 1345830435000000000", 
                      "description": "This is a time filter."
                    }, 
                    {
                      "type": "BPF", 
                      "value": "port 80"
                    }
                  ]
                }, 
                "index": {
                  "status": "OK", 
                  "start_time": 1345830425000000000, 
                  "end_time": 1345830435000000000
                }
              }, 
              "type": "object", 
              "properties": {
                "id": {
                  "description": "Clip id", 
                  "required": true, 
                  "type": "string"
                }, 
                "status": {
                  "description": "Status information for this clip", 
                  "required": true, 
                  "$ref": "clip_status"
                }, 
                "config": {
                  "description": "Configuration information for this clip", 
                  "required": true, 
                  "$ref": "clip_config"
                }, 
                "index": {
                  "description": "Index information for this clip", 
                  "required": false, 
                  "$ref": "index_info"
                }
              }
            }, 
            "example": [
              {
                "id": "000000A30002", 
                "status": {
                  "creation_time": 1345830425, 
                  "modification_time": 1345830535, 
                  "estimated_size": 268435456, 
                  "locked": true
                }, 
                "config": {
                  "job_id": "000000A3", 
                  "description": "This is a clip on job 000000A3", 
                  "filters": [
                    {
                      "type": "TIME", 
                      "value": "1345830425000000000, 1345830435000000000", 
                      "description": "This is a time filter."
                    }, 
                    {
                      "type": "BPF", 
                      "value": "port 80"
                    }
                  ]
                }, 
                "index": {
                  "status": "OK", 
                  "start_time": 1345830425000000000, 
                  "end_time": 1345830435000000000
                }
              }, 
              {
                "id": "000000A30003", 
                "status": {
                  "creation_time": 1345830563, 
                  "modification_time": 1345830563, 
                  "estimated_size": 268435456, 
                  "locked": true
                }, 
                "config": {
                  "job_id": "000000A3", 
                  "description": "This is the third clip on job 000000A3", 
                  "filters": [
                    {
                      "type": "TIME", 
                      "value": "1345830493000000000, 1345830596000000000", 
                      "description": "This is a time filter."
                    }, 
                    {
                      "type": "SHARK", 
                      "value": "tcp.port=\"80\"", 
                      "description": "This is a shark filter."
                    }
                  ]
                }
              }
            ]
          }
        }, 
        "Create clip": {
          "path": "clips", 
          "httpmethod": "POST", 
          "description": "Create a new trace clip", 
          "request": {
            "$ref": "clip_config"
          }, 
          "response": {
            "example": {
              "id": "000000A30002"
            }, 
            "type": "object", 
            "id": "clip", 
            "properties": {
              "id": {
                "description": "Identifier of the newly created clip", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "Get clip detail": {
          "path": "clips/{clip_id}", 
          "httpmethod": "GET", 
          "parameters": {
            "clip_id": {
              "type": "string", 
              "description": "Clip identifier", 
              "required": true
            }
          }, 
          "description": "Info on clip {clip_id}", 
          "response": {
            "description": "Description and status of trace clip", 
            "example": {
              "id": "000000A30002", 
              "status": {
                "creation_time": 1345830425, 
                "modification_time": 1345830535, 
                "estimated_size": 268435456, 
                "locked": true
              }, 
              "config": {
                "job_id": "000000A3", 
                "description": "This is a clip on job 000000A3", 
                "filters": [
                  {
                    "type": "TIME", 
                    "value": "1345830425000000000, 1345830435000000000", 
                    "description": "This is a time filter."
                  }, 
                  {
                    "type": "BPF", 
                    "value": "port 80"
                  }
                ]
              }, 
              "index": {
                "status": "OK", 
                "start_time": 1345830425000000000, 
                "end_time": 1345830435000000000
              }
            }, 
            "type": "object", 
            "id": "clip", 
            "properties": {
              "id": {
                "description": "Clip id", 
                "required": true, 
                "type": "string"
              }, 
              "status": {
                "description": "Status information for this clip", 
                "required": true, 
                "$ref": "clip_status"
              }, 
              "config": {
                "description": "Configuration information for this clip", 
                "required": true, 
                "$ref": "clip_config"
              }, 
              "index": {
                "description": "Index information for this clip", 
                "required": false, 
                "$ref": "index_info"
              }
            }
          }
        }, 
        "Update clip": {
          "path": "clips/{clip_id}", 
          "httpmethod": "PUT", 
          "parameters": {
            "clip_id": {
              "type": "string", 
              "description": "Clip identifier", 
              "required": true
            }
          }, 
          "description": "Update config info for clip {clip_id}", 
          "request": {
            "$ref": "clip_config"
          }
        }, 
        "Delete clip": {
          "path": "clips/{clip_id}", 
          "httpmethod": "DELETE", 
          "parameters": {
            "clip_id": {
              "type": "string", 
              "description": "Clip identifier", 
              "required": true
            }
          }, 
          "description": "Delete clip {clip_id}"
        }, 
        "Get clip config": {
          "path": "clips/{clip_id}/config", 
          "httpmethod": "GET", 
          "parameters": {
            "clip_id": {
              "type": "string", 
              "description": "Clip identifier", 
              "required": true
            }
          }, 
          "description": "Config info for clip {clip_id}", 
          "response": {
            "$ref": "clip_config"
          }
        }, 
        "Get clip status": {
          "path": "clips/{clip_id}/status", 
          "httpmethod": "GET", 
          "parameters": {
            "clip_id": {
              "type": "string", 
              "description": "Clip identifier", 
              "required": true
            }
          }, 
          "description": "Status info for clip {clip_id}", 
          "response": {
            "$ref": "clip_status"
          }
        }, 
        "Update clip lock status": {
          "path": "clips/{clip_id}/status", 
          "httpmethod": "PUT", 
          "parameters": {
            "clip_id": {
              "type": "string", 
              "description": "Clip identifier", 
              "required": true
            }
          }, 
          "description": "Update lock status for clip {clip_id}", 
          "request": {
            "example": {
              "locked": true
            }, 
            "type": "object", 
            "id": "status", 
            "properties": {
              "locked": {
                "description": "'true' to lock the packets and the index for this clip, 'false' otherwise", 
                "required": true, 
                "type": "boolean"
              }
            }
          }
        }, 
        "Get clip index info": {
          "path": "clips/{clip_id}/index", 
          "httpmethod": "GET", 
          "parameters": {
            "clip_id": {
              "type": "string", 
              "description": "Clip identifier", 
              "required": true
            }
          }, 
          "description": "Index info for clip {clip_id}", 
          "response": {
            "$ref": "index_info"
          }
        }
      }
    }, 
    "filesystem": {
      "methods": {
        "List root directory": {
          "path": "fs", 
          "httpmethod": "GET", 
          "description": "Get the contents of the root filesystem directory", 
          "response": {
            "type": "array", 
            "description": "List of directories", 
            "id": "fs", 
            "items": {
              "id": "dir", 
              "$ref": "dir"
            }, 
            "example": [
              {
                "files": [
                  {
                    "created": 1347053478, 
                    "modified": 1347053478, 
                    "id": "/admin/http-ng.pcapng", 
                    "type": "PCAPNG_FILE", 
                    "link_type": "DLT_EN10MB", 
                    "size": 149952
                  }, 
                  {
                    "created": 1343026049, 
                    "modified": 1343026050, 
                    "id": "/admin/prova.cap", 
                    "type": "PCAP_FILE", 
                    "link_type": "DLT_EN10MB", 
                    "size": 145919
                  }
                ], 
                "dirs": [
                  {
                    "files": [
                      {
                        "created": 1342768036, 
                        "modified": 1342768037, 
                        "id": "/admin/multisegment/2-router1-in.pcap", 
                        "type": "PCAP_FILE", 
                        "link_type": "DLT_EN10MB", 
                        "size": 16246
                      }, 
                      {
                        "created": 1342768038, 
                        "modified": 1342768038, 
                        "id": "/admin/multisegment/4-router2-in.pcap", 
                        "type": "PCAP_FILE", 
                        "link_type": "DLT_EN10MB", 
                        "size": 15988
                      }, 
                      {
                        "created": 1342768038, 
                        "modified": 1342768038, 
                        "id": "/admin/multisegment/6-router3-in.pcap", 
                        "type": "PCAP_FILE", 
                        "link_type": "DLT_EN10MB", 
                        "size": 15988
                      }, 
                      {
                        "created": 1342768079, 
                        "modified": 1348764826, 
                        "linked_sources": [
                          {
                            "path": "2-router1-in.pcap"
                          }, 
                          {
                            "path": "4-router2-in.pcap"
                          }, 
                          {
                            "path": "6-router3-in.pcap"
                          }
                        ], 
                        "id": "/admin/multisegment/merged.pvt", 
                        "type": "MERGED_FILE", 
                        "link_type": "DLT_EN10MB", 
                        "size": 243
                      }, 
                      {
                        "created": 1342768084, 
                        "modified": 1348764826, 
                        "linked_sources": [
                          {
                            "path": "2-router1-in.pcap", 
                            "default_source": true
                          }, 
                          {
                            "path": "4-router2-in.pcap"
                          }, 
                          {
                            "path": "fs/admin/multisegment/6-router3-in.pcap"
                          }
                        ], 
                        "id": "/admin/multisegment/multisegment.pvt", 
                        "type": "MULTISEGMENT_FILE", 
                        "link_type": "DLT_EN10MB", 
                        "size": 264
                      }
                    ], 
                    "dirs": [], 
                    "description": "This is a multi-segment file", 
                    "created": 1342767955, 
                    "modified": 1343077906, 
                    "id": "/admin/multisegment"
                  }, 
                  {
                    "files": [
                      {
                        "created": 1342645581, 
                        "modified": 1342646988, 
                        "id": "/admin/new-dir/http.cap", 
                        "type": "PCAP_FILE", 
                        "link_type": "DLT_EN10MB", 
                        "size": 147456
                      }
                    ], 
                    "dirs": [], 
                    "description": "This is a custom folder", 
                    "created": 1348764627, 
                    "modified": 1348764743, 
                    "id": "/admin/new-dir"
                  }
                ], 
                "description": "My Files", 
                "created": 1341252038, 
                "modified": 1348764743, 
                "id": "/admin"
              }, 
              {
                "files": [], 
                "dirs": [], 
                "description": "normaluser Home Folder", 
                "created": 1341252038, 
                "modified": 1341252038, 
                "id": "/normaluser"
              }, 
              {
                "files": [], 
                "dirs": [], 
                "description": "Files Shared with Administrators", 
                "created": 1341252871, 
                "modified": 1341252871, 
                "id": "/Administrators"
              }, 
              {
                "files": [], 
                "dirs": [], 
                "description": "Files Shared with NormalUsers", 
                "created": 1341252871, 
                "modified": 1341252871, 
                "id": "/NormalUsers"
              }, 
              {
                "files": [], 
                "dirs": [], 
                "description": "Files Shared with Viewers", 
                "created": 1341252871, 
                "modified": 1341252871, 
                "id": "/Viewers"
              }
            ]
          }
        }, 
        "List directory": {
          "path": "fs/{directory_id}", 
          "parameters": {
            "directory_id": {
              "type": "string", 
              "description": "Directory path", 
              "required": true
            }, 
            "recursive": {
              "type": "string", 
              "description": "'true' for recursive directory listing, 'false' otherwise.", 
              "required": false
            }, 
            "details": {
              "type": "string", 
              "description": "'true' for details on all files, 'false' otherwise.", 
              "required": false
            }
          }, 
          "httpmethod": "GET", 
          "description": "Get information on directory {directory_id}.", 
          "response": {
            "$ref": "dir"
          }
        }, 
        "Create file or directory": {
          "path": "fs/{directory_id}", 
          "httpmethod": "POST", 
          "description": "Create trace file, merged file, multisegment file, or directory on the Shark. The file path is specified in the 'Content-Disposition' HTTP header and the file type to be created is specified using the 'Content-Type' HTTP header.", 
          "parameters": {
            "directory_id": {
              "type": "string", 
              "description": "The directory in which the file or directory is to be created", 
              "required": true
            }
          }, 
          "headers": {
            "Content-Type": {
              "type": "string", 
              "description": "The type of object to be created", 
              "notes": "Values: application/x-vnd.tcpdump, x-shark-directory, application/json, or text/xml", 
              "required": true
            }, 
            "Content-Disposition": {
              "type": "string", 
              "description": "The name of the file or directory to be created", 
              "required": true
            }
          }, 
          "altrequests": [
            {
              "header": "Content-Type: application/x-vnd.tcpdump", 
              "description": "Create trace file", 
              "request": {
                "type": "data", 
                "content_type": "application/x-vnd.tcpdump", 
                "description": "file contents"
              }
            }, 
            {
              "header": "Content-Type: x-shark-directory", 
              "description": "Create directory"
            }, 
            {
              "header": "Content-Type: application/json or text/xml", 
              "request": {
                "description": "Contains info about a new multisegment or merged file", 
                "example": {
                  "linked_sources": [
                    {
                      "path": "../2-router1-in.pcap", 
                      "default_source": true, 
                      "description": "This source uses a relative path"
                    }, 
                    {
                      "path": "fs/admin/4-router2-in.pcap", 
                      "timeskew": 100000000, 
                      "description": "This source uses an absolute path"
                    }, 
                    {
                      "path": "6-router3-in.pcap", 
                      "description": "This source uses a file name"
                    }
                  ], 
                  "type": "MULTISEGMENT_FILE"
                }, 
                "type": "object", 
                "id": "aggregated", 
                "properties": {
                  "type": {
                    "required": true, 
                    "type": "string", 
                    "description": "File type", 
                    "enum": [
                      "MULTISEGMENT_FILE", 
                      "MERGED_FILE"
                    ]
                  }, 
                  "linked_sources": {
                    "description": "Linked sources details list", 
                    "required": true, 
                    "type": "array", 
                    "items": {
                      "id": "linked_source", 
                      "type": "object", 
                      "properties": {
                        "path": {
                          "description": "Linked source path. It could be either an absolute path (fs/ID) or a relative path starting from the aggregated file folder.", 
                          "required": true, 
                          "type": "string"
                        }, 
                        "default_source": {
                          "description": "The default source is the reference source in a multisegment file collection and it is used as reference for the time skew calculation", 
                          "required": false, 
                          "type": "boolean"
                        }, 
                        "timeskew": {
                          "description": "It is the packets timestamps offset associated with the linked source", 
                          "required": false, 
                          "type": "number"
                        }, 
                        "description": {
                          "description": "A simple description field associated with the linked source", 
                          "required": false, 
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }, 
              "description": "Create merged or multisegment file"
            }
          ]
        }, 
        "Get file info": {
          "path": "fs/{file_id}", 
          "httpmethod": "GET", 
          "description": "Get descriptive information for file or directory {file_id}", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File or directory path", 
              "required": true
            }
          }, 
          "response": {
            "$ref": "file"
          }
        }, 
        "Download file contents": {
          "path": "fs/{file_id}/download", 
          "httpmethod": "GET", 
          "description": "Download contents of trace file, merged file, or multisegment file {file_id}.", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }, 
          "response": {
            "type": "data", 
            "content_type": "application/x-vnd.tcpdump or application/xml"
          }
        }, 
        "Modify merged or multisegment file": {
          "path": "fs/{file_id}", 
          "httpmethod": "PUT", 
          "description": "Modify merged file or multisegment file {file_id} on the Shark.", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }, 
          "request": {
            "description": "Contains info about a new multisegment or merged file", 
            "example": {
              "linked_sources": [
                {
                  "path": "../2-router1-in.pcap", 
                  "default_source": true, 
                  "description": "This source uses a relative path"
                }, 
                {
                  "path": "fs/admin/4-router2-in.pcap", 
                  "timeskew": 100000000, 
                  "description": "This source uses an absolute path"
                }, 
                {
                  "path": "6-router3-in.pcap", 
                  "description": "This source uses a file name"
                }
              ], 
              "type": "MULTISEGMENT_FILE"
            }, 
            "type": "object", 
            "id": "aggregated", 
            "properties": {
              "type": {
                "required": true, 
                "type": "string", 
                "description": "File type", 
                "enum": [
                  "MULTISEGMENT_FILE", 
                  "MERGED_FILE"
                ]
              }, 
              "linked_sources": {
                "description": "Linked sources details list", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "linked_source", 
                  "type": "object", 
                  "properties": {
                    "path": {
                      "description": "Linked source path. It could be either an absolute path (fs/ID) or a relative path starting from the aggregated file folder.", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "default_source": {
                      "description": "The default source is the reference source in a multisegment file collection and it is used as reference for the time skew calculation", 
                      "required": false, 
                      "type": "boolean"
                    }, 
                    "timeskew": {
                      "description": "It is the packets timestamps offset associated with the linked source", 
                      "required": false, 
                      "type": "number"
                    }, 
                    "description": {
                      "description": "A simple description field associated with the linked source", 
                      "required": false, 
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }, 
        "Delete file": {
          "path": "fs/{file_id}", 
          "httpmethod": "DELETE", 
          "description": "Delete file {file_id}.  NOTE: If a file to be deleted is open for any reason, the delete operation will fail.", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }
        }, 
        "Delete directory": {
          "path": "fs/{directory_id}", 
          "httpmethod": "DELETE", 
          "description": "Delete user directory {directory_id}.  If the directory is not empty, all files in the directory will be deleted as well. NOTE: If a file to be deleted is open for any reason, the delete operation will fail.", 
          "parameters": {
            "directory_id": {
              "type": "string", 
              "description": "Directory path", 
              "required": true
            }
          }
        }, 
        "Get file checksum": {
          "path": "fs/{file_id}/checksum", 
          "httpmethod": "GET", 
          "description": "Obtain a checksum for a trace file.", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }, 
          "response": {
            "description": "Contains info about a checksum calculated on a trace file", 
            "example": {
              "method": "SHA256", 
              "value": "db8afb5138e5dcea93092ebcb8d20ab855e68b086d6541d68a942914e2a74372"
            }, 
            "type": "object", 
            "id": "checksum", 
            "properties": {
              "value": {
                "description": "Trace file's checksum", 
                "required": true, 
                "type": "string"
              }, 
              "method": {
                "required": true, 
                "type": "string", 
                "description": "Checksum algorithm", 
                "enum": [
                  "SHA256"
                ]
              }
            }
          }
        }, 
        "Get file index info": {
          "path": "fs/{file_id}/index", 
          "httpmethod": "GET", 
          "description": "Get index information for trace file {file_id}.", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }, 
          "response": {
            "$ref": "index_info"
          }
        }, 
        "Create file index": {
          "path": "fs/{file_id}/index", 
          "httpmethod": "POST", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }, 
          "description": "Create index for trace file {file_id}"
        }, 
        "Delete file index": {
          "path": "fs/{file_id}/index", 
          "httpmethod": "DELETE", 
          "description": "Delete index for trace file {file_id}.", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }
        }, 
        "Move file or directory": {
          "path": "fs/{file_id}/move", 
          "httpmethod": "POST", 
          "description": "Request move of file or directory resource {file_id}", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }, 
          "request": {
            "description": "Contains the resource's destination id for a move operation", 
            "example": {
              "destination": "/admin/new-dir/http.cap"
            }, 
            "type": "object", 
            "id": "move", 
            "properties": {
              "destination": {
                "description": "Resource's destination id", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "Create timeskew estimate": {
          "path": "fs/{file_id}/fs/timeskew_estimate", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }, 
            "packet_count": {
              "type": "number", 
              "description": "Maximum number of packets to process", 
              "required": false
            }
          }, 
          "httpmethod": "PUT", 
          "description": "Start a timeskew estimation process for multisegment file {file_id}."
        }, 
        "Get timeskew estimate results": {
          "path": "fs/{file_id}/timeskew_estimate", 
          "httpmethod": "GET", 
          "description": "Time skew information for multisegment file {file_id}", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }, 
          "response": {
            "description": "Time skew estimate information", 
            "example": {
              "status": {
                "state": "OK"
              }, 
              "results": [
                {
                  "source_index": 1, 
                  "timeskew": 0
                }, 
                {
                  "source_index": 2, 
                  "timeskew": -1000000
                }, 
                {
                  "source_index": 3, 
                  "timeskew": 30654891
                }
              ]
            }, 
            "type": "object", 
            "id": "timeskew_estimate", 
            "properties": {
              "status": {
                "description": "Status information for the time skew estimate", 
                "required": true, 
                "type": "object", 
                "id": "status", 
                "properties": {
                  "state": {
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "EMPTY", 
                      "COMPUTING", 
                      "NO_PACKETS", 
                      "UNIDIRECTIONAL", 
                      "TIMESTAMP_WARNING", 
                      "DUPLICATE_WARNING", 
                      "OK"
                    ]
                  }, 
                  "duplicated_count": {
                    "description": "Number of packets with the same timestamp in different capture points. Check this field in order to estimate if this is a real issue or not: if the number of packets experiencing this problem is high probably at least two files contain the same packets, otherwise it means that for some packets the timeskew observed makes the delay becomes zero (timeskew = delay for that packet).", 
                    "required": false, 
                    "type": "number"
                  }, 
                  "first_invalid_timestamp": {
                    "description": "First timestamp causing the TIMESTAMP_WARNING code", 
                    "required": false, 
                    "$ref": "timestamp-hp"
                  }, 
                  "invalid_source_index": {
                    "description": "Index of the file causing the TIMESTAMP_WARNING code", 
                    "required": false, 
                    "type": "number"
                  }
                }
              }, 
              "results": {
                "description": "List of linked sources", 
                "required": false, 
                "type": "array", 
                "items": {
                  "id": "result", 
                  "description": "Time skew information for a linked source", 
                  "type": "object", 
                  "properties": {
                    "source_index": {
                      "description": "Index of the linked source", 
                      "required": true, 
                      "type": "number"
                    }, 
                    "timeskew": {
                      "description": "Estimated time skew compared to the default source", 
                      "required": true, 
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }, 
        "Delete timeskew estimate": {
          "path": "fs/{file_id}/fs/timeskew_estimate", 
          "httpmethod": "DELETE", 
          "description": "Delete time skew estimate results for multisegment file {file_id}.", 
          "parameters": {
            "file_id": {
              "type": "string", 
              "description": "File path", 
              "required": true
            }
          }
        }
      }
    }, 
    "packet export": {
      "methods": {
        "Start export operation": {
          "path": "{source_type}/{source_id}/exports", 
          "httpmethod": "POST", 
          "parameters": {
            "source_type": {
              "type": "string", 
              "description": "Packet source type identifier. Must be one of \"interfaces\", \"jobs\", \"clips\", or \"fs\".", 
              "required": true
            }, 
            "source_id": {
              "type": "string", 
              "description": "Specific source identifier of type {source_type}. For example, if source_type is \"jobs\", then the {source_id} is the job identifier.", 
              "required": true
            }
          }, 
          "description": "Create a new export operation from the given source. This begins the process of extracting packets from the given source and returns a handle through which the caller can obtain status on the operation as well as download the packets themselves.", 
          "request": {
            "$ref": "export_config"
          }, 
          "response": {
            "example": {
              "id": "000193E1"
            }, 
            "type": "object", 
            "id": "export_id", 
            "properties": {
              "id": {
                "description": "ID of created export", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "List export operations": {
          "path": "{source_type}/{source_id}/exports", 
          "httpmethod": "GET", 
          "parameters": {
            "source_type": {
              "type": "string", 
              "description": "Packet source type identifier. Must be one of \"interfaces\", \"jobs\", \"clips\", or \"fs\".", 
              "required": true
            }, 
            "source_id": {
              "type": "string", 
              "description": "Specific source identifier of type {source_type}. For example, if source_type is \"jobs\", then the {source_id} is the job identifier.", 
              "required": true
            }
          }, 
          "description": "Get the list of active export operations from the given source.", 
          "response": {
            "type": "array", 
            "description": "List of exports currently under way", 
            "id": "exports", 
            "items": {
              "id": "export", 
              "$ref": "export"
            }, 
            "example": [
              {
                "status": {
                  "owner": "admin", 
                  "creation_time": 1364334117658433000, 
                  "state": "RUNNING", 
                  "bytes_approx": 855784
                }, 
                "config": {
                  "output_format": "PCAP_US", 
                  "end_time": 1364317200, 
                  "start_time": 1364230933
                }, 
                "id": "000193E1"
              }
            ]
          }
        }, 
        "Get export operation status": {
          "path": "{source_type}/{source_id}/exports/{export_id}", 
          "httpmethod": "GET", 
          "parameters": {
            "source_type": {
              "type": "string", 
              "description": "Packet source type identifier. Must be one of \"interfaces\", \"jobs\", \"clips\", or \"fs\".", 
              "required": true
            }, 
            "source_id": {
              "type": "string", 
              "description": "Specific source identifier of type {source_type}. For example, if source_type is \"jobs\", then the {source_id} is the job identifier.", 
              "required": true
            }, 
            "export_id": {
              "type": "string", 
              "description": "Export operation identifier.", 
              "required": true
            }
          }, 
          "description": "Get status of an export operation", 
          "response": {
            "$ref": "export"
          }
        }, 
        "Stop export operation": {
          "path": "{source_type}/{source_id}/exports/{export_id}", 
          "httpmethod": "DELETE", 
          "parameters": {
            "source_type": {
              "type": "string", 
              "description": "Packet source type identifier. Must be one of \"interfaces\", \"jobs\", \"clips\", or \"fs\".", 
              "required": true
            }, 
            "source_id": {
              "type": "string", 
              "description": "Specific source identifier of type {source_type}. For example, if source_type is \"jobs\", then the {source_id} is the job identifier.", 
              "required": true
            }, 
            "export_id": {
              "type": "string", 
              "description": "Export operation identifier.", 
              "required": true
            }
          }, 
          "description": "Stop an export operation"
        }, 
        "Get job export packets": {
          "path": "{source_type}/{source_id}/exports/{export_id}/packets", 
          "httpmethod": "GET", 
          "parameters": {
            "source_type": {
              "type": "string", 
              "description": "Packet source type identifier. Must be one of \"interfaces\", \"jobs\", \"clips\", or \"fs\".", 
              "required": true
            }, 
            "source_id": {
              "type": "string", 
              "description": "Specific source identifier of type {source_type}. For example, if source_type is \"jobs\", then the {source_id} is the job identifier.", 
              "required": true
            }, 
            "export_id": {
              "type": "string", 
              "description": "Export operation identifier.", 
              "required": true
            }
          }, 
          "description": "Get the packet stream for an export operation.", 
          "response": {
            "type": "data", 
            "content_type": "application/vnd.tcpdump.pcap", 
            "description": "Packet data"
          }
        }, 
        "Download job packets": {
          "path": "{source_type}/{source_id}/packets", 
          "parameters": {
            "source_type": {
              "type": "string", 
              "description": "Packet source type identifier. Must be one of \"interfaces\", \"jobs\", \"clips\", or \"fs\".", 
              "required": true
            }, 
            "source_id": {
              "type": "string", 
              "description": "Specific source identifier of type {source_type}. For example, if source_type is \"jobs\", then the {source_id} is the job identifier.", 
              "required": true
            }, 
            "bytes": {
              "type": "number", 
              "description": "Limit on number of bytes to be extracted.", 
              "required": false
            }, 
            "packets": {
              "type": "number", 
              "description": "Limit on number of packets to be extracted.", 
              "required": false
            }, 
            "seconds": {
              "type": "number", 
              "description": "Limit on total time (in seconds) of packet extraction.", 
              "required": false
            }, 
            "filename": {
              "type": "string", 
              "description": "Name of output filename.  This will appear in the 'content-disposition' header of the response.", 
              "required": false
            }, 
            "file_format": {
              "type": "string", 
              "description": "Format of output file: 'PCAP_US' for PCAP format (microsecond resolution); 'PCAP_NS' for PCAP format (nanosecond resolution); 'PCAPNG_US' for PCAP-NG format (microsecond resolution); or 'PCAPNG_NS' for PCAP_NG format (nanosecond resolution).", 
              "required": false
            }
          }, 
          "httpmethod": "GET", 
          "description": "Export packets from a capture job.  Response content type is 'application/vnd.tcpdump.pcap'."
        }
      }
    }, 
    "views": {
      "methods": {
        "List views": {
          "path": "views", 
          "httpmethod": "GET", 
          "description": "Get the list of currently running views.", 
          "response": {
            "type": "array", 
            "description": "View list", 
            "id": "views", 
            "items": {
              "id": "view", 
              "type": "object", 
              "properties": {
                "id": {
                  "description": "View ID", 
                  "required": true, 
                  "type": "string"
                }, 
                "creation_time": {
                  "description": "View creation time", 
                  "required": true, 
                  "$ref": "timestamp-hp"
                }, 
                "owner": {
                  "description": "Owner user name", 
                  "required": true, 
                  "type": "string"
                }, 
                "state": {
                  "description": "View state", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "UNINITIALIZED", 
                    "LOADED", 
                    "PARAMS_LOADED", 
                    "INITIALIZED", 
                    "READY", 
                    "RUNNING", 
                    "ERRORS", 
                    "DONE", 
                    "CLOSING", 
                    "PAUSED"
                  ]
                }, 
                "locked": {
                  "description": "True if locked", 
                  "required": true, 
                  "type": "boolean"
                }, 
                "watches": {
                  "description": "Watch list for this view", 
                  "required": true, 
                  "type": "array", 
                  "items": {
                    "id": "watch", 
                    "type": "object", 
                    "properties": {
                      "id": {
                        "description": "Watch Id", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "state": {
                        "description": "Watch state", 
                        "required": true, 
                        "type": "string", 
                        "enum": [
                          "UNINITIALIZED", 
                          "LOADED", 
                          "PARAMS_LOADED", 
                          "INITIALIZED", 
                          "READY", 
                          "RUNNING", 
                          "ERRORS", 
                          "DONE", 
                          "CLOSING", 
                          "PAUSED"
                        ]
                      }, 
                      "last_error": {
                        "description": "Error description, if the watch is in an error state", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "event_count": {
                        "description": "Number of triggered events", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "first_event_time": {
                        "description": "Time of the first triggered event", 
                        "required": true, 
                        "$ref": "timestamp-hp"
                      }, 
                      "last_event_time": {
                        "description": "Time of the last triggered event", 
                        "required": true, 
                        "$ref": "timestamp-hp"
                      }
                    }
                  }
                }
              }, 
              "description": "Summary information for a view"
            }, 
            "example": [
              {
                "locked": false, 
                "creation_time": 1348518372678002, 
                "watches": [], 
                "state": "DONE", 
                "owner": "admin", 
                "id": "00018ED5"
              }
            ]
          }
        }, 
        "Create view": {
          "path": "views", 
          "httpmethod": "POST", 
          "description": "Create a new view.", 
          "request": {
            "$ref": "view"
          }, 
          "response": {
            "description": "ID of the newly created view", 
            "example": {
              "id": "00018ED5", 
              "data_source_type": "PACKETS"
            }, 
            "type": "object", 
            "id": "view_id", 
            "properties": {
              "id": {
                "description": "View ID", 
                "required": true, 
                "type": "string"
              }, 
              "data_source_type": {
                "description": "Data source type", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "INDEX", 
                  "PACKETS"
                ]
              }
            }
          }
        }, 
        "Get view configuration": {
          "path": "views/{view_id}", 
          "httpmethod": "GET", 
          "description": "Get configuration for view {view_id}.", 
          "response": {
            "$ref": "view"
          }
        }, 
        "Delete view": {
          "path": "views/{view_id}", 
          "httpmethod": "DELETE", 
          "description": "Delete view {view_id}. This will stop any packet processing and delete the view results."
        }, 
        "Get view output legend": {
          "path": "views/{view_id}/data/{output_id}/legend", 
          "httpmethod": "GET", 
          "description": "Get data legend for the output {output_id} in view {view_id}.", 
          "response": {
            "type": "array", 
            "description": "Output legend", 
            "id": "legend", 
            "items": {
              "id": "label", 
              "type": "object", 
              "properties": {
                "base": {
                  "description": "Base", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "NONE", 
                    "DEC", 
                    "HEX", 
                    "OCT", 
                    "DEC_HEX", 
                    "HEX_DEC", 
                    "PERC"
                  ]
                }, 
                "calculation": {
                  "description": "Calculation type", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "NONE", 
                    "SUM", 
                    "MAX", 
                    "MIN", 
                    "AVG", 
                    "TIME_AVG"
                  ]
                }, 
                "dimension": {
                  "description": "True if dimension", 
                  "required": true, 
                  "type": "boolean"
                }, 
                "name": {
                  "description": "Name", 
                  "required": true, 
                  "type": "string"
                }, 
                "description": {
                  "description": "Description", 
                  "required": true, 
                  "type": "string"
                }, 
                "field": {
                  "description": "Field", 
                  "required": true, 
                  "type": "string"
                }, 
                "id": {
                  "description": "Id", 
                  "required": true, 
                  "type": "string"
                }, 
                "type": {
                  "description": "Type", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "NONE", 
                    "PROTOCOL", 
                    "BOOLEAN", 
                    "UINT8", 
                    "UINT16", 
                    "UINT24", 
                    "UINT32", 
                    "UINT64", 
                    "INT8", 
                    "INT16", 
                    "INT24", 
                    "INT32", 
                    "INT64", 
                    "FLOAT", 
                    "DOUBLE", 
                    "ABSOLUTE_TIME", 
                    "RELATIVE_TIME", 
                    "STRING", 
                    "STRINGZ", 
                    "SHORT_STRING", 
                    "UINT_STRING", 
                    "ETHER", 
                    "BYTES", 
                    "UINT_BYTES", 
                    "IPv4", 
                    "IPv6", 
                    "UDP_PORT", 
                    "TCP_PORT", 
                    "IPXNET", 
                    "FRAMENUM", 
                    "PCRE", 
                    "GUID", 
                    "OID", 
                    "NUM_TYPES", 
                    "INDEX", 
                    "EUI64"
                  ]
                }
              }, 
              "description": "Legend Entry"
            }, 
            "example": [
              {
                "description": "IP protocol, TCP port or UDP port converted into a traffic type string (e.g. 'Email' or 'Web').", 
                "calculation": "NONE", 
                "id": "x0", 
                "field": "generic.application", 
                "base": "NONE", 
                "type": "SHORT_STRING", 
                "dimension": true, 
                "name": "Traffic Type"
              }, 
              {
                "description": "Bit Count", 
                "calculation": "TIME_AVG", 
                "id": "x1", 
                "field": "generic.bits", 
                "base": "DEC", 
                "type": "UINT64", 
                "dimension": false, 
                "name": "Bits"
              }
            ]
          }
        }, 
        "Get view output data": {
          "path": "views/{view_id}/data/{output_id}", 
          "description": "Get data for the output {output_id} in view {view_id}.", 
          "parameters": {
            "start": {
              "type": "number", 
              "description": "Timestamp value representing start time.", 
              "required": false
            }, 
            "end": {
              "type": "number", 
              "description": "Timestamp value representing end time.", 
              "required": false
            }, 
            "delta": {
              "type": "string", 
              "description": "Sampling interval, in nanoseconds", 
              "required": false
            }, 
            "aggregated": {
              "type": "string", 
              "description": "'true' if output is in a single sample.", 
              "required": false
            }, 
            "sortby": {
              "type": "string", 
              "description": "Name (x0, x1, etc.) of column used to sort output values.", 
              "required": false
            }, 
            "fromentry": {
              "type": "number", 
              "description": "In paged output: number of first output row. NOTE: Row numbers start from 0.", 
              "required": false
            }, 
            "toentry": {
              "type": "number", 
              "description": "In paged output: number of last output row.", 
              "required": false
            }, 
            "sorttype": {
              "type": "string", 
              "description": "'ascending' or 'descending'", 
              "required": false
            }, 
            "countonly": {
              "type": "number", 
              "description": "(Only available when 'aggregated' = 'true'.) Return number of rows only.", 
              "required": false
            }
          }, 
          "httpmethod": "GET", 
          "response": {
            "properties": {
              "samples": {
                "required": true, 
                "type": "array", 
                "description": "Samples list", 
                "id": "samples", 
                "items": {
                  "id": "sample", 
                  "type": "object", 
                  "properties": {
                    "t": {
                      "description": "Sample timestamp", 
                      "required": false, 
                      "$ref": "timestamp-hp"
                    }, 
                    "p": {
                      "description": "Processed packet count", 
                      "required": false, 
                      "type": "number"
                    }, 
                    "u": {
                      "description": "Unprocessed packet count", 
                      "required": false, 
                      "type": "number"
                    }, 
                    "value_count": {
                      "description": "Number of distinct rows", 
                      "notes": "Present only when the output is aggregated", 
                      "required": false, 
                      "type": "number"
                    }, 
                    "value_sum": {
                      "description": "Sum of all the values for the sorting column", 
                      "required": false, 
                      "type": "number"
                    }, 
                    "vals": {
                      "description": "Values list", 
                      "required": true, 
                      "type": "array", 
                      "notes": "In XML, the values list is encoded as <val x0=\"val0\" x1=\"val1\" .../>, where x0..xN correspond to the columns defined in the view configuraton", 
                      "items": {
                        "id": "val", 
                        "type": "array", 
                        "description": "Value", 
                        "items": {
                          "type": "string", 
                          "id": "val"
                        }
                      }
                    }, 
                    "gap_start": {
                      "description": "Timestamp at the start of a data gap, representing a period of time in which there are no output values for the view", 
                      "notes": "If present, then the vals list will be empty. In XML, a gap is encoded as <gap t1=\"start\" t2=\"end\"/>.", 
                      "required": false, 
                      "$ref": "timestamp-hp"
                    }, 
                    "gap_end": {
                      "description": "Timestamp at the end of a data gap, representing a period of time in which there are no output values for the view", 
                      "notes": "If present, then the vals list will be empty. In XML, a gap is encoded as <gap t1=\"start\" t2=\"end\"/>.", 
                      "required": false, 
                      "$ref": "timestamp-hp"
                    }
                  }, 
                  "description": "Sample for a view output"
                }
              }
            }, 
            "description": "View output", 
            "id": "samples", 
            "xmlExample": "<samples>\n  <sample t=\"1195590481719742000\" p=\"391\">\n    <ValueCount Value=\"5\"/>\n    <ValueSum Value=\"2784448\"/>\n    <val x0=\"IM\" x1=\"776\"/>\n    <val x0=\"ICMP\" x1=\"3424\"/>\n    <val x0=\"Voice/Video\" x1=\"4480\"/>\n    <val x0=\"Unknown\" x1=\"126696\"/>\n    <val x0=\"Web\" x1=\"2649072\"/>\n  </sample>\n  <sample t=\"1195590482719742000\" p=\"416\">\n    <ValueCount Value=\"6\"/>\n    <ValueSum Value=\"2805144\"/>\n    <val x0=\"ICMP\" x1=\"480\"/>\n    <val x0=\"ARP\" x1=\"1184\"/>\n    <val x0=\"IM\" x1=\"2552\"/>\n    <val x0=\"Voice/Video\" x1=\"4480\"/>\n    <val x0=\"Unknown\" x1=\"111424\"/>\n    <val x0=\"Web\" x1=\"2685024\"/>\n  </sample>\n  <sample t=\"1195590483719742000\" p=\"390\">\n    <ValueCount Value=\"4\"/>\n    <ValueSum Value=\"2758864\"/>\n    <val x0=\"ARP\" x1=\"2000\"/>\n    <val x0=\"IM\" x1=\"7808\"/>\n    <val x0=\"Unknown\" x1=\"115392\"/>\n    <val x0=\"Web\" x1=\"2633664\"/>\n  </sample>\n</samples>", 
            "xmlSchema": {
              "samples": {
                "children": {
                  "sample": {
                    "attributes": {
                      "t": "timestamp-hp", 
                      "p": "number", 
                      "u": "number"
                    }, 
                    "children": {
                      "val": {
                        "attributes": {
                          "x0": "string", 
                          "x1": "string", 
                          "x2": "string", 
                          "x3": "string", 
                          "...": "string"
                        }
                      }, 
                      "ValueCount": {
                        "attributes": {
                          "Value": "number"
                        }
                      }, 
                      "ValueSum": {
                        "attributes": {
                          "Value": "number"
                        }
                      }
                    }
                  }, 
                  "gap": {
                    "attributes": {
                      "t1": "number", 
                      "t2": "number"
                    }
                  }
                }
              }
            }, 
            "type": "object", 
            "example": {
              "samples": [
                {
                  "t": 1195590481719742000, 
                  "p": 391, 
                  "value_count": 5, 
                  "value_sum": 2784448, 
                  "vals": [
                    [
                      "IM", 
                      "776"
                    ], 
                    [
                      "ICMP", 
                      "3424"
                    ], 
                    [
                      "Voice/Video", 
                      "4480"
                    ], 
                    [
                      "Unknown", 
                      "126696"
                    ], 
                    [
                      "Web", 
                      "2649072"
                    ]
                  ]
                }, 
                {
                  "t": 1195590482719742000, 
                  "p": 416, 
                  "value_count": 6, 
                  "value_sum": 2805144, 
                  "vals": [
                    [
                      "ICMP", 
                      "480"
                    ], 
                    [
                      "ARP", 
                      "1184"
                    ], 
                    [
                      "IM", 
                      "2552"
                    ], 
                    [
                      "Voice/Video", 
                      "4480"
                    ], 
                    [
                      "Unknown", 
                      "111424"
                    ], 
                    [
                      "Web", 
                      "2685024"
                    ]
                  ]
                }, 
                {
                  "t": 1195590483719742000, 
                  "p": 390, 
                  "value_count": 4, 
                  "value_sum": 2758864, 
                  "vals": [
                    [
                      "ARP", 
                      "2000"
                    ], 
                    [
                      "IM", 
                      "7808"
                    ], 
                    [
                      "Unknown", 
                      "115392"
                    ], 
                    [
                      "Web", 
                      "2633664"
                    ]
                  ]
                }
              ]
            }
          }
        }, 
        "Get view statistics": {
          "path": "views/{view_id}/stats", 
          "httpmethod": "GET", 
          "description": "Get processing statistics for view {view_id}.", 
          "response": {
            "description": "View statistics", 
            "example": {
              "locked": false, 
              "data_source_type": "PACKETS", 
              "state": "DONE", 
              "input_size": 190654505, 
              "time_details": {
                "start": 1195590481719742000, 
                "end": 1195590918719742000, 
                "delta": 1000000000
              }, 
              "processed_size": 190654505
            }, 
            "type": "object", 
            "id": "stats", 
            "properties": {
              "input_size": {
                "description": "Size (in bytes) of the input source to process", 
                "required": true, 
                "type": "number"
              }, 
              "processed_size": {
                "description": "Size (in bytes) of the input source currently processed", 
                "required": true, 
                "type": "number"
              }, 
              "state": {
                "description": "Handle state", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "UNINITIALIZED", 
                  "LOADED", 
                  "PARAMS_LOADED", 
                  "INITIALIZED", 
                  "READY", 
                  "RUNNING", 
                  "ERRORS", 
                  "DONE", 
                  "CLOSING", 
                  "PAUSED"
                ]
              }, 
              "locked": {
                "description": "True if the view is locked", 
                "required": true, 
                "type": "boolean"
              }, 
              "time_details": {
                "description": "Time details", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "start": {
                    "description": "Output start time. Can be 0 if the output has no data.", 
                    "required": true, 
                    "$ref": "timestamp-hp"
                  }, 
                  "end": {
                    "description": "Output end time. Can be 0 if the output has no data.", 
                    "required": true, 
                    "$ref": "timestamp-hp"
                  }, 
                  "delta": {
                    "description": "Output sampling rate", 
                    "required": true, 
                    "type": "number"
                  }
                }
              }, 
              "data_source_type": {
                "description": "Data source type", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "INDEX", 
                  "PACKETS"
                ]
              }
            }
          }
        }, 
        "Lock view": {
          "path": "views/{view_id}/lock", 
          "httpmethod": "POST", 
          "description": "Lock view {view_id}."
        }, 
        "Unlock view": {
          "path": "views/{view_id}/unlock", 
          "httpmethod": "POST", 
          "description": "Unlock view {view_id}."
        }, 
        "Get view acl": {
          "path": "views/{view_id}/acl", 
          "httpmethod": "GET", 
          "description": "Get the access control list for running view {view_id}.", 
          "response": {
            "description": "Access Control List", 
            "example": {
              "users": [
                {
                  "owner": true, 
                  "name": "admin"
                }
              ], 
              "groups": []
            }, 
            "type": "object", 
            "id": "acl", 
            "properties": {
              "users": {
                "description": "Users in the access control list", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "user", 
                  "type": "object", 
                  "properties": {
                    "name": {
                      "description": "User name", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "owner": {
                      "description": "True if the user is the owner of the view", 
                      "required": true, 
                      "type": "boolean"
                    }
                  }, 
                  "description": "User in the access list"
                }
              }, 
              "groups": {
                "description": "Groups in the access control list", 
                "required": true, 
                "type": "array", 
                "items": {
                  "type": "string", 
                  "id": "group"
                }
              }
            }
          }
        }, 
        "Update view acl": {
          "path": "views/{view_id}/acl", 
          "httpmethod": "POST", 
          "description": "Modify the access control list for running view {view_id}.", 
          "request": {
            "description": "Action type on the access list", 
            "example": {
              "action": "ADD_USER", 
              "value": "normaluser"
            }, 
            "type": "object", 
            "id": "acl_action", 
            "properties": {
              "action": {
                "description": "Action type on the access list", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "ADD_USER", 
                  "REMOVE_USER", 
                  "ADD_GROUP", 
                  "REMOVE_GROUP"
                ]
              }, 
              "value": {
                "description": "User/group name depending on the action type", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }
      }
    }, 
    "watches": {
      "methods": {
        "List watches": {
          "path": "views/{view_id}/watches", 
          "httpmethod": "GET", 
          "description": "Get the list of watches for view {view_id}.", 
          "response": {
            "type": "array", 
            "description": "Watch list", 
            "id": "watches", 
            "items": {
              "id": "watch", 
              "$ref": "watch"
            }, 
            "example": [
              {
                "info": {
                  "name": "Watch 1"
                }, 
                "severity": 6, 
                "triggers": [
                  {
                    "uid": "Trigger 1", 
                    "dimension_restrictions": {
                      "sub_restrictions": [], 
                      "restrictions": [
                        {
                          "field": "c1", 
                          "value": "Web"
                        }
                      ], 
                      "bool_operator": "OR"
                    }, 
                    "condition_operator": "AND", 
                    "bool_operator": "OR", 
                    "conditions": [
                      {
                        "field": "c2", 
                        "condition_info": {
                          "aggregation_type": "VALUE", 
                          "check_type": "GREATER", 
                          "value": "0"
                        }
                      }
                    ]
                  }
                ], 
                "watch_uid": "watch_1", 
                "enabled": true, 
                "actions": {
                  "actions": [
                    {
                      "type": "InternalDBLog", 
                      "uid": "Action 1", 
                      "parameters": [], 
                      "side": "SERVER"
                    }
                  ], 
                  "fired_triggers": {
                    "bool_operator": "AND", 
                    "triggering_mode": "LEADINGEDGE", 
                    "triggers": [
                      "Trigger 1"
                    ]
                  }
                }, 
                "timing": {
                  "time_analysis_mode": "SAMPLE_BY_SAMPLE", 
                  "from": "NOW", 
                  "interval_ms": 1000
                }, 
                "output_uid": "OUID_Output_Over_Time"
              }
            ]
          }
        }, 
        "Create watch": {
          "path": "views/{view_id}/watches", 
          "httpmethod": "POST", 
          "description": "Create a new watch for view {view_id}.", 
          "request": {
            "$ref": "watch"
          }
        }, 
        "Get watch detail": {
          "path": "views/{view_id}/watches/{watch_id}", 
          "httpmethod": "GET", 
          "description": "Config information for watch {watch_id} on view {view_id}.", 
          "response": {
            "$ref": "watch"
          }
        }, 
        "Update watch": {
          "path": "views/{view_id}/watches/{watch_id}", 
          "httpmethod": "PUT", 
          "description": "Update configuration for watch {watch_id} on view {view_id}.", 
          "request": {
            "$ref": "watch"
          }
        }, 
        "Delete watch": {
          "path": "views/{view_id}/watches/{watch_id}", 
          "httpmethod": "DELETE", 
          "description": "Delete watch {watch_id} on view {view_id}."
        }, 
        "Disable watch": {
          "path": "views/{view_id}/watches/{watch_id}/disable", 
          "httpmethod": "POST", 
          "description": "Disable watch {watch_id} on view {view_id}."
        }, 
        "Enable watch": {
          "path": "views/{view_id}/watches/{watch_id}/enable", 
          "httpmethod": "POST", 
          "description": "Enable watch {watch_id} on view {view_id}."
        }
      }
    }, 
    "settings": {
      "methods": {
        "Get basic settings": {
          "path": "settings/basic", 
          "httpmethod": "GET", 
          "description": "Get basic settings.", 
          "response": {
            "$ref": "basic_settings"
          }
        }, 
        "Update basic settings": {
          "path": "settings/basic", 
          "httpmethod": "PUT", 
          "description": "Update basic settings.", 
          "request": {
            "$ref": "basic_settings"
          }
        }, 
        "Get audit settings": {
          "path": "settings/audit", 
          "httpmethod": "GET", 
          "description": "Get audit settings.", 
          "response": {
            "$ref": "audit_settings"
          }
        }, 
        "Update audit settings": {
          "path": "settings/audit", 
          "httpmethod": "PUT", 
          "description": "Update audit settings.", 
          "request": {
            "$ref": "audit_settings"
          }
        }, 
        "Get authentication settings": {
          "path": "settings/auth", 
          "httpmethod": "GET", 
          "description": "Get authentication settings.", 
          "response": {
            "$ref": "auth_settings"
          }
        }, 
        "Update authentication settings": {
          "path": "settings/auth", 
          "httpmethod": "PUT", 
          "description": "Update authentication settings.", 
          "request": {
            "$ref": "auth_settings"
          }
        }, 
        "Get firewall settings": {
          "path": "settings/firewall", 
          "httpmethod": "GET", 
          "description": "Get firewall settings.", 
          "response": {
            "description": "Firewall configuration", 
            "example": {
              "rules": [
                {
                  "action": "ACCEPT", 
                  "source": "10.0.0.1", 
                  "protocol": "TCP", 
                  "description": "Allow HTTPS for all the hosts", 
                  "dest_port": 65535
                }, 
                {
                  "action": "ACCEPT", 
                  "protocol": "TCP", 
                  "description": "Allow SSH for all the hosts", 
                  "dest_port": 22
                }, 
                {
                  "action": "ACCEPT", 
                  "protocol": "ICMP", 
                  "description": "Allow ICMP for all the hosts"
                }
              ], 
              "firewall_enabled": true, 
              "default_policy": "DROP"
            }, 
            "type": "object", 
            "id": "firewall_settings", 
            "properties": {
              "default_policy": {
                "required": true, 
                "type": "string", 
                "description": "Firewall default policy", 
                "enum": [
                  "ACCEPT", 
                  "DROP"
                ]
              }, 
              "firewall_enabled": {
                "description": "Enables or disable the firewall", 
                "required": true, 
                "type": "boolean"
              }, 
              "rules": {
                "description": "Rules list", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "rule", 
                  "type": "object", 
                  "properties": {
                    "description": {
                      "description": "Rule description", 
                      "required": false, 
                      "type": "string"
                    }, 
                    "source": {
                      "description": "Rule IPV4 source address. It can contain a netmasks specified as CIDR format or as IPV4 address.", 
                      "required": false, 
                      "type": "string"
                    }, 
                    "dest_port": {
                      "description": "Rule destination port", 
                      "required": false, 
                      "type": "number"
                    }, 
                    "protocol": {
                      "required": false, 
                      "type": "string", 
                      "description": "Rule protocol", 
                      "enum": [
                        "TCP", 
                        "UDP", 
                        "ICMP", 
                        "ALL"
                      ]
                    }, 
                    "action": {
                      "required": true, 
                      "type": "string", 
                      "description": "Rule action, what the firewall should do with the packet when it matches the rule", 
                      "enum": [
                        "ACCEPT", 
                        "DROP", 
                        "LOG_ACCEPT", 
                        "LOG_DROP"
                      ]
                    }
                  }
                }
              }
            }
          }
        }, 
        "Update firewall settings": {
          "path": "settings/firewall", 
          "httpmethod": "PUT", 
          "description": "Update firewall settings.", 
          "request": {
            "description": "Firewall configuration", 
            "example": {
              "rules": [
                {
                  "action": "ACCEPT", 
                  "source": "10.0.0.1", 
                  "protocol": "TCP", 
                  "description": "Allow HTTPS for all the hosts", 
                  "dest_port": 65535
                }, 
                {
                  "action": "ACCEPT", 
                  "protocol": "TCP", 
                  "description": "Allow SSH for all the hosts", 
                  "dest_port": 22
                }, 
                {
                  "action": "ACCEPT", 
                  "protocol": "ICMP", 
                  "description": "Allow ICMP for all the hosts"
                }
              ], 
              "firewall_enabled": true, 
              "default_policy": "DROP"
            }, 
            "type": "object", 
            "id": "firewall_settings", 
            "properties": {
              "default_policy": {
                "required": true, 
                "type": "string", 
                "description": "Firewall default policy", 
                "enum": [
                  "ACCEPT", 
                  "DROP"
                ]
              }, 
              "firewall_enabled": {
                "description": "Enables or disable the firewall", 
                "required": true, 
                "type": "boolean"
              }, 
              "rules": {
                "description": "Rules list", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "rule", 
                  "type": "object", 
                  "properties": {
                    "description": {
                      "description": "Rule description", 
                      "required": false, 
                      "type": "string"
                    }, 
                    "source": {
                      "description": "Rule IPV4 source address. It can contain a netmasks specified as CIDR format or as IPV4 address.", 
                      "required": false, 
                      "type": "string"
                    }, 
                    "dest_port": {
                      "description": "Rule destination port", 
                      "required": false, 
                      "type": "number"
                    }, 
                    "protocol": {
                      "required": false, 
                      "type": "string", 
                      "description": "Rule protocol", 
                      "enum": [
                        "TCP", 
                        "UDP", 
                        "ICMP", 
                        "ALL"
                      ]
                    }, 
                    "action": {
                      "required": true, 
                      "type": "string", 
                      "description": "Rule action, what the firewall should do with the packet when it matches the rule", 
                      "enum": [
                        "ACCEPT", 
                        "DROP", 
                        "LOG_ACCEPT", 
                        "LOG_DROP"
                      ]
                    }
                  }
                }
              }
            }
          }
        }, 
        "Get profiler export settings": {
          "path": "settings/profiler_export", 
          "httpmethod": "GET", 
          "description": "Get profiler export settings.", 
          "response": {
            "$ref": "profilerexport_settings"
          }
        }, 
        "Update profiler export settings": {
          "path": "settings/profiler_export", 
          "httpmethod": "PUT", 
          "description": "Update profiler export settings.", 
          "request": {
            "$ref": "profilerexport_settings"
          }
        }, 
        "Get snmp settings": {
          "path": "settings/snmp", 
          "httpmethod": "GET", 
          "description": "Get SNMP settings.", 
          "response": {
            "$ref": "snmp_settings"
          }
        }, 
        "Update snmp settings": {
          "path": "settings/snmp", 
          "httpmethod": "PUT", 
          "description": "Update SNMP settings.", 
          "request": {
            "$ref": "snmp_settings"
          }
        }, 
        "Get notification settings": {
          "path": "settings/notification", 
          "httpmethod": "GET", 
          "description": "Management daemon configuration parameters.", 
          "response": {
            "$ref": "notification_settings"
          }
        }, 
        "Update notification settings": {
          "path": "settings/notification", 
          "httpmethod": "PUT", 
          "description": "Update management daemon configuration parameters.", 
          "request": {
            "$ref": "notification_settings"
          }
        }, 
        "List cors domains": {
          "path": "settings/cors_domains", 
          "httpmethod": "GET", 
          "description": "Get the list of domains enabled for Cross Origin Resource Sharing.", 
          "response": {
            "type": "array", 
            "description": "List of CORS (Cross-Origin Resource Sharing) domains", 
            "id": "cors_domains", 
            "items": {
              "type": "string", 
              "id": "domain"
            }, 
            "example": [
              "http://example_domain1.com", 
              "http://example_domain2.com"
            ]
          }
        }, 
        "Update cors domains": {
          "path": "settings/cors_domains", 
          "httpmethod": "PUT", 
          "description": "Update the list of domains enabled for Cross Origin Resource Sharing.", 
          "request": {
            "type": "array", 
            "description": "List of CORS (Cross-Origin Resource Sharing) domains", 
            "id": "cors_domains", 
            "items": {
              "type": "string", 
              "id": "domain"
            }, 
            "example": [
              "http://example_domain1.com", 
              "http://example_domain2.com"
            ]
          }
        }
      }
    }, 
    "licenses": {
      "methods": {
        "List licenses": {
          "path": "settings/licenses", 
          "httpmethod": "GET", 
          "description": "Get the list of licenses on the system.", 
          "response": {
            "type": "array", 
            "description": "List of licenses currently in system", 
            "id": "licenses", 
            "items": {
              "id": "license", 
              "description": "Information for a Shark license", 
              "example": {
                "status": "VALID", 
                "valid_from": "no_limit", 
                "valid_to": "no_limit", 
                "feature_name": "VLAB", 
                "key": "LK1-VLAB-0000-0000-1-2644-76FE-6436", 
                "is_platform": false, 
                "feature_description": "VLAB License, Max Limits"
              }, 
              "type": "object", 
              "properties": {
                "key": {
                  "description": "License key for this license", 
                  "required": true, 
                  "type": "string"
                }, 
                "status": {
                  "description": "Status of this license", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "INVALID", 
                    "VALID", 
                    "VALID_SOON", 
                    "FUTURE", 
                    "EXPIRES_SOON", 
                    "EXPIRED", 
                    "SUPERSEDED", 
                    "UNKNOWN"
                  ]
                }, 
                "is_platform": {
                  "description": "'true' if this is a platform license", 
                  "required": true, 
                  "type": "boolean"
                }, 
                "feature_name": {
                  "description": "Feature covered by this license", 
                  "required": true, 
                  "type": "string"
                }, 
                "feature_description": {
                  "description": "Description of feature covered by this license", 
                  "required": true, 
                  "type": "string"
                }, 
                "valid_from": {
                  "description": "Date/time (seconds from epoch) at which this license becomes valid (0 if always valid)", 
                  "required": true, 
                  "type": "timestamp"
                }, 
                "valid_to": {
                  "description": "Date/time (seconds from epoch) at which this license expires (0 if always valid)", 
                  "required": true, 
                  "type": "timestamp"
                }
              }
            }, 
            "example": [
              {
                "status": "VALID", 
                "valid_from": "no_limit", 
                "valid_to": "no_limit", 
                "feature_name": "VLAB", 
                "key": "LK1-FEAT1-0000-0000-1-2644-76FE-6436", 
                "is_platform": false, 
                "feature_description": "FEAT1 License, Max Limits"
              }
            ]
          }
        }, 
        "Add licenses": {
          "path": "settings/licenses", 
          "httpmethod": "POST", 
          "description": "Add a set of licenses to the system.", 
          "request": {
            "type": "array", 
            "description": "List of license keys to add to the system", 
            "id": "licenses", 
            "items": {
              "type": "string", 
              "id": "license"
            }, 
            "example": [
              "LK1-FEAT1-0000-0000-1-2644-76FE-6436"
            ]
          }, 
          "response": {
            "type": "array", 
            "description": "List of new licenses added to the system", 
            "id": "licenses", 
            "items": {
              "id": "license", 
              "type": "object", 
              "properties": {
                "key": {
                  "description": "New license key added to the system", 
                  "required": true, 
                  "type": "string"
                }, 
                "url": {
                  "description": "Resource URI for the new license key", 
                  "required": true, 
                  "type": "string"
                }, 
                "status": {
                  "description": "Status of the new license", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "INVALID", 
                    "VALID", 
                    "VALID_SOON", 
                    "FUTURE", 
                    "EXPIRES_SOON", 
                    "EXPIRED", 
                    "SUPERSEDED", 
                    "UNKNOWN"
                  ]
                }
              }, 
              "description": "Description of a new license added to the system"
            }, 
            "example": [
              {
                "key": "LK1-FEAT1-0000-0000-1-2644-76FE-6436", 
                "status": "VALID", 
                "url": "/api/shark/4.0/settings/licenses/LK1-VLAB-0000-0000-1-2644-76FE-6436.json"
              }
            ]
          }
        }, 
        "Get license detail": {
          "path": "settings/licenses/{license_key}", 
          "httpmethod": "GET", 
          "description": "Get information on license {license_key}.", 
          "response": {
            "description": "Information for a Shark license", 
            "example": {
              "status": "VALID", 
              "valid_from": "no_limit", 
              "valid_to": "no_limit", 
              "feature_name": "VLAB", 
              "key": "LK1-VLAB-0000-0000-1-2644-76FE-6436", 
              "is_platform": false, 
              "feature_description": "VLAB License, Max Limits"
            }, 
            "type": "object", 
            "id": "license", 
            "properties": {
              "key": {
                "description": "License key for this license", 
                "required": true, 
                "type": "string"
              }, 
              "status": {
                "description": "Status of this license", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "INVALID", 
                  "VALID", 
                  "VALID_SOON", 
                  "FUTURE", 
                  "EXPIRES_SOON", 
                  "EXPIRED", 
                  "SUPERSEDED", 
                  "UNKNOWN"
                ]
              }, 
              "is_platform": {
                "description": "'true' if this is a platform license", 
                "required": true, 
                "type": "boolean"
              }, 
              "feature_name": {
                "description": "Feature covered by this license", 
                "required": true, 
                "type": "string"
              }, 
              "feature_description": {
                "description": "Description of feature covered by this license", 
                "required": true, 
                "type": "string"
              }, 
              "valid_from": {
                "description": "Date/time (seconds from epoch) at which this license becomes valid (0 if always valid)", 
                "required": true, 
                "type": "timestamp"
              }, 
              "valid_to": {
                "description": "Date/time (seconds from epoch) at which this license expires (0 if always valid)", 
                "required": true, 
                "type": "timestamp"
              }
            }
          }
        }, 
        "Delete license": {
          "path": "settings/licenses/{license_key}", 
          "httpmethod": "DELETE", 
          "description": "Delete license {license_key}."
        }, 
        "Get license status": {
          "path": "settings/licenses/status", 
          "httpmethod": "GET", 
          "description": "Get current licensing status of this Shark VE.", 
          "response": {
            "description": "License status information for this Shark VE", 
            "example": {
              "num_profilers": 2, 
              "packet_storage_size": 50, 
              "enterprise_pilot_level": 0, 
              "application_status": "LICENSED", 
              "profiler_export_capacity": 200
            }, 
            "type": "object", 
            "id": "license_status", 
            "properties": {
              "application_status": {
                "description": "License status for this Shark VE", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "LICENSED_PHYSICAL", 
                  "LICENSED", 
                  "UNLICENSED", 
                  "STATUS_CHANGED", 
                  "UNKNOWN"
                ]
              }, 
              "num_profilers": {
                "description": "Number of profilers supported for export", 
                "required": true, 
                "type": "number"
              }, 
              "profiler_export_capacity": {
                "description": "Export capacity (MBPS) for profiler export", 
                "required": true, 
                "type": "number"
              }, 
              "packet_storage_size": {
                "description": "Packet storage capacity (GB)", 
                "required": true, 
                "type": "number"
              }, 
              "enterprise_pilot_level": {
                "description": "Enterprise Pilot level", 
                "required": true, 
                "type": "number"
              }
            }
          }
        }, 
        "Generate license request key": {
          "path": "settings/licenses/request", 
          "httpmethod": "POST", 
          "description": "Request license request code.", 
          "request": {
            "description": "Submit a new license request", 
            "example": {
              "token": "SHKDSK50-67A9DA741BE548DA151FA1F3"
            }, 
            "type": "object", 
            "id": "license_token", 
            "properties": {
              "token": {
                "description": "License request token (obtained from Riverbed customer support)", 
                "required": true, 
                "type": "string"
              }
            }
          }, 
          "response": {
            "example": {
              "license_req": "shark.localdom-C1239NVM-GUGQSGVL-FLHVVEQM-CQLHS1FF-FPYU9U5L-417PUN6K-9WGPHV0A-JPKS8KG6"
            }, 
            "type": "object", 
            "id": "license_request", 
            "properties": {
              "license_req": {
                "description": "License request string (to be submitted to Riverbed customer support)", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }
      }
    }, 
    "certificates": {
      "methods": {
        "List certificates": {
          "path": "settings/certificates", 
          "httpmethod": "GET", 
          "description": "Get the list of certificates", 
          "response": {
            "description": "Certificates info,", 
            "example": {
              "web_certificate": {
                "issued_to": {
                  "locality": "San%20Francisco", 
                  "country": "US", 
                  "organization_unit": "", 
                  "state": "CA", 
                  "common_name": "WPIRAS-W7", 
                  "organization": "Riverbed%20Technology", 
                  "email": ""
                }, 
                "issued_by": {
                  "locality": "San%20Francisco", 
                  "country": "US", 
                  "organization_unit": "", 
                  "state": "CA", 
                  "common_name": "WPIRAS-W7", 
                  "organization": "Riverbed%20Technology", 
                  "email": ""
                }, 
                "validity": {
                  "issued": 1348695181, 
                  "expire": 1380231181
                }, 
                "pem": "-----BEGIN%20CERTIFICATE-----%0AMIIDyTCCArGgAwIBAgIRAMjqZzJo2/e4lqogFGp6IcswDQYJKoZIhvcNAQENBQAw%0AZDESMBAGA1UEAxMJV1BJUkFTLVc3MRwwGgYDVQQKExNSaXZlcmJlZCBUZWNobm9s%0Ab2d5MRYwFAYDVQQHEw1TYW4gRnJhbmNpc2NvMQswCQYDVQQIEwJDQTELMAkGA1UE%0ABhMCVVMwHhcNMTIwOTI2MjEzMzAxWhcNMTMwOTI2MjEzMzAxWjBkMRIwEAYDVQQD%0AEwlXUElSQVMtVzcxHDAaBgNVBAoTE1JpdmVyYmVkIFRlY2hub2xvZ3kxFjAUBgNV%0ABAcTDVNhbiBGcmFuY2lzY28xCzAJBgNVBAgTAkNBMQswCQYDVQQGEwJVUzCCASIw%0ADQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMH60nt9gWvQ+I983CxAsSdFk7KT%0AbuIEdqCzN90ULzecIg0oBtZmp+EcwpWhOJKrG66XRkTUqrCH2EY2Ppkf09TZXdsB%0A3pk6CUajNrCkCPfdXPRKa6oixqWunT2n0spt5gseZa6atjQSXO6T3pn5Hslll5bX%0AjUnT2cCWd1bM2y7YX9EwCVr3h6QlKds+YCkZpEHA7b1wvB3xnLaxlclCzxzEdwBc%0A2SeJy/ILiPwLGXsu568fae5gC6r2tAVsohw4Xb9S1bbl1AJNcTj44FCsfZ66nhVS%0AqXAPAv5d6Uf2A7bAT5/Km/inDYfUduwf4WpPN28+rxQ00DdaHI9GapkFCY0CAwEA%0AAaN2MHQwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYE%0AFBM4OhBjBV4Btfh5hNw9N3G4G10RMB8GA1UdIwQYMBaAFBM4OhBjBV4Btfh5hNw9%0AN3G4G10RMBEGCWCGSAGG+EIBAQQEAwICBDANBgkqhkiG9w0BAQ0FAAOCAQEASY+U%0AsTWf8Rhx6PoTE4y8bcWA3TItsseHAWicKwJgEQQ5xzmzr+Jfj46ToQVSUcyLvWgT%0AjUTuNRrUbFXTk23zkICRZQHWaBgA2jV2GDY1wyP8EsrCxLVW6YTWIzh3uGBa0b4H%0A+eWt0V+FkRy7uzBg5PQEZl910gt48pULu4qG4NjYuiZV5+aujsjUHK4w4CWixIDi%0ApDmixAlzUpoE3yedQ+yzXlRDjQcwanxRR68GBPkH/1MZpLs+xJoC0IomUEgr9Ilj%0A5aKOm0uacalQq4wGNODKGdApiZeMpKgQ7OzBxvCWsGu2qoduNNDDzdT2jTyciu6J%0AwXX+DIergacItTw7bA==%0A-----END%20CERTIFICATE-----%0A", 
                "key": {
                  "algorithm": "RSA", 
                  "size": 2048
                }, 
                "fingerprint": {
                  "value": "1B:FA:66:5B:B4:8C:00:4B:D4:59:02:75:30:A8:91:CB:E3:17:B2:5A", 
                  "algorithm": "SHA1"
                }
              }, 
              "trusted_profilers": [
                {
                  "id": "default_profiler", 
                  "certificate": {
                    "issued_to": {
                      "locality": "", 
                      "country": "", 
                      "organization_unit": "", 
                      "state": "", 
                      "common_name": "Mazu", 
                      "organization": "", 
                      "email": ""
                    }, 
                    "issued_by": {
                      "locality": "", 
                      "country": "", 
                      "organization_unit": "", 
                      "state": "", 
                      "common_name": "Mazu", 
                      "organization": "", 
                      "email": ""
                    }, 
                    "validity": {
                      "issued": 1159807421, 
                      "expire": 1475167421
                    }, 
                    "pem": "-----BEGIN%20CERTIFICATE-----%0AMIIBsTCCARqgAwIBAgIJAOqvgxZRcO+ZMA0GCSqGSIb3DQEBBAUAMA8xDTALBgNV%0ABAMTBE1henUwHhcNMDYxMDAyMTY0MzQxWhcNMTYwOTI5MTY0MzQxWjAPMQ0wCwYD%0AVQQDEwRNYXp1MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC0e+f4pJY2eSm1%0A8U579OKJIyxc/sdKXlLOw0zK6SoNu7XNHmNoObNhQV+3PoSbZNyqW3GuZ54EEKUw%0AG54kDzHu9cZMGEWvNO6syjZZlfBORpklQoNEsNxAkbhTr9DXfloFKiLouDl8E7jB%0AhMkbKxnpNcfcl+NEuQ8av2QQWp3jfQIDAQABoxUwEzARBglghkgBhvhCAQEEBAMC%0ABkAwDQYJKoZIhvcNAQEEBQADgYEATnoqJSym+wATLxgb2Ujdy4CY0gawUXHjidaE%0AehyejGdw6VhXpf4lP9Q8JfVERjCoroVkiXenVQe/zer7Qf2hiDB/5s02/+8uiEeq%0AMJpzsSdEYZUSgpyAcws5PDyr2GVFMI3dfPnl28hVavIkR8r05BPDxKbb8Ic6HWpT%0ACTDPH3w=%0A-----END%20CERTIFICATE-----%0A", 
                    "key": {
                      "algorithm": "RSA", 
                      "size": 1024
                    }, 
                    "fingerprint": {
                      "value": "19:41:76:AD:7C:B3:40:01:70:5F:C8:50:85:AD:8F:F2:32:BC:D0:48", 
                      "algorithm": "SHA1"
                    }
                  }
                }, 
                {
                  "id": "default_profiler_fips", 
                  "certificate": {
                    "issued_to": {
                      "locality": "", 
                      "country": "", 
                      "organization_unit": "", 
                      "state": "", 
                      "common_name": "Cascade%20MNMP%20Default%20Certificate", 
                      "organization": "Riverbed%20Technology,%20Inc.", 
                      "email": "support@riverbed.com"
                    }, 
                    "issued_by": {
                      "locality": "", 
                      "country": "", 
                      "organization_unit": "", 
                      "state": "", 
                      "common_name": "Cascade%20MNMP%20Default%20Certificate", 
                      "organization": "Riverbed%20Technology,%20Inc.", 
                      "email": "support@riverbed.com"
                    }, 
                    "validity": {
                      "issued": 1339518445, 
                      "expire": 1654878445
                    }, 
                    "pem": "-----BEGIN%20CERTIFICATE-----%0AMIID3zCCAsegAwIBAgIJALUIRiJTYgMoMA0GCSqGSIb3DQEBDQUAMHQxKTAnBgNV%0ABAMTIENhc2NhZGUgTU5NUCBEZWZhdWx0IENlcnRpZmljYXRlMSIwIAYDVQQKExlS%0AaXZlcmJlZCBUZWNobm9sb2d5LCBJbmMuMSMwIQYJKoZIhvcNAQkBFhRzdXBwb3J0%0AQHJpdmVyYmVkLmNvbTAeFw0xMjA2MTIxNjI3MjVaFw0yMjA2MTAxNjI3MjVaMHQx%0AKTAnBgNVBAMTIENhc2NhZGUgTU5NUCBEZWZhdWx0IENlcnRpZmljYXRlMSIwIAYD%0AVQQKExlSaXZlcmJlZCBUZWNobm9sb2d5LCBJbmMuMSMwIQYJKoZIhvcNAQkBFhRz%0AdXBwb3J0QHJpdmVyYmVkLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC%0AggEBALwfP4rRlcUvHNHVjxhh+/a1w/O2kIXdqUUturbsXVeu7nYj0zqXjySf4jI1%0AMSQKou6JT5jPGPxHWCrwfmwpqYaTnIZpJYOd78WIhufRmVPb5j1QXShO6NNqpXi5%0Ap9cp3/4dxZSsfocJCLZngs0HiQhFo382MTUc5Jg/lpBgFhnStX3u/SnZZKAd+ibc%0Aew+mDRZDD4A+HNOo+FvmywbRSbYAUL74MT9K+0JJgH/RTAvjOCsUuR1ej70oxRjI%0AwIuMbddH0eZ/KMdGp9ptcgRpeW2ibIRnGBZ7FMhNegsom8e3VIZejKDrKEDAgtSf%0A15v8/15bkoItGzfXsjAXt628RO0CAwEAAaN0MHIwHQYDVR0OBBYEFNHS1lF+lyYf%0AmVAXV/T0xjkgupO7MB8GA1UdIwQYMBaAFNHS1lF+lyYfmVAXV/T0xjkgupO7MBEG%0ACWCGSAGG+EIBAQQEAwIGwDAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYBBQUHAwEw%0ADQYJKoZIhvcNAQENBQADggEBAB8FM5z12oDHfmPMQp2d7OfRQAzPtuCdHEYI9AJ9%0A8sTcA0d8xTfCIEYyglXCijoE42iVx9Pgfo4PO7yCqxNa9kpNMnEISm2ZQv2E0noM%0ADmpIrT0z5BcfxcWulqx1Y2RwP+RkeU2atdpPSAboyLex6SXbKKREmjBZLvP7OBZb%0AAuNnIdVPONpsHHDbOAh5UtVdvJ1fUmme/NHcKG8aixaynTV3HoOX7YtG1hT5H+YM%0A1ImpfK5NJJuBra13e6nDKvaLmd9EVbrW8vAQwP3/jLNT3DyRvCuq6MaJl+kSRNz2%0Ai7gWkZzoLH0AKvL1Imu14gVKk6K9BLMrjeSR0fS6hMwpl0s=%0A-----END%20CERTIFICATE-----%0A", 
                    "key": {
                      "algorithm": "RSA", 
                      "size": 2048
                    }, 
                    "fingerprint": {
                      "value": "91:5C:1B:B7:FA:F6:CF:46:8B:EF:AE:DC:F2:4B:77:3E:30:6B:03:52", 
                      "algorithm": "SHA1"
                    }
                  }
                }
              ], 
              "profiler_export_certificate": {
                "issued_to": {
                  "locality": "", 
                  "country": "", 
                  "organization_unit": "", 
                  "state": "", 
                  "common_name": "Mazu", 
                  "organization": "", 
                  "email": ""
                }, 
                "issued_by": {
                  "locality": "", 
                  "country": "", 
                  "organization_unit": "", 
                  "state": "", 
                  "common_name": "Mazu", 
                  "organization": "", 
                  "email": ""
                }, 
                "validity": {
                  "issued": 1159807421, 
                  "expire": 1475167421
                }, 
                "pem": "-----BEGIN%20CERTIFICATE-----%0AMIIBsTCCARqgAwIBAgIJAOqvgxZRcO+ZMA0GCSqGSIb3DQEBBAUAMA8xDTALBgNV%0ABAMTBE1henUwHhcNMDYxMDAyMTY0MzQxWhcNMTYwOTI5MTY0MzQxWjAPMQ0wCwYD%0AVQQDEwRNYXp1MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC0e+f4pJY2eSm1%0A8U579OKJIyxc/sdKXlLOw0zK6SoNu7XNHmNoObNhQV+3PoSbZNyqW3GuZ54EEKUw%0AG54kDzHu9cZMGEWvNO6syjZZlfBORpklQoNEsNxAkbhTr9DXfloFKiLouDl8E7jB%0AhMkbKxnpNcfcl+NEuQ8av2QQWp3jfQIDAQABoxUwEzARBglghkgBhvhCAQEEBAMC%0ABkAwDQYJKoZIhvcNAQEEBQADgYEATnoqJSym+wATLxgb2Ujdy4CY0gawUXHjidaE%0AehyejGdw6VhXpf4lP9Q8JfVERjCoroVkiXenVQe/zer7Qf2hiDB/5s02/+8uiEeq%0AMJpzsSdEYZUSgpyAcws5PDyr2GVFMI3dfPnl28hVavIkR8r05BPDxKbb8Ic6HWpT%0ACTDPH3w=%0A-----END%20CERTIFICATE-----%0A", 
                "key": {
                  "algorithm": "RSA", 
                  "size": 1024
                }, 
                "fingerprint": {
                  "value": "19:41:76:AD:7C:B3:40:01:70:5F:C8:50:85:AD:8F:F2:32:BC:D0:48", 
                  "algorithm": "SHA1"
                }
              }
            }, 
            "type": "object", 
            "id": "certificates", 
            "properties": {
              "web_certificate": {
                "description": "Certificate's info", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "issued_to": {
                    "description": "Certificate's details", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "common_name": {
                        "description": "Subject's common name", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "email": {
                        "description": "Subject's email", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "organization": {
                        "description": "Subject's organization", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "organization_unit": {
                        "description": "Subject's organization unit", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "locality": {
                        "description": "Subject's locality", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "state": {
                        "description": "Subject's state (2 letters code)", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "country": {
                        "description": "Subject's state", 
                        "required": true, 
                        "type": "string"
                      }
                    }
                  }, 
                  "issued_by": {
                    "description": "Certificate's details", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "common_name": {
                        "description": "Subject's common name", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "email": {
                        "description": "Subject's email", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "organization": {
                        "description": "Subject's organization", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "organization_unit": {
                        "description": "Subject's organization unit", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "locality": {
                        "description": "Subject's locality", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "state": {
                        "description": "Subject's state (2 letters code)", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "country": {
                        "description": "Subject's state", 
                        "required": true, 
                        "type": "string"
                      }
                    }
                  }, 
                  "validity": {
                    "description": "Certificate's validity info", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "expire": {
                        "description": "Expire date timestamp in Unix time format", 
                        "required": true, 
                        "type": "timestamp"
                      }, 
                      "issued": {
                        "description": "Issueing date timestamp in Unix time format", 
                        "required": true, 
                        "type": "timestamp"
                      }
                    }
                  }, 
                  "fingerprint": {
                    "description": "Certificate's fingerprint info", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "key": {
                    "description": "Contains information about the certificate's key", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "algorithm": {
                        "required": true, 
                        "type": "string", 
                        "description": "Key algorithm", 
                        "enum": [
                          "RSA"
                        ]
                      }, 
                      "size": {
                        "description": "Key length", 
                        "required": true, 
                        "type": "number"
                      }
                    }
                  }, 
                  "pem": {
                    "description": "Contains the certificate in PEM format encode with Base64. This field contains only the public part of the certificate.", 
                    "required": true, 
                    "type": "string"
                  }
                }
              }, 
              "profiler_export_certificate": {
                "description": "Certificate's info", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "issued_to": {
                    "description": "Certificate's details", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "common_name": {
                        "description": "Subject's common name", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "email": {
                        "description": "Subject's email", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "organization": {
                        "description": "Subject's organization", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "organization_unit": {
                        "description": "Subject's organization unit", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "locality": {
                        "description": "Subject's locality", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "state": {
                        "description": "Subject's state (2 letters code)", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "country": {
                        "description": "Subject's state", 
                        "required": true, 
                        "type": "string"
                      }
                    }
                  }, 
                  "issued_by": {
                    "description": "Certificate's details", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "common_name": {
                        "description": "Subject's common name", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "email": {
                        "description": "Subject's email", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "organization": {
                        "description": "Subject's organization", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "organization_unit": {
                        "description": "Subject's organization unit", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "locality": {
                        "description": "Subject's locality", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "state": {
                        "description": "Subject's state (2 letters code)", 
                        "required": true, 
                        "type": "string"
                      }, 
                      "country": {
                        "description": "Subject's state", 
                        "required": true, 
                        "type": "string"
                      }
                    }
                  }, 
                  "validity": {
                    "description": "Certificate's validity info", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "expire": {
                        "description": "Expire date timestamp in Unix time format", 
                        "required": true, 
                        "type": "timestamp"
                      }, 
                      "issued": {
                        "description": "Issueing date timestamp in Unix time format", 
                        "required": true, 
                        "type": "timestamp"
                      }
                    }
                  }, 
                  "fingerprint": {
                    "description": "Certificate's fingerprint info", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "key": {
                    "description": "Contains information about the certificate's key", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "algorithm": {
                        "required": true, 
                        "type": "string", 
                        "description": "Key algorithm", 
                        "enum": [
                          "RSA"
                        ]
                      }, 
                      "size": {
                        "description": "Key length", 
                        "required": true, 
                        "type": "number"
                      }
                    }
                  }, 
                  "pem": {
                    "description": "Contains the certificate in PEM format encode with Base64. This field contains only the public part of the certificate.", 
                    "required": true, 
                    "type": "string"
                  }
                }
              }, 
              "trusted_profilers": {
                "description": "List of Trusted Profiler certificates", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "trusted_profiler", 
                  "type": "object", 
                  "properties": {
                    "id": {
                      "description": "ID associated with the Trusted Profiler certificate", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "certificate": {
                      "description": "Certificate's info", 
                      "required": true, 
                      "type": "object", 
                      "properties": {
                        "issued_to": {
                          "description": "Certificate's details", 
                          "required": true, 
                          "type": "object", 
                          "properties": {
                            "common_name": {
                              "description": "Subject's common name", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "email": {
                              "description": "Subject's email", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "organization": {
                              "description": "Subject's organization", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "organization_unit": {
                              "description": "Subject's organization unit", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "locality": {
                              "description": "Subject's locality", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "state": {
                              "description": "Subject's state (2 letters code)", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "country": {
                              "description": "Subject's state", 
                              "required": true, 
                              "type": "string"
                            }
                          }
                        }, 
                        "issued_by": {
                          "description": "Certificate's details", 
                          "required": true, 
                          "type": "object", 
                          "properties": {
                            "common_name": {
                              "description": "Subject's common name", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "email": {
                              "description": "Subject's email", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "organization": {
                              "description": "Subject's organization", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "organization_unit": {
                              "description": "Subject's organization unit", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "locality": {
                              "description": "Subject's locality", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "state": {
                              "description": "Subject's state (2 letters code)", 
                              "required": true, 
                              "type": "string"
                            }, 
                            "country": {
                              "description": "Subject's state", 
                              "required": true, 
                              "type": "string"
                            }
                          }
                        }, 
                        "validity": {
                          "description": "Certificate's validity info", 
                          "required": true, 
                          "type": "object", 
                          "properties": {
                            "expire": {
                              "description": "Expire date timestamp in Unix time format", 
                              "required": true, 
                              "type": "timestamp"
                            }, 
                            "issued": {
                              "description": "Issueing date timestamp in Unix time format", 
                              "required": true, 
                              "type": "timestamp"
                            }
                          }
                        }, 
                        "fingerprint": {
                          "description": "Certificate's fingerprint info", 
                          "required": true, 
                          "type": "number"
                        }, 
                        "key": {
                          "description": "Contains information about the certificate's key", 
                          "required": true, 
                          "type": "object", 
                          "properties": {
                            "algorithm": {
                              "required": true, 
                              "type": "string", 
                              "description": "Key algorithm", 
                              "enum": [
                                "RSA"
                              ]
                            }, 
                            "size": {
                              "description": "Key length", 
                              "required": true, 
                              "type": "number"
                            }
                          }
                        }, 
                        "pem": {
                          "description": "Contains the certificate in PEM format encode with Base64. This field contains only the public part of the certificate.", 
                          "required": true, 
                          "type": "string"
                        }
                      }
                    }
                  }, 
                  "description": "Contains Trusted Profilers certificates info"
                }
              }
            }
          }
        }, 
        "Update profiler export certificate": {
          "path": "settings/certificates/profiler_export", 
          "httpmethod": "PUT", 
          "description": "Upload a new profiler export certificate.", 
          "request": {
            "description": "Validity days for the new self signed certificate", 
            "example": {
              "pem": "-----BEGIN PRIVATE KEY-----\nMIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDB+tJ7fYFr0PiP\nfNwsQLEnRZOyk27iBHagszfdFC83nCINKAbWZqfhHMKVoTiSqxuul0ZE1Kqwh9hG\nNj6ZH9PU2V3bAd6ZOglGozawpAj33Vz0SmuqIsalrp09p9LKbeYLHmWumrY0Elzu\nk96Z+R7JZZeW141J09nAlndWzNsu2F/RMAla94ekJSnbPmApGaRBwO29cLwd8Zy2\nsZXJQs8cxHcAXNknicvyC4j8Cxl7LuevH2nuYAuq9rQFbKIcOF2/UtW25dQCTXE4\n+OBQrH2eup4VUqlwDwL+XelH9gO2wE+fypv4pw2H1HbsH+FqTzdvPq8UNNA3WhyP\nRmqZBQmNAgMBAAECggEBAMF5QHJ3DZzRwviqmpdwtsDqvpPARTodJYzG9BMHTMj0\na2of4CH8Jbl7jADd2qU/EM8khqukSdLkyyvMcscbXZbQbrI/vRurLRFNPQEVuvQt\nz8bAa344TVV3QdH7D11kG6w/Vz+9g7mQDyzOQ5njRXeuYnHK8FsQeAGEkeb7UCn5\nWenIzuF5pL21ZPA2Yt3JEi+ntPQdQPEPBDVHBnbkrZ0cQQhuE1t4BwUBu6Yv2kkx\nNTzleB+9tUVXk7LUHyuvuQ9jeZCHQSLNAeP1mvrGK77OVTZDphN/rLc7Tt7IWSZm\ngD0OXgot0tEoBoe1jGpWGXEjeHS0X+Br9Y1EpBrpCoECgYEA/ZLtRZTw4wpqriFs\n2t/mwfKWdnM/O4DbKzN/T1aIv3e6qAqq6DfJg1JEiI7YlFnJTepeR8NGCSnifxTG\nv3TRylOpSqfTuFT9oKWRaIrNZed8OPY2c2VlyU5vF10E/m/V0WrHjnogOSBeCf32\nh4+m4QAnXkrvU4uXw9pAgTKeZxECgYEAw9Xuw1NyB7Iuli3HM1qeg8+v601pbrLg\n9LoJdZofFDhJuUKZ5y+7YuIuWGWyCVYlIod3umb78YbBILrSUimkK5OXhiPNDihH\nVD/ggTXCPgm3FT941zaKnSUSlZDF7LndLLlYUwYnB8qba8+vCIDAHnKsyHKPEvTC\n/SkAvJcX0r0CgYEA9gxjf2kOdL/e1ChK3/byiq9BoJ4jdTGLeVf26J0nA+LBk90G\nCV5YgryJE5jIPusAkkIgSbIJe0rRJE6cq5pHFvQnCPHgVrThhcgiWDaXJ5J+zybZ\nnw98vOEGmrz/44PRDet2x6FpMwVdOoTbep7BZwInMS+1GnQRR1G31aWwXoECgYEA\nmtsdTYk7n0hPvGOApGQg+pwNQOTa3TVH210Mw9jWgJet/Hfk2UIOTDgMa8wmx2k+\nPhqfG1/6E9f5+ZahX2UcM3UnGWRP7sT8+mr0bVgEPChUhNHHDW9MlszM8EYlrHag\npY/+ftBbpraYxdzZTMD6qlkFtg+YgWXYlnWI5pgXt4UCgYEAppqACeoUd+UI3Azs\n2B/KWndzdBMgMNFZsZvcMC1sfZjsCrbcOZDkU+cYUDxfM2Wp5ihk7CVH8XUx+ue+\nm92OX497PvXihxdSNrlsi3GJuhq5uaYpZWPn3269zC2wDlAwUX78X3NYMsoxg8XO\nFihyaSY3EzACFI96nbDOIeS5csg=\n-----END PRIVATE KEY-----\n-----BEGIN CERTIFICATE-----\nMIIDyTCCArGgAwIBAgIRAMjqZzJo2/e4lqogFGp6IcswDQYJKoZIhvcNAQENBQAw\nZDESMBAGA1UEAxMJV1BJUkFTLVc3MRwwGgYDVQQKExNSaXZlcmJlZCBUZWNobm9s\nb2d5MRYwFAYDVQQHEw1TYW4gRnJhbmNpc2NvMQswCQYDVQQIEwJDQTELMAkGA1UE\nBhMCVVMwHhcNMTIwOTI2MjEzMzAxWhcNMTMwOTI2MjEzMzAxWjBkMRIwEAYDVQQD\nEwlXUElSQVMtVzcxHDAaBgNVBAoTE1JpdmVyYmVkIFRlY2hub2xvZ3kxFjAUBgNV\nBAcTDVNhbiBGcmFuY2lzY28xCzAJBgNVBAgTAkNBMQswCQYDVQQGEwJVUzCCASIw\nDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMH60nt9gWvQ+I983CxAsSdFk7KT\nbuIEdqCzN90ULzecIg0oBtZmp+EcwpWhOJKrG66XRkTUqrCH2EY2Ppkf09TZXdsB\n3pk6CUajNrCkCPfdXPRKa6oixqWunT2n0spt5gseZa6atjQSXO6T3pn5Hslll5bX\njUnT2cCWd1bM2y7YX9EwCVr3h6QlKds+YCkZpEHA7b1wvB3xnLaxlclCzxzEdwBc\n2SeJy/ILiPwLGXsu568fae5gC6r2tAVsohw4Xb9S1bbl1AJNcTj44FCsfZ66nhVS\nqXAPAv5d6Uf2A7bAT5/Km/inDYfUduwf4WpPN28+rxQ00DdaHI9GapkFCY0CAwEA\nAaN2MHQwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYE\nFBM4OhBjBV4Btfh5hNw9N3G4G10RMB8GA1UdIwQYMBaAFBM4OhBjBV4Btfh5hNw9\nN3G4G10RMBEGCWCGSAGG+EIBAQQEAwICBDANBgkqhkiG9w0BAQ0FAAOCAQEASY+U\nsTWf8Rhx6PoTE4y8bcWA3TItsseHAWicKwJgEQQ5xzmzr+Jfj46ToQVSUcyLvWgT\njUTuNRrUbFXTk23zkICRZQHWaBgA2jV2GDY1wyP8EsrCxLVW6YTWIzh3uGBa0b4H\n+eWt0V+FkRy7uzBg5PQEZl910gt48pULu4qG4NjYuiZV5+aujsjUHK4w4CWixIDi\npDmixAlzUpoE3yedQ+yzXlRDjQcwanxRR68GBPkH/1MZpLs+xJoC0IomUEgr9Ilj\n5aKOm0uacalQq4wGNODKGdApiZeMpKgQ7OzBxvCWsGu2qoduNNDDzdT2jTyciu6J\nwXX+DIergacItTw7bA==\n-----END CERTIFICATE-----"
            }, 
            "type": "object", 
            "id": "certificate", 
            "properties": {
              "pem": {
                "description": "Contains the certificate in PEM format encode with Base64. This field contains both the public and private part of the new certificate.", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "Update web UI certificate": {
          "path": "settings/certificates/web", 
          "httpmethod": "PUT", 
          "description": "Upload a new web UI certificate.", 
          "request": {
            "description": "Validity days for the new self signed certificate", 
            "example": {
              "pem": "-----BEGIN PRIVATE KEY-----\nMIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDB+tJ7fYFr0PiP\nfNwsQLEnRZOyk27iBHagszfdFC83nCINKAbWZqfhHMKVoTiSqxuul0ZE1Kqwh9hG\nNj6ZH9PU2V3bAd6ZOglGozawpAj33Vz0SmuqIsalrp09p9LKbeYLHmWumrY0Elzu\nk96Z+R7JZZeW141J09nAlndWzNsu2F/RMAla94ekJSnbPmApGaRBwO29cLwd8Zy2\nsZXJQs8cxHcAXNknicvyC4j8Cxl7LuevH2nuYAuq9rQFbKIcOF2/UtW25dQCTXE4\n+OBQrH2eup4VUqlwDwL+XelH9gO2wE+fypv4pw2H1HbsH+FqTzdvPq8UNNA3WhyP\nRmqZBQmNAgMBAAECggEBAMF5QHJ3DZzRwviqmpdwtsDqvpPARTodJYzG9BMHTMj0\na2of4CH8Jbl7jADd2qU/EM8khqukSdLkyyvMcscbXZbQbrI/vRurLRFNPQEVuvQt\nz8bAa344TVV3QdH7D11kG6w/Vz+9g7mQDyzOQ5njRXeuYnHK8FsQeAGEkeb7UCn5\nWenIzuF5pL21ZPA2Yt3JEi+ntPQdQPEPBDVHBnbkrZ0cQQhuE1t4BwUBu6Yv2kkx\nNTzleB+9tUVXk7LUHyuvuQ9jeZCHQSLNAeP1mvrGK77OVTZDphN/rLc7Tt7IWSZm\ngD0OXgot0tEoBoe1jGpWGXEjeHS0X+Br9Y1EpBrpCoECgYEA/ZLtRZTw4wpqriFs\n2t/mwfKWdnM/O4DbKzN/T1aIv3e6qAqq6DfJg1JEiI7YlFnJTepeR8NGCSnifxTG\nv3TRylOpSqfTuFT9oKWRaIrNZed8OPY2c2VlyU5vF10E/m/V0WrHjnogOSBeCf32\nh4+m4QAnXkrvU4uXw9pAgTKeZxECgYEAw9Xuw1NyB7Iuli3HM1qeg8+v601pbrLg\n9LoJdZofFDhJuUKZ5y+7YuIuWGWyCVYlIod3umb78YbBILrSUimkK5OXhiPNDihH\nVD/ggTXCPgm3FT941zaKnSUSlZDF7LndLLlYUwYnB8qba8+vCIDAHnKsyHKPEvTC\n/SkAvJcX0r0CgYEA9gxjf2kOdL/e1ChK3/byiq9BoJ4jdTGLeVf26J0nA+LBk90G\nCV5YgryJE5jIPusAkkIgSbIJe0rRJE6cq5pHFvQnCPHgVrThhcgiWDaXJ5J+zybZ\nnw98vOEGmrz/44PRDet2x6FpMwVdOoTbep7BZwInMS+1GnQRR1G31aWwXoECgYEA\nmtsdTYk7n0hPvGOApGQg+pwNQOTa3TVH210Mw9jWgJet/Hfk2UIOTDgMa8wmx2k+\nPhqfG1/6E9f5+ZahX2UcM3UnGWRP7sT8+mr0bVgEPChUhNHHDW9MlszM8EYlrHag\npY/+ftBbpraYxdzZTMD6qlkFtg+YgWXYlnWI5pgXt4UCgYEAppqACeoUd+UI3Azs\n2B/KWndzdBMgMNFZsZvcMC1sfZjsCrbcOZDkU+cYUDxfM2Wp5ihk7CVH8XUx+ue+\nm92OX497PvXihxdSNrlsi3GJuhq5uaYpZWPn3269zC2wDlAwUX78X3NYMsoxg8XO\nFihyaSY3EzACFI96nbDOIeS5csg=\n-----END PRIVATE KEY-----\n-----BEGIN CERTIFICATE-----\nMIIDyTCCArGgAwIBAgIRAMjqZzJo2/e4lqogFGp6IcswDQYJKoZIhvcNAQENBQAw\nZDESMBAGA1UEAxMJV1BJUkFTLVc3MRwwGgYDVQQKExNSaXZlcmJlZCBUZWNobm9s\nb2d5MRYwFAYDVQQHEw1TYW4gRnJhbmNpc2NvMQswCQYDVQQIEwJDQTELMAkGA1UE\nBhMCVVMwHhcNMTIwOTI2MjEzMzAxWhcNMTMwOTI2MjEzMzAxWjBkMRIwEAYDVQQD\nEwlXUElSQVMtVzcxHDAaBgNVBAoTE1JpdmVyYmVkIFRlY2hub2xvZ3kxFjAUBgNV\nBAcTDVNhbiBGcmFuY2lzY28xCzAJBgNVBAgTAkNBMQswCQYDVQQGEwJVUzCCASIw\nDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMH60nt9gWvQ+I983CxAsSdFk7KT\nbuIEdqCzN90ULzecIg0oBtZmp+EcwpWhOJKrG66XRkTUqrCH2EY2Ppkf09TZXdsB\n3pk6CUajNrCkCPfdXPRKa6oixqWunT2n0spt5gseZa6atjQSXO6T3pn5Hslll5bX\njUnT2cCWd1bM2y7YX9EwCVr3h6QlKds+YCkZpEHA7b1wvB3xnLaxlclCzxzEdwBc\n2SeJy/ILiPwLGXsu568fae5gC6r2tAVsohw4Xb9S1bbl1AJNcTj44FCsfZ66nhVS\nqXAPAv5d6Uf2A7bAT5/Km/inDYfUduwf4WpPN28+rxQ00DdaHI9GapkFCY0CAwEA\nAaN2MHQwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYE\nFBM4OhBjBV4Btfh5hNw9N3G4G10RMB8GA1UdIwQYMBaAFBM4OhBjBV4Btfh5hNw9\nN3G4G10RMBEGCWCGSAGG+EIBAQQEAwICBDANBgkqhkiG9w0BAQ0FAAOCAQEASY+U\nsTWf8Rhx6PoTE4y8bcWA3TItsseHAWicKwJgEQQ5xzmzr+Jfj46ToQVSUcyLvWgT\njUTuNRrUbFXTk23zkICRZQHWaBgA2jV2GDY1wyP8EsrCxLVW6YTWIzh3uGBa0b4H\n+eWt0V+FkRy7uzBg5PQEZl910gt48pULu4qG4NjYuiZV5+aujsjUHK4w4CWixIDi\npDmixAlzUpoE3yedQ+yzXlRDjQcwanxRR68GBPkH/1MZpLs+xJoC0IomUEgr9Ilj\n5aKOm0uacalQq4wGNODKGdApiZeMpKgQ7OzBxvCWsGu2qoduNNDDzdT2jTyciu6J\nwXX+DIergacItTw7bA==\n-----END CERTIFICATE-----"
            }, 
            "type": "object", 
            "id": "certificate", 
            "properties": {
              "pem": {
                "description": "Contains the certificate in PEM format encode with Base64. This field contains both the public and private part of the new certificate.", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "Generate profiler export certificate": {
          "path": "settings/certificates/profiler_export/generate", 
          "httpmethod": "POST", 
          "description": "Request generation of new self-signed certificate and private key for profiler export", 
          "request": {
            "description": "Contains info used to generate a new self signed certificate (only for Web Server and Profiler Export certificates)", 
            "example": {
              "issued_to": {
                "email": "admin%40riverbed.com", 
                "organization": "Riverbed%20Technology", 
                "organization_unit": "CascadeUnit", 
                "locality": "San%20Francisco", 
                "state": "CA", 
                "country": "US"
              }, 
              "validity": {
                "days": 365
              }
            }, 
            "type": "object", 
            "id": "certificate_info", 
            "properties": {
              "issued_to": {
                "description": "Contains data to generate a new self-signed certificate", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "email": {
                    "description": "Subject's email", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "organization": {
                    "description": "Subject's organization", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "organization_unit": {
                    "description": "Subject's organization unit", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "locality": {
                    "description": "Subject's locality", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "state": {
                    "description": "Subject's state (2 letters code)", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "country": {
                    "description": "Subject's country", 
                    "required": true, 
                    "type": "string"
                  }
                }
              }, 
              "validity": {
                "description": "Validity days for a new self signed certificate", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "days": {
                    "description": "Validity days for a new self signed certificate", 
                    "required": true, 
                    "type": "number"
                  }
                }
              }
            }
          }
        }, 
        "Generate web UI certificate": {
          "path": "settings/certificates/web/generate", 
          "httpmethod": "POST", 
          "description": "Request generation of new self-signed certificate and private key for the web UI", 
          "request": {
            "description": "Contains info used to generate a new self signed certificate (only for Web Server and Profiler Export certificates)", 
            "example": {
              "issued_to": {
                "email": "admin%40riverbed.com", 
                "organization": "Riverbed%20Technology", 
                "organization_unit": "CascadeUnit", 
                "locality": "San%20Francisco", 
                "state": "CA", 
                "country": "US"
              }, 
              "validity": {
                "days": 365
              }
            }, 
            "type": "object", 
            "id": "certificate_info", 
            "properties": {
              "issued_to": {
                "description": "Contains data to generate a new self-signed certificate", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "email": {
                    "description": "Subject's email", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "organization": {
                    "description": "Subject's organization", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "organization_unit": {
                    "description": "Subject's organization unit", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "locality": {
                    "description": "Subject's locality", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "state": {
                    "description": "Subject's state (2 letters code)", 
                    "required": true, 
                    "type": "string"
                  }, 
                  "country": {
                    "description": "Subject's country", 
                    "required": true, 
                    "type": "string"
                  }
                }
              }, 
              "validity": {
                "description": "Validity days for a new self signed certificate", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "days": {
                    "description": "Validity days for a new self signed certificate", 
                    "required": true, 
                    "type": "number"
                  }
                }
              }
            }
          }
        }, 
        "Copy web UI certificate for profiler export": {
          "path": "settings/certificates/profiler_export/copy_web", 
          "httpmethod": "POST", 
          "description": "Request that web UI certificate be reused for profiler export."
        }, 
        "Copy profiler export certificate for web UI": {
          "path": "settings/certificates/web/copy_profiler_export", 
          "httpmethod": "POST", 
          "description": "Request that profiler export certificate be reused for the web UI."
        }, 
        "Upload trusted profiler certificate": {
          "path": "settings/certificates/trusted_profilers", 
          "httpmethod": "POST", 
          "description": "Upload a new trusted profiler certificate", 
          "request": {
            "description": "Used to upload a new trusted profiler certificate", 
            "example": {
              "pem": "-----BEGIN CERTIFICATE-----\nMIIEPTCCAyWgAwIBAgIRAO1ZLvfw3lwCqFen5rQf7ecwDQYJKoZIhvcNAQENBQAw\ngZ0xITAfBgkqhkiG9w0BCQEWEmFkbWluQHJpdmVyYmVkLmNvbTESMBAGA1UEAxMJ\nV1BJUkFTLVc3MRwwGgYDVQQKExNSaXZlcmJlZCBUZWNobm9sb2d5MRQwEgYDVQQL\nEwtDYXNjYWRlVW5pdDEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzELMAkGA1UECBMC\nQ0ExCzAJBgNVBAYTAlVTMB4XDTEyMDkyNjIyNTkzNFoXDTEzMDkyNjIyNTkzNFow\ngZ0xITAfBgkqhkiG9w0BCQEWEmFkbWluQHJpdmVyYmVkLmNvbTESMBAGA1UEAxMJ\nV1BJUkFTLVc3MRwwGgYDVQQKExNSaXZlcmJlZCBUZWNobm9sb2d5MRQwEgYDVQQL\nEwtDYXNjYWRlVW5pdDEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzELMAkGA1UECBMC\nQ0ExCzAJBgNVBAYTAlVTMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nvYsAKrsA1ohMakG+9azPS9cJrgRB8kKaGBJrGLm6LMSCow82vAZH2MrMDsoAHwaj\n8mV+79PM1Rl1tjZmbhMD4SV9HhJQjkwrM6r2WV49MHdMkdeXTWEbLZ8OyBPUPWtn\n8+zy5IWLB8ri/D7RjVe7LFOM389JmOofb9wCHzCT0yKbJO39OHI9AI3LQrnLo7g4\nMXpTQklL18EjVay7RickcnKDDJhIOziXBJCmfr5jrCz76oT07/IbJ3NI5RqB6JSR\nZcPMyZFnzuEwxWfsmatzCuiD8kQBqz+6It0RKYlalylVhFS+2ViA8O5Qs1p8vXb5\n8yohwQfV19n02+DRRV3dRwIDAQABo3YwdDAPBgNVHRMBAf8EBTADAQH/MA4GA1Ud\nDwEB/wQEAwIBBjAdBgNVHQ4EFgQUVhms7KFEi/wH1cdj56L5U+XTAeowHwYDVR0j\nBBgwFoAUVhms7KFEi/wH1cdj56L5U+XTAeowEQYJYIZIAYb4QgEBBAQDAgIEMA0G\nCSqGSIb3DQEBDQUAA4IBAQC0C70AFxt+cjAM8I1JbJJJ5RGoSTPfOmvQznr4nW7g\nG/dRUUO3eGpd05YmJlA0TTCunbxdnUTlv7phXgJ5+IeBnhIR1eC7lxgHPwshr4oO\nE4UfyL5iwhs+fCPHhPllo9VVOCcSR4CqjY4i1++14BVKZE0hWX3oZhaG/g1oXDv5\nGdLvOspRYxpgONsJvLeV4OZk1r1oZfHCsOnilIq1KsRzpOt2/M2SNs2oKS89em8D\n84GDI/0fpVbmpfdzj+vyB0UaLXBtKgeno7HzoUY/Vfwvi02n6J0OlHNNJGI+imE5\nun5/WbK6z4fWBuipjlIje3D5o+XSxPuh7wrfQfChMZEK\n-----END CERTIFICATE-----", 
              "id": "riverbed_certificate"
            }, 
            "type": "object", 
            "id": "trusted_profiler", 
            "properties": {
              "id": {
                "description": "ID associated with the new Trusted Profiler certificate", 
                "required": true, 
                "type": "string"
              }, 
              "pem": {
                "description": "Contains the certificate in PEM format encode with Base64. This field contains only the public part of the certificate.", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "Delete trusted profiler certificate": {
          "path": "settings/certificates/trusted_profilers/{certificate_id}", 
          "httpmethod": "DELETE", 
          "description": "Delete trusted profiler certificate {certificate_id}."
        }
      }
    }, 
    "users / groups": {
      "methods": {
        "List groups": {
          "httpmethod": "GET", 
          "path": "auth/groups", 
          "description": "Get the list of local user groups defined for this Shark", 
          "parameters": {}, 
          "response": {
            "type": "array", 
            "description": "List of groups", 
            "id": "groups", 
            "items": {
              "id": "group", 
              "$ref": "group"
            }, 
            "example": [
              {
                "name": "Administrators", 
                "capabilities": [
                  "CAPABILITY_ADMINISTRATOR"
                ], 
                "description": "Administrators"
              }, 
              {
                "name": "NormalUsers", 
                "capabilities": [
                  "CAPABILITY_APPLY_VIEWS_ON_FILES", 
                  "CAPABILITY_APPLY_VIEWS_ON_INTERFACES", 
                  "CAPABILITY_SHARE_VIEWS", 
                  "CAPABILITY_CREATE_FILES", 
                  "CAPABILITY_IMPORT_FILES", 
                  "CAPABILITY_EXPORT_FILES", 
                  "CAPABILITY_SCHEDULE_WATCHES", 
                  "CAPABILITY_ACCESS_PROBE_FILES"
                ], 
                "description": "Normal unprivileged users"
              }
            ]
          }
        }, 
        "Create group": {
          "httpmethod": "POST", 
          "path": "auth/groups", 
          "description": "Create a new local user group", 
          "request": {
            "$ref": "group"
          }
        }, 
        "Get group detail": {
          "httpmethod": "GET", 
          "path": "auth/groups/{group_id}", 
          "description": "Retrieve a user group", 
          "parameters": {
            "group_id": {
              "type": "string", 
              "description": "Group identifier", 
              "required": true
            }
          }, 
          "response": {
            "$ref": "group"
          }
        }, 
        "Delete group": {
          "httpmethod": "DELETE", 
          "path": "auth/groups/{group_id}", 
          "description": "Delete an existing user group", 
          "parameters": {
            "group_id": {
              "type": "string", 
              "description": "Group identifier", 
              "required": true
            }
          }
        }, 
        "List users": {
          "path": "auth/users", 
          "httpmethod": "GET", 
          "description": "Get the list of local users", 
          "response": {
            "type": "array", 
            "description": "List of users", 
            "id": "users", 
            "items": {
              "id": "user", 
              "$ref": "user"
            }, 
            "example": [
              {
                "is_locked": false, 
                "can_be_locked": false, 
                "is_admin": true, 
                "name": "admin", 
                "groups": [
                  "Administrators"
                ]
              }, 
              {
                "is_locked": false, 
                "can_be_locked": false, 
                "is_admin": false, 
                "name": "normaluser", 
                "groups": [
                  "NormalUsers"
                ]
              }
            ]
          }
        }, 
        "Create user": {
          "path": "auth/users", 
          "httpmethod": "POST", 
          "description": "Create new local user", 
          "request": {
            "description": "Information to create a new user", 
            "example": {
              "name": "test", 
              "password": "testing", 
              "can_be_locked": true, 
              "groups": [
                "NormalUsers", 
                "Viewers"
              ]
            }, 
            "type": "object", 
            "id": "user", 
            "properties": {
              "name": {
                "description": "User name", 
                "required": true, 
                "type": "string"
              }, 
              "can_be_locked": {
                "description": "'true' if user can get locked, 'false' otherwise", 
                "required": true, 
                "type": "boolean"
              }, 
              "password": {
                "description": "User password", 
                "required": true, 
                "type": "string"
              }, 
              "groups": {
                "description": "List of groups of which the user is a member", 
                "required": true, 
                "type": "array", 
                "items": {
                  "type": "string", 
                  "id": "group"
                }
              }
            }
          }
        }, 
        "Get users detail": {
          "path": "auth/users/{user_id}", 
          "httpmethod": "GET", 
          "description": "Get info on local user", 
          "parameters": {
            "user_id": {
              "type": "string", 
              "description": "User identifier", 
              "required": true
            }
          }, 
          "response": {
            "$ref": "user"
          }
        }, 
        "Update user password": {
          "path": "auth/users/{user_id}", 
          "httpmethod": "PUT", 
          "description": "Update password for local user", 
          "parameters": {
            "user_id": {
              "type": "string", 
              "description": "User identifier", 
              "required": true
            }
          }, 
          "request": {
            "description": "Updates user password", 
            "example": {
              "new_password": "new-password", 
              "existing_password": "old-password"
            }, 
            "type": "object", 
            "id": "password", 
            "properties": {
              "new_password": {
                "description": "New password", 
                "required": true, 
                "type": "string"
              }, 
              "existing_password": {
                "description": "Existing password", 
                "required": false, 
                "type": "string"
              }
            }
          }
        }, 
        "Delete user": {
          "path": "auth/users/{user_id}", 
          "httpmethod": "DELETE", 
          "description": "Delete local user"
        }, 
        "Update user locked state": {
          "path": "auth/users/{user_id}/locked", 
          "httpmethod": "PUT", 
          "description": "Update locked status of user [USER_ID]", 
          "parameters": {
            "user_id": {
              "type": "string", 
              "description": "User identifier", 
              "required": true
            }
          }, 
          "request": {
            "description": "Unlock a locked user", 
            "example": {
              "value": false
            }, 
            "type": "object", 
            "id": "locked", 
            "properties": {
              "value": {
                "description": "'false' to unlock a locked user. 'true' value not supported as you cannot lock an unlocked user.", 
                "required": true, 
                "type": "boolean"
              }
            }
          }
        }
      }
    }, 
    "ping": {
      "methods": {
        "Ping (GET)": {
          "path": "ping", 
          "httpmethod": "GET", 
          "description": "Generic ping response.", 
          "response": {
            "type": "object", 
            "id": "ping", 
            "properties": {}
          }
        }, 
        "Ping (POST)": {
          "path": "ping", 
          "httpmethod": "POST", 
          "description": "Test availability of POST method."
        }, 
        "Ping (PUT)": {
          "path": "ping", 
          "httpmethod": "PUT", 
          "description": "Test availability of PUT method."
        }, 
        "Ping (DELETE)": {
          "path": "ping", 
          "httpmethod": "DELETE", 
          "description": "Test availability of DELETE method."
        }
      }
    }, 
    "info": {
      "methods": {
        "List supported tap types": {
          "path": "info/tap_types", 
          "httpmethod": "GET", 
          "description": "Get the list of supported tap types", 
          "response": {
            "type": "array", 
            "description": "List of supported tap types", 
            "id": "tap_types", 
            "items": {
              "id": "tap_type", 
              "type": "object", 
              "properties": {
                "type": {
                  "description": "The type code for the tap", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "NONE", 
                    "CPACKET", 
                    "GIGAMON_HEADER", 
                    "GIGAMON_TRAILER", 
                    "GIGAMON_TRAILER_X12", 
                    "VSS", 
                    "VSS_PORT_ID", 
                    "ANUE", 
                    "ARISTA", 
                    "UNKNOWN"
                  ]
                }, 
                "type_pretty": {
                  "description": "User-friendly name for the specific type of tap", 
                  "required": true, 
                  "type": "string"
                }, 
                "description": {
                  "description": "Description of the specific type of tap", 
                  "required": true, 
                  "type": "string"
                }
              }, 
              "description": "Information describing a supported tap type"
            }, 
            "example": [
              {
                "type_pretty": "Shark Internal", 
                "type": "NONE", 
                "description": "Timestamps applied by the shark itself based on the system clock. "
              }, 
              {
                "type_pretty": "cPacket", 
                "type": "CPACKET", 
                "description": "Timestamps applied by a cPacket cVU or cTap."
              }, 
              {
                "type_pretty": "Gigamon (Header)", 
                "type": "GIGAMON_HEADER", 
                "description": "Timestamps applied by a Gigamon SMT-436 with the SMT-TSP timestamp feature enabled, configured to store timestamps in the packet header."
              }, 
              {
                "type_pretty": "Gigamon (Trailer)", 
                "type": "GIGAMON_TRAILER", 
                "description": "Timestamps applied by a Gigamon SMT-436 with the SMT-TSP timestamp feature enabled, configured to store timestamps in the packet trailer."
              }, 
              {
                "type_pretty": "Gigamon (Trailer X12-TS)", 
                "type": "GIGAMON_TRAILER_X12", 
                "description": "Timestamps applied by a Gigamon GigaPORT-X12-TS, configured to store timestamps in the packet trailer."
              }, 
              {
                "type_pretty": "VSS (Timestamp only)", 
                "type": "VSS", 
                "description": "Timestamps applied by a VSS Monitoring Distributed Traffic Capture System (DTCS), configured to store only timestamps in the packet."
              }
            ]
          }
        }, 
        "Get job defaults": {
          "path": "info/job_defaults", 
          "httpmethod": "GET", 
          "description": "Get capture job default settings", 
          "response": {
            "description": "Default values for a new capture job", 
            "example": {
              "index_size_limit": 128043712, 
              "index_size_pct": 0.427825, 
              "retention_size_pct": 30.0, 
              "retention_size_limit": 12804371251, 
              "snap_length": 65535, 
              "job_name": "New Job 1"
            }, 
            "type": "object", 
            "id": "job_defaults", 
            "properties": {
              "snap_length": {
                "description": "Default snap length", 
                "required": true, 
                "type": "number"
              }, 
              "retention_size_limit": {
                "description": "Default size limit (bytes) on retained capture job", 
                "required": true, 
                "type": "number"
              }, 
              "retention_size_pct": {
                "description": "Default max percent of disk for retained capture job", 
                "required": true, 
                "type": "number"
              }, 
              "index_size_limit": {
                "description": "Default size limit (bytes) of index for new capture job", 
                "required": true, 
                "type": "number"
              }, 
              "index_size_pct": {
                "description": "Default max percent of disk for index", 
                "required": true, 
                "type": "number"
              }, 
              "job_name": {
                "description": "Default name of new job", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "List supported data types": {
          "path": "info/types", 
          "httpmethod": "GET", 
          "description": "Get the list of supported Shark data types in views", 
          "response": {
            "type": "array", 
            "description": "List of supported Shark types", 
            "id": "types", 
            "items": {
              "id": "type", 
              "type": "object", 
              "properties": {
                "name": {
                  "description": "Shark type ID", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "NONE", 
                    "PROTOCOL", 
                    "BOOLEAN", 
                    "UINT8", 
                    "UINT16", 
                    "UINT24", 
                    "UINT32", 
                    "UINT64", 
                    "INT8", 
                    "INT16", 
                    "INT24", 
                    "INT32", 
                    "INT64", 
                    "FLOAT", 
                    "DOUBLE", 
                    "ABSOLUTE_TIME", 
                    "RELATIVE_TIME", 
                    "STRING", 
                    "STRINGZ", 
                    "SHORT_STRING", 
                    "UINT_STRING", 
                    "ETHER", 
                    "BYTES", 
                    "UINT_BYTES", 
                    "IPv4", 
                    "IPv6", 
                    "UDP_PORT", 
                    "TCP_PORT", 
                    "IPXNET", 
                    "FRAMENUM", 
                    "PCRE", 
                    "GUID", 
                    "OID", 
                    "NUM_TYPES", 
                    "INDEX", 
                    "EUI64"
                  ]
                }, 
                "calculations": {
                  "description": "List of Shark calculations", 
                  "required": true, 
                  "type": "array", 
                  "id": "calculations", 
                  "items": {
                    "id": "calculation", 
                    "type": "string", 
                    "description": "Calculation type", 
                    "enum": [
                      "NONE", 
                      "SUM", 
                      "MAX", 
                      "MIN", 
                      "AVG", 
                      "TIME_AVG"
                    ]
                  }
                }
              }, 
              "description": "Information for one Shark type"
            }, 
            "example": [
              {
                "name": "NONE", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "PROTOCOL", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "BOOLEAN", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "UINT8", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "UINT16", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "UINT24", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "UINT32", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "UINT64", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "INT8", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "INT16", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "INT24", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "INT32", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "INT64", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "FLOAT", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "DOUBLE", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "ABSOLUTE_TIME", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "RELATIVE_TIME", 
                "calculations": [
                  "NONE", 
                  "SUM", 
                  "MAX", 
                  "MIN", 
                  "AVG", 
                  "TIME_AVG"
                ]
              }, 
              {
                "name": "STRING", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "STRINGZ", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "SHORT_STRING", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "UINT_STRING", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "ETHER", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "BYTES", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "UINT_BYTES", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "IPv4", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "IPv6", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "UDP_PORT", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "TCP_PORT", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "IPXNET", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "FRAMENUM", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "PCRE", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "GUID", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "OID", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "NUM_TYPES", 
                "calculations": [
                  "NONE"
                ]
              }, 
              {
                "name": "INDEX", 
                "calculations": [
                  "NONE", 
                  "MAX", 
                  "MIN"
                ]
              }, 
              {
                "name": "EUI64", 
                "calculations": [
                  "NONE"
                ]
              }
            ]
          }
        }, 
        "List supported extractor fields": {
          "path": "info/fields", 
          "httpmethod": "GET", 
          "description": "Get the list of supported Shark view extractor fields", 
          "response": {
            "type": "array", 
            "id": "fields", 
            "items": {
              "id": "field", 
              "type": "object", 
              "properties": {
                "name": {
                  "description": "User-friendly name of the field", 
                  "required": true, 
                  "type": "string"
                }, 
                "type": {
                  "description": "Type of the field", 
                  "required": true, 
                  "type": "string", 
                  "enum": [
                    "NONE", 
                    "PROTOCOL", 
                    "BOOLEAN", 
                    "UINT8", 
                    "UINT16", 
                    "UINT24", 
                    "UINT32", 
                    "UINT64", 
                    "INT8", 
                    "INT16", 
                    "INT24", 
                    "INT32", 
                    "INT64", 
                    "FLOAT", 
                    "DOUBLE", 
                    "ABSOLUTE_TIME", 
                    "RELATIVE_TIME", 
                    "STRING", 
                    "STRINGZ", 
                    "SHORT_STRING", 
                    "UINT_STRING", 
                    "ETHER", 
                    "BYTES", 
                    "UINT_BYTES", 
                    "IPv4", 
                    "IPv6", 
                    "UDP_PORT", 
                    "TCP_PORT", 
                    "IPXNET", 
                    "FRAMENUM", 
                    "PCRE", 
                    "GUID", 
                    "OID", 
                    "NUM_TYPES", 
                    "INDEX", 
                    "EUI64"
                  ]
                }, 
                "id": {
                  "description": "Identifier of the field", 
                  "required": true, 
                  "type": "string"
                }, 
                "group": {
                  "description": "Group in which the field belongs", 
                  "required": true, 
                  "type": "string"
                }, 
                "display_type": {
                  "description": "Display information for a numeric field", 
                  "required": false, 
                  "type": "string", 
                  "enum": [
                    "NONE", 
                    "DEC", 
                    "HEX", 
                    "OCT", 
                    "DEC_HEX", 
                    "HEX_DEC", 
                    "PERC"
                  ]
                }, 
                "description": {
                  "description": "Description of this field", 
                  "required": false, 
                  "type": "string"
                }, 
                "multi_segment": {
                  "description": "Whether or not the field is used for multi-segment sources", 
                  "required": false, 
                  "type": "boolean"
                }, 
                "index_calculations": {
                  "description": "List of calculations on this field that are supported by the index", 
                  "required": false, 
                  "type": "array", 
                  "items": {
                    "id": "index_calculation", 
                    "type": "string", 
                    "description": "Calculation type", 
                    "enum": [
                      "NONE", 
                      "SUM", 
                      "MAX", 
                      "MIN", 
                      "AVG", 
                      "TIME_AVG"
                    ]
                  }
                }, 
                "dimension": {
                  "description": "Whether or not the field is a dimension", 
                  "required": false, 
                  "type": "boolean"
                }, 
                "index": {
                  "description": "Whether or not this field is supported by the index", 
                  "required": false, 
                  "type": "boolean"
                }
              }
            }, 
            "example": [
              {
                "group": "arp", 
                "description": "Byte count of ARP packets", 
                "display_type": "DEC", 
                "type": "UINT64", 
                "id": "arp.bytes", 
                "name": "ARP Bytes"
              }, 
              {
                "group": "cifs", 
                "description": "Indication of whether the current packet contains CIFS traffic", 
                "display_type": "DEC", 
                "type": "BOOLEAN", 
                "id": "cifs.is_cifs", 
                "name": "CIFS"
              }
            ]
          }
        }, 
        "List supported file extensions": {
          "path": "info/file_extensions", 
          "httpmethod": "GET", 
          "description": "Get the list of Shark file extensions", 
          "response": {
            "type": "array", 
            "id": "file_extensions", 
            "items": {
              "id": "file_extension", 
              "type": "object", 
              "properties": {
                "description": {
                  "description": "Description of this file extension", 
                  "required": true, 
                  "type": "string"
                }, 
                "value": {
                  "description": "File extension value", 
                  "required": true, 
                  "type": "string"
                }
              }
            }, 
            "example": [
              {
                "description": "Endace ERF trace file", 
                "value": "erf"
              }, 
              {
                "description": "Pcap trace file", 
                "value": "cap"
              }, 
              {
                "description": "Pcap trace file", 
                "value": "pcap"
              }, 
              {
                "description": "Pcap trace file", 
                "value": "cap0"
              }, 
              {
                "description": "Pcap-ng trace file", 
                "value": "pcapng"
              }, 
              {
                "description": "Pcap-ng trace file", 
                "value": "ntar"
              }, 
              {
                "description": "Shark appliance trace file", 
                "value": "svt"
              }, 
              {
                "description": "Virtual trace file", 
                "value": "pvt"
              }
            ]
          }
        }, 
        "List mac vendors": {
          "path": "info/mac_vendors", 
          "httpmethod": "GET", 
          "description": "Get the list of supported MAC vendors (NOTE: This is a long listing.)", 
          "response": {
            "type": "array", 
            "description": "List of MAC vendor codes", 
            "id": "mac_vendors", 
            "items": {
              "id": "mac_vendor", 
              "type": "object", 
              "properties": {
                "code": {
                  "description": "Vendor code", 
                  "required": true, 
                  "type": "string"
                }, 
                "name": {
                  "description": "Vendor name", 
                  "required": true, 
                  "type": "string"
                }
              }, 
              "description": "Vendor information"
            }, 
            "example": [
              {
                "code": "00:00:00", 
                "name": "00:00:00"
              }, 
              {
                "code": "00:00:01", 
                "name": "Xerox"
              }
            ]
          }
        }, 
        "List timezones": {
          "path": "info/timezones", 
          "httpmethod": "GET", 
          "description": "Get the list of supported timezones", 
          "response": {
            "description": "Timezone information", 
            "example": {
              "timezones": [
                "Africa/Abidjan", 
                "Africa/Accra", 
                "Africa/Addis_Ababa", 
                "Africa/Algiers", 
                "Africa/Asmara", 
                "Africa/Bamako", 
                "Africa/Bangui", 
                "Africa/Banjul", 
                "America/Kentucky/Louisville", 
                "America/Kentucky/Monticello", 
                "America/Kralendijk", 
                "America/La_Paz", 
                "America/Lima", 
                "America/Los_Angeles", 
                "America/Lower_Princes", 
                "America/Maceio", 
                "America/Managua", 
                "America/Manaus", 
                "America/Marigot", 
                "America/Martinique"
              ], 
              "selected": "America/Los_Angeles"
            }, 
            "type": "object", 
            "id": "timezone_config", 
            "properties": {
              "selected": {
                "description": "Currently selected timezone", 
                "required": true, 
                "type": "string"
              }, 
              "timezones": {
                "required": true, 
                "type": "array", 
                "description": "List of supported timezones", 
                "items": {
                  "type": "string", 
                  "id": "timezone"
                }
              }
            }
          }
        }
      }
    }, 
    "system": {
      "methods": {
        "Get system info": {
          "path": "system/info", 
          "httpmethod": "GET", 
          "description": "Get detailed system information", 
          "response": {
            "description": "Information about this Shark", 
            "example": {
              "webui_root_path": "/", 
              "uptime": 40382739000, 
              "build_variant": "TurboCap", 
              "system_type": "Linux", 
              "start_time": 1354579018824095000, 
              "hostname": "shark.localdomain", 
              "has_webui": true, 
              "build_time": "Dec  3 2012 15:33:46", 
              "webui_port": 443, 
              "internal_version": "10.0.1000.0000", 
              "version": "10.0", 
              "view_version": "3.5", 
              "timezone": "-0800", 
              "protocol_version": "4.0", 
              "build_type": "Debug", 
              "webui_SSL": true, 
              "local_time": 1354579059206834000
            }, 
            "type": "object", 
            "id": "system_info", 
            "properties": {
              "hostname": {
                "description": "Host name of this Shark", 
                "required": true, 
                "type": "string"
              }, 
              "version": {
                "description": "Current version of Shark software", 
                "required": true, 
                "type": "string"
              }, 
              "internal_version": {
                "description": "Current long-form version of Shark software", 
                "required": true, 
                "type": "string"
              }, 
              "protocol_version": {
                "description": "Current version of Shark REST API", 
                "required": true, 
                "type": "string"
              }, 
              "view_version": {
                "description": "Current version of Shark views", 
                "required": true, 
                "type": "string"
              }, 
              "build_time": {
                "description": "Date and time at which this Shark was built", 
                "required": true, 
                "type": "string"
              }, 
              "local_time": {
                "description": "Current system time", 
                "required": true, 
                "$ref": "timestamp-hp"
              }, 
              "start_time": {
                "description": "Time at which this Shark started", 
                "required": true, 
                "$ref": "timestamp-hp"
              }, 
              "uptime": {
                "description": "Elapsed time (in nanoseconds) since this Shark was started", 
                "required": true, 
                "type": "number"
              }, 
              "timezone": {
                "description": "UTC offset for this Shark", 
                "required": true, 
                "type": "string"
              }, 
              "system_type": {
                "description": "Operating system on which this Shark is running", 
                "required": true, 
                "type": "string"
              }, 
              "build_type": {
                "description": "Type of Shark build ('Final' for production, 'Debug' for testing)", 
                "required": true, 
                "type": "string"
              }, 
              "build_variant": {
                "description": "Variant of Shark build", 
                "required": true, 
                "type": "string"
              }, 
              "has_webui": {
                "description": "'true' if the web UI is enabled for this build", 
                "required": true, 
                "type": "boolean"
              }, 
              "webui_port": {
                "description": "(If web UI is enabled) Port on which web UI can be accessed", 
                "required": false, 
                "type": "number"
              }, 
              "webui_SSL": {
                "description": "(If web UI is enabled) 'true' if web UI uses SSL for transport", 
                "required": false, 
                "type": "boolean"
              }, 
              "webui_root_path": {
                "description": "(If web UI is enabled) Root path for web UI resources", 
                "required": false, 
                "type": "string"
              }, 
              "embedded_wireshark": {
                "description": "'true' if Wireshark is embedded with this Shark", 
                "required": false, 
                "type": "boolean"
              }, 
              "default_user_directory": {
                "description": "Default directory for user files", 
                "required": false, 
                "type": "string"
              }
            }
          }
        }, 
        "Get audit log": {
          "path": "system/audit_log", 
          "httpmethod": "GET", 
          "description": "Get the audit log as a text file.  Response content type is 'text/plain'."
        }, 
        "Get version info": {
          "path": "system/version_info", 
          "httpmethod": "GET", 
          "description": "Get version information", 
          "response": {
            "example": {
              "packet_recorder_version": "1.8.1005.0136", 
              "shark_version": "10.0 (10.0.1005.0136)", 
              "turbocap_api_version": "1.8.1005.0136", 
              "serial_number": "N/A", 
              "shark_probe_version": "10.0.1000.0000", 
              "turbocap_driver_version": "driver not loaded", 
              "protocol_version": "4.0"
            }, 
            "type": "object", 
            "id": "version_info", 
            "properties": {
              "shark_version": {
                "description": "User-friendly version of the system", 
                "required": true, 
                "type": "string"
              }, 
              "shark_probe_version": {
                "description": "Version of the embedded server component", 
                "required": true, 
                "type": "string"
              }, 
              "protocol_version": {
                "description": "Highest API version supported by the system", 
                "required": true, 
                "type": "string"
              }, 
              "packet_recorder_version": {
                "description": "Version of the packet recorder component", 
                "required": true, 
                "type": "string"
              }, 
              "turbocap_api_version": {
                "description": "Version of the turbocap api component", 
                "required": true, 
                "type": "string"
              }, 
              "turbocap_driver_version": {
                "description": "Version of the turbocap driver component", 
                "required": true, 
                "type": "string"
              }, 
              "serial_number": {
                "description": "Serial number of the system", 
                "required": true, 
                "type": "string"
              }
            }
          }
        }, 
        "Get system storage info": {
          "path": "system/storage", 
          "httpmethod": "GET", 
          "description": "Get storage monitor status", 
          "response": {
            "example": {
              "total_space": 42815455232, 
              "disks": [
                {
                  "label": "N/A", 
                  "state_type": "OK", 
                  "state": "OK", 
                  "row_id": "0", 
                  "column_id": "0", 
                  "model": "N/A", 
                  "serial": "N/A"
                }
              ], 
              "allocated_space": 11811160064, 
              "used_space": 11676942336, 
              "state_type": "OK", 
              "state": "OK", 
              "available_space": 31138512896, 
              "can_reinitialize": true
            }, 
            "type": "object", 
            "id": "storage", 
            "properties": {
              "can_reinitialize": {
                "description": "Whether or not the storage system can be reinitialized", 
                "required": false, 
                "type": "boolean"
              }, 
              "state": {
                "description": "State description of the storage system", 
                "required": true, 
                "type": "string"
              }, 
              "state_type": {
                "description": "State code of the storage system", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "OK", 
                  "WARNING", 
                  "ERROR"
                ]
              }, 
              "available_space": {
                "description": "Available space in the storage system", 
                "required": false, 
                "type": "number"
              }, 
              "allocated_space": {
                "description": "Allocated space in the storage system", 
                "required": false, 
                "type": "number"
              }, 
              "total_space": {
                "description": "Total space in the storage system", 
                "required": false, 
                "type": "number"
              }, 
              "used_space": {
                "description": "Used space in the storage system", 
                "required": false, 
                "type": "number"
              }, 
              "disks": {
                "description": "List of disks in the storage system", 
                "required": false, 
                "type": "array", 
                "items": {
                  "id": "disk", 
                  "type": "object", 
                  "properties": {
                    "row_id": {
                      "description": "Row number for the disk", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "column_id": {
                      "description": "Column number for the disk", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "label": {
                      "description": "Label of the disk", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "model": {
                      "description": "Model of the disk", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "serial": {
                      "description": "Serial number of the disk", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "expected_serial": {
                      "description": "Expected serial number of the disk", 
                      "required": false, 
                      "type": "string"
                    }, 
                    "state": {
                      "description": "State description of the disk", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "state_type": {
                      "description": "State code of the disk", 
                      "required": true, 
                      "type": "string", 
                      "enum": [
                        "OK", 
                        "WARNING", 
                        "ERROR"
                      ]
                    }
                  }, 
                  "description": "Storage system disk information"
                }
              }
            }
          }
        }, 
        "Reinitialize storage system": {
          "path": "system/storage/reinitialize", 
          "httpmethod": "POST", 
          "description": "Request reinitialization of storage subsystem."
        }, 
        "Format storage system": {
          "path": "system/format_storage", 
          "httpmethod": "POST", 
          "description": "Request packet storage reformat.", 
          "request": {
            "description": "Configuration information to format the packet storage", 
            "example": {
              "reserved_space": 10
            }, 
            "type": "object", 
            "id": "format_storage", 
            "properties": {
              "reserved_space": {
                "description": "Percentage of unused space at the end of the packet storage", 
                "required": true, 
                "type": "number"
              }
            }
          }
        }, 
        "Restart system": {
          "path": "system/restart", 
          "httpmethod": "POST", 
          "description": "Restart the shark service or reboot the system.", 
          "request": {
            "description": "Configuration to restart", 
            "example": {
              "type": "PROBE"
            }, 
            "type": "object", 
            "id": "restart", 
            "properties": {
              "type": {
                "required": true, 
                "type": "string", 
                "description": "Type of service to restart", 
                "enum": [
                  "SHARK", 
                  "PROBE", 
                  "PACKETRECORDER"
                ]
              }
            }
          }
        }, 
        "Shutdown system": {
          "path": "system/shutdown", 
          "httpmethod": "POST", 
          "description": "Shut down the system."
        }, 
        "Generate system dump": {
          "path": "system/sysdump", 
          "parameters": {
            "dump_type": {
              "type": "string", 
              "description": "'CURRENT': Includes current Shark Probe and Shark Packet Recorder logs; 'PROBE': Includes all Shark Probe logs; 'PACKETRECORDER': Includes all Shark Packet Recorder logs; 'COMPLETE': Includes all Shark Probe and Shark Packet Recorder logs.", 
              "required": false
            }, 
            "case_id": {
              "type": "string", 
              "description": "Optional case ID to be attached to output file name.", 
              "required": false
            }
          }, 
          "httpmethod": "GET"
        }, 
        "Get system update status": {
          "path": "system/update", 
          "httpmethod": "GET", 
          "description": "Get current system update status", 
          "response": {
            "example": {
              "state": "RUNNING", 
              "shark_version": "xxxx", 
              "shark_user_version": "yyyy", 
              "init_id": "abc123", 
              "iso_name": "my_iso_12345.iso", 
              "iso_size": 4564564, 
              "estimate": 30
            }, 
            "type": "object", 
            "id": "update", 
            "properties": {
              "state": {
                "description": "Current state of the update", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "NEUTRAL", 
                  "INITIALIZING", 
                  "INITIALIZED", 
                  "RUNNING", 
                  "FAILED_GRACEFUL", 
                  "FAILED_CRITICAL", 
                  "UNKNOWN"
                ]
              }, 
              "shark_version": {
                "description": "Currently running system version", 
                "required": true, 
                "type": "string"
              }, 
              "shark_user_version": {
                "description": "Currently running system version (user string)", 
                "required": true, 
                "type": "string"
              }, 
              "init_id": {
                "description": "When status is 'INITIALIZED', the ID to be provided when starting the update (i.e. to request a state change to 'RUNNING')", 
                "required": false, 
                "type": "string"
              }, 
              "iso_name": {
                "description": "File name of the uploaded ISO file", 
                "required": false, 
                "type": "string"
              }, 
              "iso_size": {
                "description": "Size (in bytes) of the uploaded ISO file", 
                "required": false, 
                "type": "number"
              }, 
              "iso_sha_hash": {
                "description": "SHA256 hash of the uploaded ISO file", 
                "required": false, 
                "type": "string"
              }, 
              "update_to": {
                "description": "Version to which update will be carried out", 
                "required": false, 
                "type": "string"
              }, 
              "update_to_internal": {
                "description": "Internal version string to which update will be carried out", 
                "required": false, 
                "type": "string"
              }, 
              "pre_start_message": {
                "description": "Message from update subsystem to be displayed before starting update", 
                "required": false, 
                "type": "string"
              }, 
              "estimate": {
                "description": "Estimated time to complete update", 
                "notes": "Seconds", 
                "required": true, 
                "type": "number"
              }, 
              "executing_job_description": {
                "description": "Description of update task currently under way", 
                "required": false, 
                "type": "string"
              }, 
              "comment": {
                "description": "Message from update subsystem", 
                "notes": "In case of a 'FAILED_GRACEFUL' or 'FAILED_CRITICAL', provides a reason for failure", 
                "required": false, 
                "type": "string"
              }, 
              "need_reboot": {
                "description": "'true' if a the update requires a reboot", 
                "required": false, 
                "type": "boolean"
              }
            }
          }
        }, 
        "Modify system update state": {
          "path": "system/update/state", 
          "httpmethod": "PUT", 
          "description": "Update state of system update", 
          "request": {
            "description": "Request change in update state value on server", 
            "example": {
              "state": "INITIALIZED", 
              "reset": true
            }, 
            "type": "object", 
            "id": "update_state", 
            "properties": {
              "state": {
                "description": "Requested new state of update subsystem", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "NEUTRAL", 
                  "INITIALIZING", 
                  "INITIALIZED", 
                  "RUNNING", 
                  "FAILED_GRACEFUL", 
                  "FAILED_CRITICAL", 
                  "UNKNOWN"
                ]
              }, 
              "init_id": {
                "description": "Update ID provided by the update subsystem from the most recent status request", 
                "notes": "Only valid when the requested state is 'RUNNING'. Ignored in all other requested states.", 
                "required": false, 
                "type": "string"
              }, 
              "reset": {
                "description": "If 'true', uninitializes update", 
                "notes": "Only applies when requesting 'NEUTRAL' state.", 
                "required": false, 
                "type": "boolean"
              }
            }
          }, 
          "response": {
            "example": {
              "state": "RUNNING", 
              "shark_version": "xxxx", 
              "shark_user_version": "yyyy", 
              "init_id": "abc123", 
              "iso_name": "my_iso_12345.iso", 
              "iso_size": 4564564, 
              "estimate": 30
            }, 
            "type": "object", 
            "id": "update", 
            "properties": {
              "state": {
                "description": "Current state of the update", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "NEUTRAL", 
                  "INITIALIZING", 
                  "INITIALIZED", 
                  "RUNNING", 
                  "FAILED_GRACEFUL", 
                  "FAILED_CRITICAL", 
                  "UNKNOWN"
                ]
              }, 
              "shark_version": {
                "description": "Currently running system version", 
                "required": true, 
                "type": "string"
              }, 
              "shark_user_version": {
                "description": "Currently running system version (user string)", 
                "required": true, 
                "type": "string"
              }, 
              "init_id": {
                "description": "When status is 'INITIALIZED', the ID to be provided when starting the update (i.e. to request a state change to 'RUNNING')", 
                "required": false, 
                "type": "string"
              }, 
              "iso_name": {
                "description": "File name of the uploaded ISO file", 
                "required": false, 
                "type": "string"
              }, 
              "iso_size": {
                "description": "Size (in bytes) of the uploaded ISO file", 
                "required": false, 
                "type": "number"
              }, 
              "iso_sha_hash": {
                "description": "SHA256 hash of the uploaded ISO file", 
                "required": false, 
                "type": "string"
              }, 
              "update_to": {
                "description": "Version to which update will be carried out", 
                "required": false, 
                "type": "string"
              }, 
              "update_to_internal": {
                "description": "Internal version string to which update will be carried out", 
                "required": false, 
                "type": "string"
              }, 
              "pre_start_message": {
                "description": "Message from update subsystem to be displayed before starting update", 
                "required": false, 
                "type": "string"
              }, 
              "estimate": {
                "description": "Estimated time to complete update", 
                "notes": "Seconds", 
                "required": true, 
                "type": "number"
              }, 
              "executing_job_description": {
                "description": "Description of update task currently under way", 
                "required": false, 
                "type": "string"
              }, 
              "comment": {
                "description": "Message from update subsystem", 
                "notes": "In case of a 'FAILED_GRACEFUL' or 'FAILED_CRITICAL', provides a reason for failure", 
                "required": false, 
                "type": "string"
              }, 
              "need_reboot": {
                "description": "'true' if a the update requires a reboot", 
                "required": false, 
                "type": "boolean"
              }
            }
          }
        }, 
        "Upload system update iso": {
          "path": "system/update/iso", 
          "httpmethod": "POST", 
          "description": "Upload a new ISO file for system update", 
          "headers": {
            "Content-Type": {
              "type": "string", 
              "description": "Content type", 
              "notes": "Must be 'multipart/form-data'", 
              "required": true
            }, 
            "Content-Disposition": {
              "type": "string", 
              "description": "Name of the file", 
              "notes": "Must be of the form Content-Disposition: form-data; name=\"iso-file\"; filename=\"[FILENAME]\"", 
              "required": true
            }
          }, 
          "request": {
            "type": "data", 
            "content_type": "multipart/form-data", 
            "description": "update ISO file"
          }
        }, 
        "Fetch system update iso": {
          "path": "system/update/url", 
          "httpmethod": "POST", 
          "description": "Request fetch of update ISO from a URL", 
          "request": {
            "example": {
              "url": "http://myserver.com/isos/my.iso"
            }, 
            "type": "object", 
            "id": "update_fetch", 
            "properties": {
              "url": {
                "description": "URL of ISO to be used for update", 
                "required": true, 
                "type": "string"
              }
            }
          }, 
          "response": {
            "example": {
              "state": "RUNNING", 
              "shark_version": "xxxx", 
              "shark_user_version": "yyyy", 
              "init_id": "abc123", 
              "iso_name": "my_iso_12345.iso", 
              "iso_size": 4564564, 
              "estimate": 30
            }, 
            "type": "object", 
            "id": "update", 
            "properties": {
              "state": {
                "description": "Current state of the update", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "NEUTRAL", 
                  "INITIALIZING", 
                  "INITIALIZED", 
                  "RUNNING", 
                  "FAILED_GRACEFUL", 
                  "FAILED_CRITICAL", 
                  "UNKNOWN"
                ]
              }, 
              "shark_version": {
                "description": "Currently running system version", 
                "required": true, 
                "type": "string"
              }, 
              "shark_user_version": {
                "description": "Currently running system version (user string)", 
                "required": true, 
                "type": "string"
              }, 
              "init_id": {
                "description": "When status is 'INITIALIZED', the ID to be provided when starting the update (i.e. to request a state change to 'RUNNING')", 
                "required": false, 
                "type": "string"
              }, 
              "iso_name": {
                "description": "File name of the uploaded ISO file", 
                "required": false, 
                "type": "string"
              }, 
              "iso_size": {
                "description": "Size (in bytes) of the uploaded ISO file", 
                "required": false, 
                "type": "number"
              }, 
              "iso_sha_hash": {
                "description": "SHA256 hash of the uploaded ISO file", 
                "required": false, 
                "type": "string"
              }, 
              "update_to": {
                "description": "Version to which update will be carried out", 
                "required": false, 
                "type": "string"
              }, 
              "update_to_internal": {
                "description": "Internal version string to which update will be carried out", 
                "required": false, 
                "type": "string"
              }, 
              "pre_start_message": {
                "description": "Message from update subsystem to be displayed before starting update", 
                "required": false, 
                "type": "string"
              }, 
              "estimate": {
                "description": "Estimated time to complete update", 
                "notes": "Seconds", 
                "required": true, 
                "type": "number"
              }, 
              "executing_job_description": {
                "description": "Description of update task currently under way", 
                "required": false, 
                "type": "string"
              }, 
              "comment": {
                "description": "Message from update subsystem", 
                "notes": "In case of a 'FAILED_GRACEFUL' or 'FAILED_CRITICAL', provides a reason for failure", 
                "required": false, 
                "type": "string"
              }, 
              "need_reboot": {
                "description": "'true' if a the update requires a reboot", 
                "required": false, 
                "type": "boolean"
              }
            }
          }
        }
      }
    }, 
    "stats": {
      "methods": {
        "Get memory stats": {
          "path": "stats/memory", 
          "httpmethod": "GET", 
          "description": "Get system memory information", 
          "response": {
            "example": {
              "status": "OK", 
              "available": 4658311920, 
              "used": 1603742992, 
              "reserved": 1407188992, 
              "by_category": [
                {
                  "bytes": 153696, 
                  "name": "DATAMATRIX", 
                  "allocations": 12
                }, 
                {
                  "bytes": 264, 
                  "name": "DBTABLE", 
                  "allocations": 5
                }, 
                {
                  "bytes": 41946816, 
                  "name": "DEMUXER", 
                  "allocations": 10
                }, 
                {
                  "bytes": 181560, 
                  "name": "DNS_RESOLVER", 
                  "allocations": 9
                }, 
                {
                  "bytes": 196554000, 
                  "name": "GLOBAL", 
                  "allocations": 75053
                }, 
                {
                  "bytes": 153808, 
                  "name": "IP_FRAGMENTATION", 
                  "allocations": 6
                }, 
                {
                  "bytes": 1120, 
                  "name": "MEMORY_REPOSITORY", 
                  "allocations": 2
                }, 
                {
                  "bytes": 23581312, 
                  "name": "NETFLOW", 
                  "allocations": 75006
                }, 
                {
                  "bytes": 130535424, 
                  "name": "PACKET", 
                  "allocations": 3
                }
              ], 
              "by_handle": [
                {
                  "by_category": [
                    {
                      "bytes": 88680, 
                      "name": "DATAMATRIX", 
                      "allocations": 7
                    }, 
                    {
                      "bytes": 264, 
                      "name": "DBTABLE", 
                      "allocations": 5
                    }, 
                    {
                      "bytes": 165848, 
                      "name": "GLOBAL", 
                      "allocations": 15
                    }, 
                    {
                      "bytes": 76904, 
                      "name": "IP_FRAGMENTATION", 
                      "allocations": 3
                    }
                  ], 
                  "name": "00000001"
                }, 
                {
                  "by_category": [
                    {
                      "bytes": 65016, 
                      "name": "DATAMATRIX", 
                      "allocations": 5
                    }, 
                    {
                      "bytes": 141920, 
                      "name": "GLOBAL", 
                      "allocations": 8
                    }, 
                    {
                      "bytes": 76904, 
                      "name": "IP_FRAGMENTATION", 
                      "allocations": 3
                    }
                  ], 
                  "name": "FFFFFF01"
                }
              ], 
              "total": 6262054912
            }, 
            "type": "object", 
            "id": "memory", 
            "properties": {
              "status": {
                "description": "Memory usage status", 
                "required": true, 
                "type": "string", 
                "enum": [
                  "OK", 
                  "WARNING", 
                  "CRITICAL", 
                  "CONFIGURATION_ERROR"
                ]
              }, 
              "total": {
                "description": "Total memory on the system", 
                "required": true, 
                "type": "number"
              }, 
              "used": {
                "description": "Memory used by the system", 
                "required": true, 
                "type": "number"
              }, 
              "available": {
                "description": "Memory available for use", 
                "required": true, 
                "type": "number"
              }, 
              "reserved": {
                "description": "Reserved memory", 
                "notes": "Typically reserved by the packet recorder", 
                "required": true, 
                "type": "number"
              }, 
              "by_category": {
                "description": "List of memory usage for each category", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "category", 
                  "type": "object", 
                  "properties": {
                    "name": {
                      "description": "Category name", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "allocations": {
                      "description": "Number of memory allocation operations for this category", 
                      "required": true, 
                      "type": "number"
                    }, 
                    "bytes": {
                      "description": "Allocated bytes for this category", 
                      "required": true, 
                      "type": "number"
                    }
                  }, 
                  "description": "Memory usage for a single category"
                }
              }, 
              "by_handle": {
                "description": "List of memory usage for each handle (i.e. view, etc.)", 
                "required": true, 
                "type": "array", 
                "items": {
                  "id": "handle", 
                  "type": "object", 
                  "properties": {
                    "name": {
                      "description": "Handle name", 
                      "required": true, 
                      "type": "string"
                    }, 
                    "by_category": {
                      "description": "List of memory usage in each category for the given handle", 
                      "required": true, 
                      "type": "array", 
                      "items": {
                        "id": "category", 
                        "type": "object", 
                        "properties": {
                          "name": {
                            "description": "Category name", 
                            "required": true, 
                            "type": "string"
                          }, 
                          "allocations": {
                            "description": "Number of memory allocation operations for this category", 
                            "required": true, 
                            "type": "number"
                          }, 
                          "bytes": {
                            "description": "Allocated bytes for this category", 
                            "required": true, 
                            "type": "number"
                          }
                        }, 
                        "description": "Memory usage for a single category"
                      }
                    }
                  }, 
                  "description": "Memory usage for a single handle"
                }
              }
            }
          }
        }, 
        "Get storage stats": {
          "path": "stats/storage", 
          "httpmethod": "GET", 
          "description": "Get system storage information", 
          "response": {
            "example": {
              "packet_storage": {
                "status": "OK", 
                "used": 0, 
                "reserved": 0, 
                "unused": 0, 
                "unallocated": 3999688294400, 
                "allocated": 0, 
                "total": 3999688294400
              }, 
              "os_storage": {
                "status": "OK", 
                "index_storage": {
                  "unused": 0, 
                  "allocated": 0, 
                  "total": 457108365312, 
                  "used": 0, 
                  "unallocated": 457108365312
                }, 
                "disk_storage": {
                  "unused": 457108365312, 
                  "total": 457360449536, 
                  "used": 252084224
                }
              }
            }, 
            "type": "object", 
            "id": "storage", 
            "properties": {
              "packet_storage": {
                "description": "Packet storage statistics", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "status": {
                    "description": "Packet storage status", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "OK", 
                      "DISK_FULL", 
                      "CORRUPTED", 
                      "HW_FAILURE", 
                      "UNLICENSED", 
                      "LICENSE_EXCEEDED", 
                      "UNKNOWN"
                    ]
                  }, 
                  "total": {
                    "description": "Total packet storage size", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "reserved": {
                    "description": "Packet storage reserved size", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "allocated": {
                    "description": "Allocated packet storage size", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "unallocated": {
                    "description": "Unallocated packet storage size", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "used": {
                    "description": "Packet storage space currently being used", 
                    "required": true, 
                    "type": "number"
                  }, 
                  "unused": {
                    "description": "Allocated but not yet used packet storage space", 
                    "required": true, 
                    "type": "number"
                  }
                }
              }, 
              "os_storage": {
                "description": "System storage statistics", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "status": {
                    "description": "System storage status", 
                    "required": true, 
                    "type": "string", 
                    "enum": [
                      "OK", 
                      "WARNING", 
                      "CRITICAL", 
                      "UNKNOWN"
                    ]
                  }, 
                  "disk_storage": {
                    "description": "System disk status", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "total": {
                        "description": "Total system disk storage size", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "used": {
                        "description": "System disk storage currently being used", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "unused": {
                        "description": "System disk storage not being used", 
                        "required": true, 
                        "type": "number"
                      }
                    }
                  }, 
                  "index_storage": {
                    "description": "Index storage status", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "total": {
                        "description": "Total index storage size (unallocated + allocated)", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "allocated": {
                        "description": "Allocated index storage space by all the existing jobs", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "unallocated": {
                        "description": "Available index storage space", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "used": {
                        "description": "Used index storage space", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "unused": {
                        "description": "Unused index storage space", 
                        "required": true, 
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }, 
        "Get profiler export stats": {
          "path": "stats/profiler_export", 
          "httpmethod": "GET", 
          "description": "Get profiler export information", 
          "response": {
            "description": "Statistics on the Profiler Export", 
            "example": {
              "last_minute": {
                "exported": {
                  "ip_bytes": 7945576960, 
                  "packets": 31037410, 
                  "flows": 973309
                }, 
                "rejected": {
                  "ip_bytes": 0, 
                  "packets": 0, 
                  "flows": 0
                }
              }, 
              "last_week": {
                "exported": {
                  "ip_bytes": 6491276748032, 
                  "packets": 25356549797, 
                  "average_flows": 78886, 
                  "flows": 795175093, 
                  "peak_flows": 1000000
                }, 
                "rejected": {
                  "ip_bytes": 13589455872, 
                  "packets": 53083812, 
                  "average_flows": 165, 
                  "flows": 1664668, 
                  "peak_flows": 600000
                }
              }
            }, 
            "type": "object", 
            "id": "profiler_export_stats", 
            "properties": {
              "last_minute": {
                "description": "Statistics on the data exported in the last minute", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "exported": {
                    "description": "Values sent to the profiler/s in the last minute", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "flows": {
                        "description": "Number of exported flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "packets": {
                        "description": "Cumulative number of packets for the exported flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "ip_bytes": {
                        "description": "Cumulative number of IP bytes (IP header included) for the exported flows", 
                        "required": true, 
                        "type": "number"
                      }
                    }
                  }, 
                  "rejected": {
                    "description": "Values analyzed but not sent to the profiler/s in the last minute", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "flows": {
                        "description": "Number of rejected flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "packets": {
                        "description": "Cumulative number of packets for the rejected flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "ip_bytes": {
                        "description": "Cumulative number of IP bytes (IP header included) for the rejected flows", 
                        "required": true, 
                        "type": "number"
                      }
                    }
                  }
                }
              }, 
              "last_week": {
                "description": "Statistics on the data exported in the last week", 
                "required": true, 
                "type": "object", 
                "properties": {
                  "exported": {
                    "description": "Values sent to the profiler/s in the last week", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "flows": {
                        "description": "Number of exported flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "packets": {
                        "description": "Cumulative number of packets for the exported flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "ip_bytes": {
                        "description": "Cumulative number of IP bytes (IP header included) for the exported flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "average_flows": {
                        "description": "Average number of flows exported in the last week", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "peak_flows": {
                        "description": "Max number of flows exported in a minute in the last week", 
                        "required": true, 
                        "type": "number"
                      }
                    }
                  }, 
                  "rejected": {
                    "description": "Values analyzed but not sent to the profiler/s in the last week", 
                    "required": true, 
                    "type": "object", 
                    "properties": {
                      "flows": {
                        "description": "Number of rejected flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "packets": {
                        "description": "Cumulative number of packets for the rejected flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "ip_bytes": {
                        "description": "Cumulative number of IP bytes (IP header included) for the rejected flows", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "average_flows": {
                        "description": "Average number of flows rejected in the last week", 
                        "required": true, 
                        "type": "number"
                      }, 
                      "peak_flows": {
                        "description": "Max number of flows rejected in a minute in the last week", 
                        "required": true, 
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }, 
    "definitions": {
      "methods": {
        "List port names": {
          "path": "definitions/port_names", 
          "httpmethod": "GET", 
          "description": "Get the list of configured port names", 
          "response": {
            "type": "array", 
            "description": "List of port name definitions", 
            "id": "port_names", 
            "items": {
              "id": "port_name", 
              "$ref": "port_name"
            }, 
            "example": [
              {
                "udp": "http", 
                "port": 80, 
                "tcp": "http"
              }, 
              {
                "udp": "ms-sql-s", 
                "port": 1433, 
                "tcp": "ms-sql-s"
              }
            ]
          }
        }, 
        "Update port names configuration": {
          "path": "definitions/port_names", 
          "httpmethod": "PUT", 
          "description": "Update the list of configured port names", 
          "request": {
            "type": "array", 
            "description": "List of port name definitions", 
            "id": "port_names", 
            "items": {
              "id": "port_name", 
              "$ref": "port_name"
            }, 
            "example": [
              {
                "udp": "http", 
                "port": 80, 
                "tcp": "http"
              }, 
              {
                "udp": "ms-sql-s", 
                "port": 1433, 
                "tcp": "ms-sql-s"
              }
            ]
          }
        }, 
        "List port groups": {
          "path": "definitions/port_groups", 
          "httpmethod": "GET", 
          "description": "Get the list of configured port groups", 
          "response": {
            "type": "array", 
            "description": "List of port group definitions", 
            "id": "port_groups", 
            "items": {
              "id": "port_group", 
              "$ref": "port_group"
            }, 
            "example": [
              {
                "priority": 0, 
                "name": "Web", 
                "ports": [
                  {
                    "port_range": "80", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "8080", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "443", 
                    "protocol": "TCP"
                  }
                ]
              }, 
              {
                "priority": 1, 
                "name": "Email", 
                "ports": [
                  {
                    "port_range": "25", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "465", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "587", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "110", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "995", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "143", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "585", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "993", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "119", 
                    "protocol": "TCP"
                  }
                ]
              }
            ]
          }
        }, 
        "Update port groups configuration": {
          "path": "definitions/port_groups", 
          "httpmethod": "PUT", 
          "description": "Update the list of configured port groups", 
          "request": {
            "type": "array", 
            "description": "List of port group definitions", 
            "id": "port_groups", 
            "items": {
              "id": "port_group", 
              "$ref": "port_group"
            }, 
            "example": [
              {
                "priority": 0, 
                "name": "Web", 
                "ports": [
                  {
                    "port_range": "80", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "8080", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "443", 
                    "protocol": "TCP"
                  }
                ]
              }, 
              {
                "priority": 1, 
                "name": "Email", 
                "ports": [
                  {
                    "port_range": "25", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "465", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "587", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "110", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "995", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "143", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "585", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "993", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "119", 
                    "protocol": "TCP"
                  }
                ]
              }
            ]
          }
        }, 
        "List Service Response Time ports": {
          "path": "definitions/srt_ports", 
          "httpmethod": "GET", 
          "description": "Get the list of configured lService Response Time ports", 
          "response": {
            "type": "array", 
            "description": "List of service response time ports", 
            "id": "srt_ports", 
            "items": {
              "type": "number", 
              "id": "port"
            }, 
            "example": [
              20, 
              25, 
              69, 
              80, 
              139, 
              143, 
              443, 
              465
            ]
          }
        }, 
        "Update Service Response Time ports configuration": {
          "path": "definitions/srt_ports", 
          "httpmethod": "PUT", 
          "description": "Update the list of configured Service Response Time ports", 
          "request": {
            "type": "array", 
            "description": "List of service response time ports", 
            "id": "srt_ports", 
            "items": {
              "type": "number", 
              "id": "port"
            }, 
            "example": [
              20, 
              25, 
              69, 
              80, 
              139, 
              143, 
              443, 
              465
            ]
          }
        }, 
        "List layer 4 mappings": {
          "path": "definitions/layer4_mappings", 
          "httpmethod": "GET", 
          "description": "Get the list of configured layer 4 mappings", 
          "response": {
            "type": "array", 
            "description": "List of layer4 mapping definitions", 
            "id": "layer4_mappings", 
            "items": {
              "id": "layer4_mapping", 
              "$ref": "layer4_mapping"
            }, 
            "example": [
              {
                "override": true, 
                "priority": 0, 
                "hosts": [
                  "192.168.140.18"
                ], 
                "name": "My_server", 
                "ports": [
                  {
                    "port_range": "99", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "15", 
                    "protocol": "TCP"
                  }
                ]
              }, 
              {
                "override": false, 
                "priority": 1, 
                "hosts": [
                  "192.168.141.1"
                ], 
                "name": "My_server2", 
                "ports": [
                  {
                    "port_range": "1000", 
                    "protocol": "UDP"
                  }, 
                  {
                    "port_range": "1001", 
                    "protocol": "UDP"
                  }
                ]
              }
            ]
          }
        }, 
        "Update layer 4 mappings configuration": {
          "path": "definitions/layer4_mappings", 
          "httpmethod": "PUT", 
          "description": "Update the list of configured layer 4 mappings", 
          "request": {
            "type": "array", 
            "description": "List of layer4 mapping definitions", 
            "id": "layer4_mappings", 
            "items": {
              "id": "layer4_mapping", 
              "$ref": "layer4_mapping"
            }, 
            "example": [
              {
                "override": true, 
                "priority": 0, 
                "hosts": [
                  "192.168.140.18"
                ], 
                "name": "My_server", 
                "ports": [
                  {
                    "port_range": "99", 
                    "protocol": "TCP"
                  }, 
                  {
                    "port_range": "15", 
                    "protocol": "TCP"
                  }
                ]
              }, 
              {
                "override": false, 
                "priority": 1, 
                "hosts": [
                  "192.168.141.1"
                ], 
                "name": "My_server2", 
                "ports": [
                  {
                    "port_range": "1000", 
                    "protocol": "UDP"
                  }, 
                  {
                    "port_range": "1001", 
                    "protocol": "UDP"
                  }
                ]
              }
            ]
          }
        }, 
        "List custom applications": {
          "path": "definitions/custom_applications", 
          "httpmethod": "GET", 
          "description": "Get the list of configured custom applications", 
          "response": {
            "type": "array", 
            "description": "List of custom L7 signature definitions", 
            "id": "applications", 
            "items": {
              "id": "application", 
              "$ref": "custom_application"
            }, 
            "example": [
              {
                "name": "My_Bugzilla", 
                "uri": "http://bugzilla.mydomain.com/"
              }, 
              {
                "name": "My_App1", 
                "uri": "http://myserver.mydomain.com/app1/*"
              }
            ]
          }
        }, 
        "Update custom applications configuration": {
          "path": "definitions/custom_applications", 
          "httpmethod": "PUT", 
          "description": "Update the list of configured custom applications", 
          "request": {
            "type": "array", 
            "description": "List of custom L7 signature definitions", 
            "id": "applications", 
            "items": {
              "id": "application", 
              "$ref": "custom_application"
            }, 
            "example": [
              {
                "name": "My_Bugzilla", 
                "uri": "http://bugzilla.mydomain.com/"
              }, 
              {
                "name": "My_App1", 
                "uri": "http://myserver.mydomain.com/app1/*"
              }
            ]
          }
        }, 
        "List applications": {
          "path": "definitions/applications", 
          "httpmethod": "GET", 
          "description": "Get the list of configured applications", 
          "response": {
            "type": "array", 
            "description": "List of application definitions", 
            "id": "applications", 
            "items": {
              "id": "application", 
              "$ref": "application"
            }, 
            "example": [
              {
                "type": 1, 
                "display_name": "Facebook", 
                "description": "Facebook is a social networking service.", 
                "id": 206
              }, 
              {
                "type": 1, 
                "display_name": "Google", 
                "description": "Internet searching on Google's search engine site google.com (or international equivalent) and/or encrypted traffic from other Google services.", 
                "id": 259
              }
            ]
          }
        }
      }
    }
  }, 
  "errors": [
    {
      "error_id": "REQUEST_INVALID_INPUT", 
      "description": "The request is invalid", 
      "http_status": 400
    }, 
    {
      "error_id": "AUTH_REQUIRED", 
      "description": "Missing authentication credentials", 
      "http_status": 401
    }, 
    {
      "error_id": "AUTH_INVALID_CREDENTIALS", 
      "description": "Invalid user name or password", 
      "http_status": 401
    }, 
    {
      "error_id": "AUTH_INVALID_SESSION", 
      "description": "The authentication session has timed out or is invalid", 
      "http_status": 401
    }, 
    {
      "error_id": "AUTH_EXPIRED_PASSWORD", 
      "description": "Account password has expired", 
      "http_status": 401
    }, 
    {
      "error_id": "AUTH_INVALID_CODE", 
      "description": "The Oauth access code is invalid", 
      "http_status": 401
    }, 
    {
      "error_id": "AUTH_EXPIRED_TOKEN", 
      "description": "The Oauth token has expired", 
      "http_status": 401
    }, 
    {
      "error_id": "AUTH_EXPIRED_CODE", 
      "description": "The Oauth access code has expired", 
      "http_status": 401
    }, 
    {
      "error_id": "AUTH_DISABLED_ACCOUNT", 
      "description": "Account has been disabled", 
      "http_status": 403
    }, 
    {
      "error_id": "AUTH_FORBIDDEN", 
      "description": "Account does not have privileges for this request", 
      "http_status": 403
    }, 
    {
      "error_id": "AUTH_INVALID_TOKEN", 
      "description": "The Oauth token is invalid", 
      "http_status": 403
    }, 
    {
      "error_id": "RESOURCE_NOT_FOUND", 
      "description": "The requested resource was not found", 
      "http_status": 404
    }, 
    {
      "error_id": "HTTP_INVALID_METHOD", 
      "description": "The requested method is not supported by this resouce", 
      "http_status": 405
    }, 
    {
      "error_id": "INTERNAL_ERROR", 
      "description": "Internal error occurred", 
      "http_status": 500
    }
  ]
}
