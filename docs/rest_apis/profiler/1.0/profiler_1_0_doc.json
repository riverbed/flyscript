{"restSchemaVersion":"1.0","name":"profiler","version":"1.0","title":"Riverbed Cascade Profiler REST API","description":"<h2>Overview<\/h2>\n\n<p>\nThe documentation pages in this section describe\nthe RESTful APIs included with Cascade Profiler and Cascade Express\nproducts. It is assumed that the reader has practical knowledge of\nRESTful APIs, so the documentation does not go into detail about what\nREST is and how to use it. Instead the documentation focuses on what\ndata can be accessed and how to access it.\n<\/p>\n\n<p>\nThe primary focus of the current version of the API is on providing\naccess to reporting data. The following information can be accessed\nvia the API:\n<\/p>\n<ul>\n  <li>Reporting data (traffic data, service data, event list data, and user data)<\/li>\n  <li>Information about network devices<\/li>\n  <li>Control over SDN virtual network settings (SDN virtual network settings are a licensed feature)<\/li>\n  <li>Information about system users<\/li>\n<\/ul>\n\n<p>\nDetails about REST resources can be found in the <b>Resources<\/b>\nsection. This overview continues with how to run reports and retrieve\ndata from them.\n<\/p>\n\n<h2>Running a report<\/h2>\n\n<p>\nThe steps for running a report are described below. An easy way to\nlearn how to run reports and get data is to use the <b>Demo\nReports<\/b> section of this documentation. In that section a number of\nexample reports are listed. If you click on any of the examples, the\nreport will run along with a listing on the right side of the screen\nfor each step in the process. It displays the REST resource, HTTP\nmethod, headers and body for both the request and response.\n<\/p>\n\n<p>\nFollow these steps to run a report:\n<\/p>\n\n<h3>1. Create a new report by posting report criteria to the server.<\/h3>\n\n<p>\nA criteria structure in either JSON or XML is submitted to the server\nusing the HTTP POST method. The resource to which the criteria\nstructure is posted is\ncalled <b>\/profiler\/1.0\/reporting\/reports<\/b>. The details are\ndescribed in the <b>Resources<\/b> section of this documentation.\n<\/p>\n\n<p>\nA key part of the report criteria is the ID of the template that\nshould be used to run the report. A special system template ID 184\nthat provides a high degree of flexibility is used in demo reports in\nthis documentation. Additionally, any template that is saved via the\nuser interface of the product can be used to run a report. In order to\nsave a template, the ID of that template must be passed in the report\ncriteria structure instead of 184. A template can be configured via\nthe user interface, saved via the product and then used in the REST\nAPI to generate reports and retrieve them in a rendered form or in raw\ndata form. Once a template is saved, its ID can be obtained\nvia the <b>\/api\/profiler\/1.0\/reporting\/templates<\/b> REST resource.\n<\/p>\n\n<h3>2. Poll report status until the report completes.<\/h3>\n\n<p>\nIt may take a while for a report to complete. While the report is\nrunning, the client must poll for report status to know when the\nreport completes. When the call to create a new report succeeds, it\nreturns the URL for the newly created report. That URL may look\nsimilar to <i>\/profiler\/1.0\/reporting\/reports\/1000<\/i>, which is the ID of\nthe new report.\n<\/p>\n\n<p>\nThe general way to describe this in REST documentation is\n<b>\/profiler\/1.0\/reporting\/reports\/{id}<\/b> so this documentation uses\nthat syntax throughout. Note that the client does not need to know\nthat <b>{id}<\/b> is really an ID of a report. Instead the client should\ntreat a given report, for example\n\/profiler\/1.0\/reporting\/reports\/1000, as a REST resource without\nparsing the parts of the URL.\n<\/p>\n\n<p>\nThe status of a report can be obtained by executing a GET method on\nthe report URL. The client should wait while the report is running and\nuntil the status turns to state.\n<\/p>\n\n<h3>3. Retrieve the report data.<\/h3>\n\n<p>\nOnce the report completes, the client can retrieve its data or the\nrendered version of the report in a number of formats.\n<\/p>\n\n<p>\nThe following resources can be used to retrieve a rendered version of the report:\n<ul>\n  <li>\/profiler\/1.0\/reporting\/reports\/{id}\/view.pdf<\/li>\n  <li>\/profiler\/1.0\/reporting\/reports\/{id}\/view.csv<\/li>\n<\/ul>\nThese are for PDF and CSV versions respectively.\n<\/p>\n\n<p>\nIf the client is a script that needs access to raw data, the\n<b>\/profiler\/1.0\/reporting\/reports\/{id}\/queries<\/b> resource can be\nused with the GET method to obtain the list of elements (queries)\nfirst. The data shown in a typical report on the user interface may\ncome from more than one query, which is why the report structure needs\nto be determined first. However, the system template 184 described\nabove will have only one query and is easy to use for simple scripts.\n<\/p>\n\n<p>\nEach query resource provides metadata about the query, such as\nthe list of columns with descriptions of what the columns are. \n<\/p>\n\n<p>\nOnce the query is chosen, the\n<b>\/profiler\/1.0\/reporting\/reports\/{id}\/queries\/{id}<\/b> resource can be used\nto get the report data.\n<\/p>\n\n<p>\nThe simple overview provided above cannot substitute for full\ndocumentation and it is not intended to do so. Please refer to <b>Demo\nReports<\/b> section to see how reports are run. Look at the <b>Coding\nExamples<\/b> under <b>General Information<\/b> and\nexplore <b>Resources<\/b> section of this documentation for more\ninformation.\n<\/p>\n\n<h2>Authentication<\/h2>\n\n<p>\nAll REST requests must be authenticated. The <b>Authentication<\/b>\nsection of the Common 1.0 API describes which authentication methods\nare presently supported. There are also examples that show how to use\neach of the different authentication methods.\n<\/p>\n\n<h2>Running a report: Sample PHP script<\/h2>\n\n<p>Run a report to get bytes and packets for the top 20 hosts using the application WEB. Use BASIC Authentication.<\/p>\n\n    \n    <?php\n    \n    define('HOST', '127.0.0.1'); \/\/ IP address of Profiler\n    define('BASIC_AUTH', 'admin:admin');\n    \n    \/\/ Timeframe\n    $end   = time() - 3*60; \n    $start = $end   - 5*60;\n    \n    \/\/ Lib functions\n    \n    \/\/ HTTP POST\n    function do_POST($url, $string, &$info) {\n      $curl = curl_init();\n      curl_setopt($curl, CURLOPT_URL, $url);\n      curl_setopt($curl, CURLOPT_HTTPAUTH, CURLAUTH_BASIC ) ;\n      curl_setopt($curl, CURLOPT_USERPWD, BASIC_AUTH);\n      curl_setopt($curl, CURLOPT_SSLVERSION,3);\n      curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);\n      curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2);\n      curl_setopt($curl, CURLOPT_HEADER, true);\n      curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n      curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type: application\/json'));\n      curl_setopt($curl, CURLOPT_POST,           1);\n      curl_setopt($curl, CURLOPT_POSTFIELDS,     $string);\n      $output = curl_exec($curl);\n      $info   = curl_getinfo($curl);\n      curl_close($curl);\n      \n      $headers = substr($output, 0, $info['header_size']);\n      $headers = explode(\"\\n\", $headers);\n      $info['headers'] = $headers;\n      $body = substr($output, $info['header_size']);\n      return $body;\n    }\n    \n    \/\/ HTTP GET\n    function do_GET($url, &$info) {\n      $curl = curl_init();\n      curl_setopt($curl, CURLOPT_URL, $url);\n      curl_setopt($curl, CURLOPT_HTTPAUTH, CURLAUTH_BASIC ) ;\n      curl_setopt($curl, CURLOPT_USERPWD, BASIC_AUTH);\n      curl_setopt($curl, CURLOPT_SSLVERSION,3);\n      curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);\n      curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2);\n      curl_setopt($curl, CURLOPT_HEADER, true);\n      curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n      curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type: application\/json'));\n      curl_setopt($curl, CURLOPT_HTTPGET, true);\n      $output = curl_exec($curl);\n      $info   = curl_getinfo($curl);\n      curl_close($curl);\n        \n      $headers = substr($output, 0, $info['header_size']);\n      $headers = explode(\"\\n\", $headers);\n      $info['headers'] = $headers;\n      $body = substr($output, $info['header_size']);\n      return $body;\n    }\n    \n    \/\/ Finds and returns HTTP header\n    function get_header($headers, $header) {\n      foreach($headers as $h) {\n        if (strpos($h, $header . ':') !== false)\n          return trim(substr($h, 10));\n      }\n      echo \"Unable to find {$header} header!\\n\";\n      exit;\n    }\n    \n    \/\/ Locates a column by id and returns the name\n    function find_column_name_by_id($columns, $id) {\n      foreach ($columns as $c) {\n        if ($c['id'] == $id)\n          return $c['name'];\n      }\n      return 'Unknown';\n    }\n    \n    \/\/ CSV helper\n    function echo_csv($headers, $rows) {\n      echo implode(',', $headers) . \"\\n\";\n      foreach ($rows as $row)\n        echo implode(',', $row) . \"\\n\";\n    }\n    \n    \/\/ End lib functions\n    \n    $struct = \n      array('template_id' => 184,\n            'criteria'    => Array('time_frame' => array('start' => $start,\n                                                         'end'   => $end),\n                                   'traffic_expression' => 'app WEB',\n                                   'query' => array('realm'       => 'traffic_summary',\n                                                    'group_by'    => 'hos',\n                                                    'sort_column' => 33,\n                                                    'columns'     => array(6, 33, 34))));\n    \n    $json    = json_encode($struct);\n    $columns = $struct['criteria']['query']['columns'];\n    \n    \/\/ Post to run the report\n    $url = 'https:\/\/' . HOST . '\/api\/profiler\/1.0\/reporting\/reports.json';\n    echo \"Run report:\\nPOST {$url}\\n{$json}\\n\\n\";\n    $info = array();\n    do_POST($url, $json, $info);\n    if ($info['http_code'] != 201) {\n      echo \"Unable to run report!\\n\";\n      exit(1);\n    }\n    $location = get_header($info['headers'], 'Location');\n    echo \"Generated: {$location}\\n\\n\";\n    $status_url = 'https:\/\/' . HOST . '' . $location . '.json';\n      \n    \/\/ Wait for it to complete\n    echo \"Please wait\\n\";\n    while (true) {\n      $info = array();\n      $output = do_GET($status_url, $info);\n      $s = json_decode($output, 1);\n      print \" Percent completed {$s['percent']}, seconds remaining {$s['remaining_seconds']}...\\n\";\n      if ($s['status'] == 'completed') {\n        echo \"Completed\\n\\n\";\n        break;\n      }\n      sleep(1);\n    }\n      \n    \/\/ Get all quesries (In this exampe it is only one)\n    $queries_url = 'https:\/\/' . HOST . '' . $location . '\/queries.json';\n    $output = do_GET($queries_url, $info);\n    $queries = json_decode($output, 1);\n    \n    \/\/ Print the data from all queries\n    foreach ($queries as $q) {\n      $query_id = $q['id'];\n      $data_url = 'https:\/\/' . HOST . '' . $location . '\/queries\/' . $query_id . '.json?offset=0&limit=20&columns=' . join(',', $columns);\n      $info = array();\n      $output = do_GET($data_url, $info);\n      $data = json_decode($output, 1);\n      \n      $h = array();\n      foreach ($columns as $c)\n        $h[] = find_column_name_by_id($q['columns'], $c);\n        \n      echo_csv($h, $data['data']);\n      echo \"\\n\";\n    }\n    \n    ?>\n\n<h2>Running a report: Sample Python script<\/h2>\n\n<p>Run a report to get bytes and packets for the top 20 hosts using the application WEB. Use BASIC Authentication.<\/p>\n\n    \n    from urlparse import urlparse\n    import base64\n    import logging\n    import httplib\n    import json\n    import time\n    import sys\n    \n    HOST       = '127.0.0.1'\n    BASIC_AUTH = 'admin:admin'\n    \n    end   = int(time.time() - 3*60)\n    start = int(end - 5*60);\n    \n    # Lib functions\n    \n    def do_POST(url, string):\n        '''HTTP POST'''\n        \n        conn = httplib.HTTPSConnection(HOST, 443)\n                \n        headers = {\"Authorization\"  : \"Basic %s\" % base64.b64encode(BASIC_AUTH),\n                   \"Content-Length\" : str(len(string)),\n                   \"Content-Type\"   : \"application\/json\"}\n        \n        conn.request('POST', url, body=string, headers=headers)\n    \n        res = conn.getresponse()\n        \n        info = {\"status\"  : res.status,\n                \"headers\" : res.getheaders()}\n        \n        data = res.read()\n        conn.close()\n        return data, info\n    \n    def do_GET(url):\n        '''HTTP GET'''\n        \n        conn = httplib.HTTPSConnection(HOST, 443)\n                \n        headers = {\"Authorization\"  : \"Basic %s\" % base64.b64encode(BASIC_AUTH),\n                   \"Content-Length\" : 0,\n                   \"Content-Type\"   : \"application\/json\"}\n        \n        conn.request('GET', url, body=\"\", headers=headers)\n    \n        res = conn.getresponse()\n        \n        info = {\"status\"  : res.status,\n                \"headers\" : res.getheaders()}\n        \n        data = res.read()\n        conn.close()\n        return data, info\n    \n    def get_header(headers, header):\n      '''Finds and returns HTTP header'''\n      for i in headers:\n        if (i[0] == header):\n          return i[1]\n      return \"\"\n    \n    def find_column_name_by_id(columns, cid):\n      '''Locates a column by id and returns the name'''\n      for c in columns:\n        if (c['id'] == cid):\n          return c['name']\n      return 'Unknown'\n    \n    def echo_csv(headers, rows):\n      '''CSV helper'''\n      print ','.join(headers)\n      for row in rows:\n        print ','.join(row)\n    \n    # End lib functions\n    \n    struct = {\n        \"template_id\" : 184,\n        \"criteria\" : {\n            \"time_frame\" : {\n                \"start\" : start,\n                \"end\"   : end\n                },\n            \"traffic_expression\" : \"app WEB\",\n            \"query\" : {\n                \"realm\"      : \"traffic_summary\",\n                \"group_by\"   : \"hos\",\n                \"sort_column\": 33,\n                \"columns\"    : [6, 33, 34]\n                }\n            }\n        }\n    \n    to_post = json.dumps(struct)\n    columns = struct[\"criteria\"][\"query\"][\"columns\"]\n    \n    # Post to run the report\n    url = \"https:\/\/%s\/api\/profiler\/1.0\/reporting\/reports.json\" % HOST\n    print \"Run report:\"\n    print \"POST %s\" % url\n    print \"%s\" % to_post\n    \n    output, info = do_POST(url, to_post)\n    if (info['status'] is not 201):\n      print \"Unable to run report\"\n      sys.exit(1)\n    \n    location = get_header(info['headers'], 'location')\n    print \"\"\n    print \"Generated: %s\" % location\n    print \"\"\n    \n    status_url = \"https:\/\/%s%s.json\" % (HOST, location)\n    \n    # Wait for it to complete\n    print \"Please wait\"\n    while (True):\n      output, info = do_GET(status_url)\n      s = json.loads(output)\n      print \"Percent completed %s, seconds remaining %s...\" % (s[\"percent\"], s[\"remaining_seconds\"])\n      if (s[\"status\"] == \"completed\"):\n        print \"Completed\"\n        break\n      time.sleep(1)\n    \n    # Get all quesries (In this exampe it is only one)\n    queries_url = \"https:\/\/%s%s\/queries.json\" % (HOST, location)\n    \n    output, info = do_GET(queries_url)\n    queries = json.loads(output)\n    \n    # Print the data from all queries\n    for q in queries:\n      query_id = q['id'];\n      columns_str = ','.join([repr(i) for i in columns])\n      data_url = \"https:\/\/%s%s\/queries\/%s.json?offset=0&limit=20&columns=%s\" % (HOST, location, query_id, columns_str)\n      output, info = do_GET(data_url)\n      data = json.loads(output)\n      \n      h = []\n      for c in columns:\n        h.append(find_column_name_by_id(q[\"columns\"], c))\n    \n      print \"\"  \n      echo_csv(h, data[\"data\"])\n\n<h2>Running a report: Sample Perl script<\/h2>\n\n<p>Run a report to get bytes and packets for the top 20 hosts using the application WEB. Use BASIC Authentication.<\/p>\n\n    \n    #!\/usr\/bin\/perl\n    use strict;\n    use warnings;\n    \n    use LWP::UserAgent;\n    use HTTP::Request;\n    use List::MoreUtils qw(firstidx);\n    use JSON qw( encode_json decode_json );\n    \n    use constant HOST     => '127.0.0.1';\n    use constant LOGIN    => 'admin';\n    use constant PASSWORD => 'admin';\n    \n    our $ua = LWP::UserAgent->new;\n    $ua->agent(\"ProfilerScript\/0.1\");\n    \n    our $API_BASE = \"https:\/\/127.0.0.1\";\n    \n    sub _request($) \n    {\n      my $req = shift;\n    \n      $req->header('Accept' => 'application\/json');\n      $req->authorization_basic(LOGIN, PASSWORD);\n    \n      my $res = $ua->request($req);\n    \n      return {\n        code    => $res->code,\n        status  => $res->status_line,\n        headers => $res->headers(),\n        data    => decode_json($res->content)\n      };\n    }\n    \n    sub GET($) \n    {\n      my $req = HTTP::Request->new(GET => $API_BASE . shift);\n      return _request($req);\n    }\n    \n    sub POST($$) \n    {\n      my $req = HTTP::Request->new(POST => $API_BASE . shift);\n      $req->content_type('application\/json');\n      $req->content(encode_json(shift));\n    \n      return _request($req);\n    }\n    \n    my $end   = time();\n    my $start = $end - 5 * 60;\n    \n    my $struct = { \n      template_id => 184, \n      criteria    => { \n        time_frame => { \n          start => $start, \n          end   => $end \n        }, \n        traffic_expression => \"app WEB\", \n        query => { \n          realm        => \"traffic_summary\", \n          group_by     => \"hos\", \n          sort_column  => 33, \n          columns      => [6, 33, 34] \n        } \n      } \n    };\n    \n    print \"Running report... \";\n    \n    my $response = POST('\/api\/profiler\/1.0\/reporting\/reports', $struct);\n    die \"Unable to run report. $response->{data}->{error_text}\" unless $response->{code} == 201;\n    \n    my $loc = $response->{headers}->header('Location');\n    \n    while (1) \n    {\n      $response = GET($loc);\n      printf \"\\rRunning report, %3d%% done, %d seconds remaining...   \", \n        $response->{data}->{percent}, \n        $response->{data}->{remaining_seconds};\n    \n      last if $response->{data}->{status} eq 'completed';\n      sleep(1);\n    };\n    \n    print \"\\nLoading data...\\n\";\n    \n    $response = GET($loc . '\/queries');\n    die \"Unable to load queries. $response->{data}->{error_text}\" unless $response->{code} == 200;\n    \n    foreach my $query (@{$response->{data}})\n    {\n      my @columns = @{$struct->{criteria}->{query}->{columns}};\n      my $columns = join ',', @columns;\n    \n      my $data_response = GET(\"$loc\/queries\/$query->{id}?offset=0&limit=20&columns=$columns\");\n      die \"Unable to load data. $response->{data}->{error_text}\" unless $response->{code} == 200;\n    \n      my @indices = map { my $id = $_; firstidx { $_->{id} == $id } @{$query->{columns}} } @columns;\n    \n      print join \",\", map { qq~\"$query->{columns}->[$_]->{name}\"~; } @indices;\n      print \"\\n\";\n    \n      foreach my $row (@{$data_response->{data}->{data}}) {\n        print join \",\", @$row;\n        print \"\\n\";\n      }\n    }\n\n<h2>Running a report: Sample .Net\/C# code<\/h2>\n\n<p>Run a report to get bytes and packets for the top 20 hosts using the application WEB. Use BASIC Authentication.<\/p>\n\n<p><b>Program.cs:<\/b><\/p>\n\n    \n    using System;\n    using System.Collections.Generic;\n    using System.Net;\n    using System.Runtime.Serialization.Json;\n    using System.Text;\n    using System.IO;\n    using System.Net.Security;\n    using System.Security.Cryptography.X509Certificates;\n    using System.Linq;\n    using System.Threading;\n    using System.Web.Script.Serialization;\n    \n    namespace CascadeRestClient\n    {\n        public class ReportUpdate\n        {\n            public string status { get; set; }\n            public string user_id { get; set; }\n            public string name { get; set; }\n            public string percent { get; set; }\n            public string id { get; set; }\n            public string remaining_seconds { get; set; }\n            public string run_time { get; set; }\n            public string saved { get; set; }\n            public string template_id { get; set; }\n            public string size { get; set; }\n        }\n    \n        public class Column\n        {\n            public string strid { get; set; }\n            public string metric { get; set; }\n            public string rate { get; set; }\n            public string statistic { get; set; }\n            public int id { get; set; }\n            public string unit { get; set; }\n            public string category { get; set; }\n            public string severity { get; set; }\n            public string area { get; set; }\n            public bool @internal { get; set; }\n            public string role { get; set; }\n            public string cli_srv { get; set; }\n            public string type { get; set; }\n            public bool available { get; set; }\n            public string direction { get; set; }\n            public string comparison { get; set; }\n            public bool sortable { get; set; }\n            public string name { get; set; }\n            public string comparison_parameter { get; set; }\n            public bool has_others { get; set; }\n            public bool context { get; set; }\n            public string name_type { get; set; }\n        }\n    \n        public class QueryResult\n        {\n            public string direction { get; set; }\n            public string actual_log { get; set; }\n            public int actual_t0 { get; set; }\n            public bool sort_desc { get; set; }\n            public string area { get; set; }\n            public string metric { get; set; }\n            public int sort_col { get; set; }\n            public string parent_id { get; set; }\n            public string rate { get; set; }\n            public string group_by { get; set; }\n            public string role { get; set; }\n            public List&lt;Column&gt; columns { get; set; }\n            public string statistic { get; set; }\n            public string type { get; set; }\n            public string id { get; set; }\n            public string unit { get; set; }\n            public int actual_t1 { get; set; }\n        }\n    \n        public class QueryData\n        {\n            public List&lt;List&lt;string&gt;&gt; data { get; set; }\n            public int data_size { get; set; }\n            public List&lt;string&gt; totals { get; set; }\n        }\n    \n        class Program\n        {\n            static string BASIC_AUTH = \"admin:admin\";\n    \n            \/\/ callback used to validate the self-gen certificate in an SSL conversation\n            private static bool ValidateRemoteCertificate(object sender, X509Certificate cert, X509Chain chain, SslPolicyErrors policyErrors)\n            {\n                return true;\n                \/*\n                X509Certificate2 certv2 = new X509Certificate2(cert);\n                if (certv2.GetNameInfo(X509NameType.SimpleName,true) == \"www.riverbed.com\")\n                    return true;\n    \n                return false;\n                 *\/\n            }\n    \n            static void Main(string[] args)\n            {\n                if (args.Length == 0 || string.IsNullOrWhiteSpace(args[0]))\n                {\n                    Console.WriteLine(\"Usage: CascadeRestClient hostname\");\n                    return;\n                }\n                try\n                {\n                    \/\/Code to allow run with self-signed certificates\n                    \/\/ validate cert by calling a function\n                    ServicePointManager.ServerCertificateValidationCallback += new RemoteCertificateValidationCallback(ValidateRemoteCertificate);\n    \n                    \/\/Starting to run rest \n                    string rootUrl = \"https:\/\/\" + args[0];\n                    string requestUrl = rootUrl + \"\/api\/profiler\/1.0\/reporting\/reports.json\";\n                    string location;\n    \n                    int start = (int)((DateTime.Now - new DateTime(1970, 1, 1).ToLocalTime()).TotalSeconds) - 8*60; \/\/8 minutes before in unix time\n                    int end = start + 5*60; \/\/3 minutes before in unix time\n    \n                    var jsondata = new\n                    {\n                        template_id = 184,\n                        criteria = new\n                        {\n                            time_frame = new\n                            {\n                                start = start,\n                                end = end\n                            },\n    \n                            traffic_expression = \"app WEB\",\n                            query = new\n                            {\n                                realm = \"traffic_summary\",\n                                group_by = \"hos\",\n                                sort_column = 33,\n                                columns = new List&lt;int&gt; { 6, 33, 34 }\n                            }\n                        }\n                    };\n    \n                    \/\/Serialize anomymous type to json\n                    JavaScriptSerializer serializer = new JavaScriptSerializer();\n                    string postData = serializer.Serialize(jsondata);\n    \n                    Console.WriteLine(\"Run report:\");\n                    Console.WriteLine(\"POST \" + requestUrl);\n                    Console.WriteLine(postData + Environment.NewLine);\n    \n                    \/\/ Post to run the report\n                    var runReportResponse = MakeRequest&lt;ReportUpdate&gt;(requestUrl, WebRequestMethods.Http.Post, out location, postData);\n                    Console.WriteLine(\"Generated \" + location + Environment.NewLine);\n                    requestUrl = rootUrl + location;\n                    Console.WriteLine(\"Please wait\");\n                    while (runReportResponse.status != \"completed\")\n                    {\n                        runReportResponse = MakeRequest&lt;ReportUpdate&gt;(requestUrl + \".json\", WebRequestMethods.Http.Get, out location);\n                        Console.WriteLine(string.Format(\"Percent completed {0}, seconds remaining {1}\",runReportResponse.percent, runReportResponse.remaining_seconds));\n                        Thread.Sleep(1000);\n                    }\n                    Console.WriteLine(\"Completed\"+ Environment.NewLine);\n    \n                    \/\/ Get all quesries (In this example it is only one)\n                    var getQueriesResponse = MakeRequest&lt;List&lt;QueryResult&gt;&gt;(requestUrl +\"\/queries.json\", WebRequestMethods.Http.Get, out location);\n                    string columns = jsondata.criteria.query.columns.Select(c=&gt;c.ToString()).Aggregate((i, j) =&gt; i + \",\" + j);\n                    \/\/ Print the data from all queries\n                    foreach (var query in getQueriesResponse) {\n                        var qr = MakeRequest&lt;QueryData&gt;(requestUrl + \"\/queries\/\" + query.id + \".json?offset=0&amp;limit=20&amp;columns=\" + columns,\n                                                       WebRequestMethods.Http.Get, out location);\n                        string columnList = jsondata.criteria.query.columns.Select(c=&gt;query.columns.Where(col =&gt; col.id == c).First().name)\n                                                                  .Aggregate((l,r) =&gt; l + \",\" + r);\n                        Console.WriteLine(columnList);\n    \n                        foreach (var dr in qr.data)\n                        {\n                            Console.WriteLine(dr.Aggregate((i, j) =&gt; i + ',' + j));\n                        }\n                    }\n                }\n                catch (Exception e)\n                {\n                    Console.WriteLine(e.Message);\n                }\n            }\n    \n    \n            private static string Base64Encode(string toEncode)\n            {\n                byte[] toEncodeAsBytes\n                = System.Text.ASCIIEncoding.ASCII.GetBytes(toEncode);\n                return System.Convert.ToBase64String(toEncodeAsBytes);\n            }\n    \n            \/\/\/ &lt;summary&gt;\n            \/\/\/ Make request\n            \/\/\/ &lt;\/summary&gt;\n            \/\/\/ &lt;typeparam name=\"T\"&gt;return type&lt;\/typeparam&gt;\n            \/\/\/ &lt;param name=\"requestUrl\"&gt;url for request&lt;\/param&gt;\n            \/\/\/ &lt;param name=\"action\"&gt;Http Verb, Get, Post etc&lt;\/param&gt;\n            \/\/\/ &lt;param name=\"location\"&gt;location returned from response header &lt;\/param&gt;\n            \/\/\/ &lt;param name=\"requestData\"&gt;Data posted&lt;\/param&gt;\n            \/\/\/ &lt;returns&gt;&lt;\/returns&gt;\n            private static T MakeRequest&lt;T&gt;(string requestUrl, string action, out string location, string requestData = null) where T : class\n            {\n                HttpWebRequest request = WebRequest.Create(requestUrl) as HttpWebRequest;\n                request.Headers.Add(\"Authorization: Basic \" + Base64Encode(BASIC_AUTH));\n                request.ContentType = \"application\/json\";\n                request.Method = action;\n                if (requestData == null)\n                {\n                    request.ContentLength = 0;\n                }\n                else\n                {\n                    ASCIIEncoding encoding = new ASCIIEncoding();\n                    byte[] byte1 = encoding.GetBytes(requestData);\n                    request.ContentLength = byte1.Length;\n                    using (Stream newStream = request.GetRequestStream())\n                    {\n                        newStream.Write(byte1, 0, byte1.Length);\n                    }\n                }\n    \n                using (HttpWebResponse response = request.GetResponse() as HttpWebResponse)\n                {\n                    if (response.StatusCode != HttpStatusCode.OK &amp;&amp; response.StatusCode != HttpStatusCode.Created)\n                        throw new Exception(String.Format(\n                        \"Unable to run report! StatusCode={0}, Description={1}\",\n                        response.StatusCode,\n                        response.StatusDescription));\n                    location = response.Headers[HttpResponseHeader.Location];\n                    DataContractJsonSerializer jsonSerializer = new DataContractJsonSerializer(typeof(T));\n                    object objResponse = jsonSerializer.ReadObject(response.GetResponseStream());\n                    return objResponse as T;\n                }\n            }\n        }\n    }\n\n\n<p><b>CascadeRestClient.csproj:<\/b><\/p>\n    \n    &lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n    &lt;Project ToolsVersion=\"4.0\" DefaultTargets=\"Build\" xmlns=\"http:\/\/schemas.microsoft.com\/developer\/msbuild\/2003\"&gt;\n      &lt;PropertyGroup&gt;\n        &lt;Configuration Condition=\" '$(Configuration)' == '' \"&gt;Debug&lt;\/Configuration&gt;\n        &lt;Platform Condition=\" '$(Platform)' == '' \"&gt;x86&lt;\/Platform&gt;\n        &lt;ProductVersion&gt;8.0.30703&lt;\/ProductVersion&gt;\n        &lt;SchemaVersion&gt;2.0&lt;\/SchemaVersion&gt;\n        &lt;ProjectGuid&gt;{4ED69347-523B-46AB-B259-47EF60D4F13A}&lt;\/ProjectGuid&gt;\n        &lt;OutputType&gt;Exe&lt;\/OutputType&gt;\n        &lt;AppDesignerFolder&gt;Properties&lt;\/AppDesignerFolder&gt;\n        &lt;RootNamespace&gt;CascadeRestClient&lt;\/RootNamespace&gt;\n        &lt;AssemblyName&gt;CascadeRestClient&lt;\/AssemblyName&gt;\n        &lt;TargetFrameworkVersion&gt;v4.0&lt;\/TargetFrameworkVersion&gt;\n        &lt;TargetFrameworkProfile&gt;\n        &lt;\/TargetFrameworkProfile&gt;\n        &lt;FileAlignment&gt;512&lt;\/FileAlignment&gt;\n      &lt;\/PropertyGroup&gt;\n      &lt;PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|x86' \"&gt;\n        &lt;PlatformTarget&gt;x86&lt;\/PlatformTarget&gt;\n        &lt;DebugSymbols&gt;true&lt;\/DebugSymbols&gt;\n        &lt;DebugType&gt;full&lt;\/DebugType&gt;\n        &lt;Optimize&gt;false&lt;\/Optimize&gt;\n        &lt;OutputPath&gt;bin\\Debug\\&lt;\/OutputPath&gt;\n        &lt;DefineConstants&gt;DEBUG;TRACE&lt;\/DefineConstants&gt;\n        &lt;ErrorReport&gt;prompt&lt;\/ErrorReport&gt;\n        &lt;WarningLevel&gt;4&lt;\/WarningLevel&gt;\n      &lt;\/PropertyGroup&gt;\n      &lt;PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|x86' \"&gt;\n        &lt;PlatformTarget&gt;x86&lt;\/PlatformTarget&gt;\n        &lt;DebugType&gt;pdbonly&lt;\/DebugType&gt;\n        &lt;Optimize&gt;true&lt;\/Optimize&gt;\n        &lt;OutputPath&gt;bin\\Release\\&lt;\/OutputPath&gt;\n        &lt;DefineConstants&gt;TRACE&lt;\/DefineConstants&gt;\n        &lt;ErrorReport&gt;prompt&lt;\/ErrorReport&gt;\n        &lt;WarningLevel&gt;4&lt;\/WarningLevel&gt;\n      &lt;\/PropertyGroup&gt;\n      &lt;ItemGroup&gt;\n        &lt;Reference Include=\"System\" \/&gt;\n        &lt;Reference Include=\"System.Core\" \/&gt;\n        &lt;Reference Include=\"System.Runtime.Serialization\" \/&gt;\n        &lt;Reference Include=\"System.Web.Extensions\"&gt;\n          &lt;HintPath&gt;..\\..\\..\\..\\..\\..\\..\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.0\\System.Web.Extensions.dll&lt;\/HintPath&gt;\n        &lt;\/Reference&gt;\n        &lt;Reference Include=\"System.Xml.Linq\" \/&gt;\n        &lt;Reference Include=\"System.Data.DataSetExtensions\" \/&gt;\n        &lt;Reference Include=\"Microsoft.CSharp\" \/&gt;\n        &lt;Reference Include=\"System.Data\" \/&gt;\n        &lt;Reference Include=\"System.Xml\" \/&gt;\n      &lt;\/ItemGroup&gt;\n      &lt;ItemGroup&gt;\n        &lt;Compile Include=\"Program.cs\" \/&gt;\n        &lt;Compile Include=\"Properties\\AssemblyInfo.cs\" \/&gt;\n      &lt;\/ItemGroup&gt;\n      &lt;Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" \/&gt;\n      &lt;!-- To modify your build process, add your task inside one of the targets below and uncomment it. \n           Other similar extension points exist, see Microsoft.Common.targets.\n      &lt;Target Name=\"BeforeBuild\"&gt;\n      &lt;\/Target&gt;\n      &lt;Target Name=\"AfterBuild\"&gt;\n      &lt;\/Target&gt;\n      --&gt;\n    &lt;\/Project&gt;\n\n","defaultAuthorization":"required","servicePath":"\/api\/profiler\/1.0","schemas":[],"resources":{"Devices":{"methods":{"List devices":{"httpmethod":"GET","description":"Get a list of devices.","path":"devices","parameters":{"type_id":{"type":"number","description":"Filter devices by device type.","required":false},"cidr":{"type":"string","description":"Filter devices by IP or Subnet (e.g. 10.0.0.0\/8).","required":false}},"response":{"type":"array","id":"devices","description":"List of network devices that report data to Profiler.","items":{"properties":{"id":{"description":"Device identifier (ID). Used internally in the product and in the API.","required":true,"type":"number","id":"id"},"ipaddr":{"description":"Device IP address.","required":true,"type":"string","id":"ipaddr"},"name":{"description":"Device name, which usually comes from SNMP or DNS.","required":true,"type":"string","id":"name"},"type":{"description":"Device type, e.g. Cascade Gateway, Cascade Shark or Netflow device.","required":true,"type":"string","id":"type"},"type_id":{"description":"Device type ID; a way to represent device type that is more friendly to programs.","required":true,"type":"number","id":"type_id"},"version":{"description":"Version of the protocol used to communicate with the device.","required":true,"type":"string","id":"version"}},"type":"object","id":"device","description":"Object representing a device."},"example":[{"name":"MyNetflowDevice","type_id":2,"ipaddr":"10.0.0.1","version":"N\/A","type":"Netflow","id":123},{"name":"MySensorDevice","type_id":1,"ipaddr":"10.0.0.2","version":"M8.4","type":"Sensor","id":124}]}},"Get device":{"httpmethod":"GET","description":"Get a device by IP Address.","path":"devices\/{device_ip}","response":{"properties":{"id":{"description":"Device identifier (ID). Used internally in the product and in the API.","required":true,"type":"number","id":"id"},"ipaddr":{"description":"Device IP address.","required":true,"type":"string","id":"ipaddr"},"name":{"description":"Device name, which usually comes from SNMP or DNS.","required":true,"type":"string","id":"name"},"type":{"description":"Device type, e.g. Cascade Gateway, Cascade Shark or Netflow device.","required":true,"type":"string","id":"type"},"type_id":{"description":"Device type ID; a way to represent device type that is more friendly to programs.","required":true,"type":"number","id":"type_id"},"version":{"description":"Version of the protocol used to communicate with the device.","required":true,"type":"string","id":"version"}},"type":"object","id":"device","description":"Object representing a device.","example":{"name":"MyNetflowDevice","type_id":2,"ipaddr":"10.0.0.1","version":"N\/A","type":"Netflow","id":123}}}}},"Ping":{"methods":{"Ping":{"httpmethod":"GET","description":"Simple test of service availability.","path":"ping"}}},"Reporting":{"methods":{"List areas":{"httpmethod":"GET","description":"Get a list of areas that this version of the API supports.","path":"reporting\/areas","response":{"type":"array","id":"areas","description":"List of areas.","items":{"properties":{"id":{"description":"ID of an area. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a area.","required":true,"type":"string","id":"name"}},"type":"object","id":"area","description":"Object representing an area."},"example":[{"id":"wan","name":"wan"},{"id":"lan","name":"lan"}]}},"List columns":{"httpmethod":"GET","description":"Get a list of columns.","path":"reporting\/columns","parameters":{"realm":{"type":"string","description":"Filter the list of columns by realm.","required":false},"group_by":{"type":"string","description":"Filter the list of columns by group by.","required":false},"category":{"type":"string","description":"Filter the list of columns by category.","required":false},"direction":{"type":"string","description":"Filter the list of columns by direction.","required":false},"statistic":{"type":"string","description":"Filter the list of columns by statistic.","required":false},"unit":{"type":"string","description":"Filter the list of columns by unit.","required":false},"rate":{"type":"string","description":"Filter the list of columns by rate.","required":false},"area":{"type":"string","description":"Filter the list of columns by area.","required":false},"metric":{"type":"string","description":"Filter the list of columns by metric.","required":false},"role":{"type":"string","description":"Filter the list of columns by role.","required":false},"severity":{"type":"string","description":"Filter the list of columns by severity.","required":false},"centricity":{"type":"string","description":"Filter the list of columns by centricity.","required":false}},"response":{"type":"array","id":"columns","description":"List of reporting query columns.","items":{"properties":{"area":{"description":"Column 'area'. See 'reporting\/area'.","required":true,"type":"string","id":"area"},"available":{"description":"Boolean flag indicating that the data for the column is available without the need to re-run the template.","required":true,"type":"boolean","id":"available"},"category":{"description":"Column 'category'. See 'reporting\/categories'.","required":true,"type":"string","id":"category"},"cli_srv":{"description":"Text flag indicating if the column is for the clients or servers.","required":true,"type":"string","id":"cli_srv"},"comparison":{"description":"Column 'comparison'. See 'reporting\/comparisons'.","required":true,"type":"string","id":"comparison"},"comparison_parameter":{"description":"Parameter for column comparison.","required":true,"type":"string","id":"comparison_parameter"},"context":{"description":"Internal flag used for formatting certain kinds of data.","required":true,"type":"boolean","id":"context"},"direction":{"description":"Column 'direction'. See 'reporting\/directions'.","required":true,"type":"string","id":"direction"},"has_others":{"description":"Boolean flag indicating if the column's 'other' row can be computed.","required":true,"type":"boolean","id":"has_others"},"id":{"description":"System ID for the column. Used in the API.","required":true,"type":"number","id":"id"},"internal":{"description":"Boolean flag indicating if the column is internal to the system.","required":true,"type":"boolean","id":"internal"},"metric":{"description":"Column 'metric'. See 'reporting\/metrics'.","required":true,"type":"string","id":"metric"},"name":{"description":"Column name. Format used for column names is similar to the format used for column data.","required":true,"type":"string","id":"name"},"name_type":{"description":"Type of the column name. See 'reporting\/types'.","required":true,"type":"string","id":"name_type"},"rate":{"description":"Column 'rate'. See 'reporting\/rates'.","required":true,"type":"string","id":"rate"},"role":{"description":"Column 'role'. See 'reporting\/roles'.","required":true,"type":"string","id":"role"},"severity":{"description":"Column 'severity'. See 'reporting\/severities.","required":true,"type":"string","id":"severity"},"sortable":{"description":"Boolean flag indicating if this data can be sorted on this column when running the template.","required":true,"type":"boolean","id":"sortable"},"statistic":{"description":"Column 'statistic'. See 'reporting\/statistics'.","required":true,"type":"string","id":"statistic"},"strid":{"description":"String ID for the column. Not used by the API, but easier for the human user to see.","required":true,"type":"string","id":"strid"},"type":{"description":"Type of the column data. See 'reporting\/types'.","required":true,"type":"string","id":"type"},"unit":{"description":"Column 'unit'. See 'reporting\/units'.","required":true,"type":"string","id":"unit"}},"type":"object","id":"column","description":"A column for reporting query."},"example":[{"strid":"ID_TOTAL_BYTES","metric":"net_bw","rate":"count","statistic":"total","id":30,"unit":"bytes","category":"data","severity":"none","area":"none","internal":false,"role":"none","cli_srv":"none","type":"int","available":false,"direction":"none","comparison":"none","sortable":true,"name":"Total Bytes","comparison_parameter":"","has_others":false,"context":false,"name_type":"colname_parts"},{"strid":"ID_TOTAL_PKTS","metric":"net_bw","rate":"count","statistic":"total","id":31,"unit":"pkts","category":"data","severity":"none","area":"none","internal":false,"role":"none","cli_srv":"none","type":"int","available":false,"direction":"none","comparison":"none","sortable":true,"name":"Total Packets","comparison_parameter":"","has_others":false,"context":false,"name_type":"colname_parts"}]}},"List centricities":{"httpmethod":"GET","description":"Get a list of centricities that this version of the API supports.","path":"reporting\/centricities","response":{"type":"array","id":"centricities","description":"List of centricities.","items":{"properties":{"id":{"description":"ID of a centricity. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a centricity.","required":true,"type":"string","id":"name"}},"type":"object","id":"centricity","description":"Object representing a centricity."},"example":[{"id":"hos","name":"host"},{"id":"int","name":"interface"}]}},"List statictics":{"httpmethod":"GET","description":"Get a list of statistics that this version of the API supports.","path":"reporting\/statistics","response":{"type":"array","id":"statistics","description":"List of statistics.","items":{"properties":{"id":{"description":"ID of a statistic. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a statistic.","required":true,"type":"string","id":"name"}},"type":"object","id":"statistic","description":"Object representing a statistic."},"example":[{"id":"tot","name":"total"},{"id":"avg","name":"average"},{"id":"pek","name":"peak"},{"id":"min","name":"min"}]}},"List directions":{"httpmethod":"GET","description":"Get a list of directions that this version of the API supports.","path":"reporting\/directions","response":{"type":"array","id":"directions","description":"List of directions.","items":{"properties":{"id":{"description":"ID of a direction. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a direction.","required":true,"type":"string","id":"name"}},"type":"object","id":"direction","description":"Object representing a direction."},"example":[{"id":"inn","name":"in"},{"id":"out","name":"out"},{"id":"c2s","name":"client to server"},{"id":"s2c","name":"server to client"}]}},"List metrics":{"httpmethod":"GET","description":"Get a list of metrics that this version of the API supports.","path":"reporting\/metrics","response":{"type":"array","id":"metrics","description":"List of metrics.","items":{"properties":{"id":{"description":"ID of a metric. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a metric.","required":true,"type":"string","id":"name"}},"type":"object","id":"metric","description":"Object representing a metric."},"example":[{"id":"nbw","name":"net bandwidth"},{"id":"nrt","name":"net rtt"},{"id":"rtm","name":"response time"}]}},"List severities":{"httpmethod":"GET","description":"Get a list of severities that this version of the API supports.","path":"reporting\/severities","response":{"type":"array","id":"severities","description":"List of severities.","items":{"properties":{"id":{"description":"ID of a severity. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a severity.","required":true,"type":"string","id":"name"}},"type":"object","id":"severity","description":"Object representing a severity."},"example":[{"id":"nav","name":"not available"},{"id":"nml","name":"normal"},{"id":"low","name":"low"},{"id":"med","name":"medium"},{"id":"hgh","name":"high"},{"id":"all","name":"all"}]}},"List reports":{"httpmethod":"GET","description":"Get a list of reports with their respective status.","path":"reporting\/reports","response":{"type":"array","id":"reports","description":"List of report objects.","items":{"properties":{"id":{"description":"ID of the report. To be used in the API.","required":true,"type":"number","id":"id"},"name":{"description":"Name of the report. Could be given by a user or automatically generated by the system.","required":false,"type":"string","id":"name"},"percent":{"description":"Progress of the report represented by percentage of report completion.","required":true,"type":"number","id":"percent"},"remaining_seconds":{"description":"Number of seconds remaining to run the report. Even if this number is 0, the report may not yet be completed, so check 'status' to make sure what the status is.","required":true,"type":"number","id":"remaining_seconds"},"run_time":{"description":"Time when the report was run (Unix time).","required":true,"type":"timestamp","id":"run_time"},"saved":{"description":"Boolean flag indicating if the report was saved.","required":true,"type":"boolean","id":"saved"},"size":{"description":"Size of the report in kilobytes.","required":true,"type":"number","id":"size"},"status":{"description":"Status of the report.","required":true,"type":"string","id":"status","enum":["completed","running","waiting"]},"template_id":{"description":"ID of the template that the report is based on.","required":true,"type":"number","id":"template_id"},"user_id":{"description":"ID of the user who owns the report.","required":true,"type":"number","id":"user_id"}},"type":"object","id":"report","description":"Object representing report information."},"example":[{"status":"completed","user_id":1,"name":"","percent":100,"id":1000,"remaining_seconds":0,"run_time":1352494550,"saved":false,"template_id":952,"size":140},{"status":"completed","user_id":1,"name":"Host Information Report","percent":100,"id":1001,"remaining_seconds":0,"run_time":1352494550,"saved":true,"template_id":952,"size":140}]}},"Create report":{"httpmethod":"POST","description":"Generate a new report.","path":"reporting\/reports","response":{"properties":{"id":{"description":"ID of the report. To be used in the API.","required":true,"type":"number","id":"id"},"name":{"description":"Name of the report. Could be given by a user or automatically generated by the system.","required":false,"type":"string","id":"name"},"percent":{"description":"Progress of the report represented by percentage of report completion.","required":true,"type":"number","id":"percent"},"remaining_seconds":{"description":"Number of seconds remaining to run the report. Even if this number is 0, the report may not yet be completed, so check 'status' to make sure what the status is.","required":true,"type":"number","id":"remaining_seconds"},"run_time":{"description":"Time when the report was run (Unix time).","required":true,"type":"timestamp","id":"run_time"},"saved":{"description":"Boolean flag indicating if the report was saved.","required":true,"type":"boolean","id":"saved"},"size":{"description":"Size of the report in kilobytes.","required":true,"type":"number","id":"size"},"status":{"description":"Status of the report.","required":true,"type":"string","id":"status","enum":["completed","running","waiting"]},"template_id":{"description":"ID of the template that the report is based on.","required":true,"type":"number","id":"template_id"},"user_id":{"description":"ID of the user who owns the report.","required":true,"type":"number","id":"user_id"}},"type":"object","id":"report","description":"Object representing report information.","example":{"status":"completed","user_id":1,"name":"Host Information Report","percent":100,"id":1001,"remaining_seconds":0,"run_time":1352494550,"saved":true,"template_id":952,"size":140}},"request":{"properties":{"criteria":{"properties":{"deprecated":{"type":"object","id":"deprecated","description":"ReportDeprecatedFilters map.","required":false,"additionalProperties":{"description":"ReportDeprecatedFilters map value.","type":"string","id":"filter","xmlKeyName":"key"}},"query":{"properties":{"area":{"description":"Query area. Can be one of GET \/reporting\/areas.","required":false,"type":"string","id":"area"},"centricity":{"description":"Query centricity. Can be one of GET \/reporting\/centricities.","required":false,"type":"string","id":"centricity"},"columns":{"type":"array","id":"columns","description":"Query columns array.","items":{"description":"Query column.","required":false,"type":"number","id":"column"}},"direction":{"description":"Query direction. Can be one of GET \/reporting\/directions.","required":false,"type":"string","id":"direction"},"group_by":{"description":"Query group_by. Can be one of GET \/reporting\/group_bys.","required":false,"type":"string","id":"group_by"},"host_group_type":{"description":"Query host group type. Required for \"host group (gro)\", \"host group pairs (gpp)\" and \"host group pairs with ports (gpr)\" queries.","required":false,"type":"string","id":"host_group_type"},"realm":{"description":"Query realm. Can be one of GET \/reporting\/realms.","required":true,"type":"string","id":"realm"},"role":{"description":"Query role. Can be one of \/reporting\/roles.","required":false,"type":"string","id":"role"},"sort_column":{"description":"Query sort column. Can be one of GET \/reporting\/columns.","required":false,"type":"number","id":"sort_column"}},"type":"object","id":"query","description":"Query Filter object."},"time_frame":{"properties":{"end":{"description":"Report end time (unix time).","required":true,"type":"number","id":"end"},"resolution":{"description":"Report data resolution. It can be one of: 1min, 15min, hour, 6hour, day, week, month. If not specified a resolution will automatically be selected based on time frame of the report.","required":false,"type":"string","id":"resolution"},"start":{"description":"Report start time (unix time).","required":true,"type":"number","id":"start"}},"type":"object","id":"time_frame","description":"Time Frame object."},"traffic_expression":{"description":"Traffic expression.","required":false,"type":"string","id":"traffic_expression"}},"type":"object","id":"criteria","description":"ReportCriteria object."},"name":{"description":"Report name.","required":false,"type":"string","id":"name"},"template_id":{"description":"Template ID. Can be one of GET \/reporting\/templates.","required":true,"type":"number","id":"template_id"}},"type":"object","id":"report_inputs","description":"ReportInputs object.","example":{"criteria":{"traffic_expression":"app WEB","time_frame":{"start":1352314764,"end":1352315064},"query":{"realm":"traffic_summary","sort_column":33,"group_by":"hos","columns":[6,33,34]}},"template_id":184,"name":"Bytes and packets for the top 20 hosts using application WEB"}}},"Get report":{"httpmethod":"GET","description":"Get information for report. Includes progress information for running reports.","path":"reporting\/reports\/{report_id}","response":{"properties":{"id":{"description":"ID of the report. To be used in the API.","required":true,"type":"number","id":"id"},"name":{"description":"Name of the report. Could be given by a user or automatically generated by the system.","required":false,"type":"string","id":"name"},"percent":{"description":"Progress of the report represented by percentage of report completion.","required":true,"type":"number","id":"percent"},"remaining_seconds":{"description":"Number of seconds remaining to run the report. Even if this number is 0, the report may not yet be completed, so check 'status' to make sure what the status is.","required":true,"type":"number","id":"remaining_seconds"},"run_time":{"description":"Time when the report was run (Unix time).","required":true,"type":"timestamp","id":"run_time"},"saved":{"description":"Boolean flag indicating if the report was saved.","required":true,"type":"boolean","id":"saved"},"size":{"description":"Size of the report in kilobytes.","required":true,"type":"number","id":"size"},"status":{"description":"Status of the report.","required":true,"type":"string","id":"status","enum":["completed","running","waiting"]},"template_id":{"description":"ID of the template that the report is based on.","required":true,"type":"number","id":"template_id"},"user_id":{"description":"ID of the user who owns the report.","required":true,"type":"number","id":"user_id"}},"type":"object","id":"report","description":"Object representing report information.","example":{"status":"completed","user_id":1,"name":"Host Information Report","percent":100,"id":1001,"remaining_seconds":0,"run_time":1352494550,"saved":true,"template_id":952,"size":140}}},"Delete report":{"httpmethod":"DELETE","description":"Delete a report.","path":"reporting\/reports\/{report_id}"},"Get report config":{"httpmethod":"GET","description":"Get configuration information for one report. Includes criteria, layout and GUI attributes.","path":"reporting\/reports\/{report_id}\/config","response":{"properties":{"attributes":{"type":"object","id":"attributes","description":"Report attributes.","required":false,"additionalProperties":{"description":"Report attributes value.","type":"string","id":"attribute","xmlKeyName":"key"}},"criteria":{"properties":{"deprecated":{"type":"object","id":"deprecated","description":"ReportDeprecatedFilters map.","required":false,"additionalProperties":{"description":"ReportDeprecatedFilters map value.","type":"string","id":"filter","xmlKeyName":"key"}},"query":{"properties":{"area":{"description":"Query area. Can be one of GET \/reporting\/areas.","required":false,"type":"string","id":"area"},"centricity":{"description":"Query centricity. Can be one of GET \/reporting\/centricities.","required":false,"type":"string","id":"centricity"},"columns":{"type":"array","id":"columns","description":"Query columns array.","items":{"description":"Query column.","required":false,"type":"number","id":"column"}},"direction":{"description":"Query direction. Can be one of GET \/reporting\/directions.","required":false,"type":"string","id":"direction"},"group_by":{"description":"Query group_by. Can be one of GET \/reporting\/group_bys.","required":false,"type":"string","id":"group_by"},"host_group_type":{"description":"Query host group type. Required for \"host group (gro)\", \"host group pairs (gpp)\" and \"host group pairs with ports (gpr)\" queries.","required":false,"type":"string","id":"host_group_type"},"realm":{"description":"Query realm. Can be one of GET \/reporting\/realms.","required":true,"type":"string","id":"realm"},"role":{"description":"Query role. Can be one of \/reporting\/roles.","required":false,"type":"string","id":"role"},"sort_column":{"description":"Query sort column. Can be one of GET \/reporting\/columns.","required":false,"type":"number","id":"sort_column"}},"type":"object","id":"query","description":"Query Filter object."},"time_frame":{"properties":{"end":{"description":"Report end time (unix time).","required":true,"type":"number","id":"end"},"resolution":{"description":"Report data resolution. It can be one of: 1min, 15min, hour, 6hour, day, week, month. If not specified a resolution will automatically be selected based on time frame of the report.","required":false,"type":"string","id":"resolution"},"start":{"description":"Report start time (unix time).","required":true,"type":"number","id":"start"}},"type":"object","id":"time_frame","description":"Time Frame object."},"traffic_expression":{"description":"Traffic expression.","required":false,"type":"string","id":"traffic_expression"}},"type":"object","id":"criteria","description":"ReportCriteria object."},"sections":{"type":"array","id":"sections","description":"List of report sections.","items":{"properties":{"attributes":{"type":"object","id":"attributes","description":"Hash map of section attributes.","required":false,"additionalProperties":{"description":"Attribute value in the map.","type":"string","id":"attribute","xmlKeyName":"key"}},"layout":{"type":"array","id":"layout","description":"Object representing visual layout of widgets in a secion.","items":{"properties":{"full_width":{"description":"Flag representing width of the layout line.","required":false,"type":"boolean","id":"full_width"},"item_spacing":{"description":"Item spacing between widgets.","required":false,"type":"string","id":"item_spacing"},"items":{"type":"array","id":"items","description":"List of layout items (widgets).","items":{"properties":{"id":{"description":"ID of the layout item.","required":false,"type":"string","id":"id"}},"type":"object","id":"report_layout_item","description":"One item in the list of layout items."}},"line_spacing":{"description":"Line spacing.","required":false,"type":"string","id":"line_spacing"},"wrappable":{"description":"Flag allowing wrapping.","required":false,"type":"boolean","id":"wrappable"}},"type":"object","id":"line","description":"Object representing a layout line."}},"widgets":{"type":"array","id":"widgets","description":"List of widgets.","items":{"properties":{"attributes":{"type":"object","id":"attributes","description":"Hash map of widget attributes.","required":false,"additionalProperties":{"description":"Attribute value in the map.","type":"string","id":"attribute","xmlKeyName":"key"}},"id":{"description":"Widget ID used to reference a widget from the API.","required":true,"type":"string","id":"id"},"query_id":{"description":"Query ID for the query that the widget is based on.","required":true,"type":"string","id":"query_id"},"type":{"description":"Visual type of the widget.","required":true,"type":"string","id":"type"}},"type":"object","id":"report_widget","description":"Report\/section widget."}}},"type":"object","id":"report_section","description":"Section of a report."}}},"type":"object","id":"report_view","description":"Object representing report configuration.","example":{"attributes":{"title":"Report name"},"sections":[{"widgets":[{"type":"table","query_id":"0:sum_hos_non_non_non_non_non_non_non_33_d_0","id":"sum_hos_non_non_non_non_non_non_non_tbl_0_0","attributes":{"page_size":"20","sort_col":"33","col_order":"6,33,34"}}],"attributes":{"sort_desc":"1"},"layout":[{"items":[{"id":"sum_hos_non_non_non_non_non_non_non_tbl_0_0"}]}]}],"criteria":{"time_frame":{"start":1352319891,"end":1352320191},"query":{"realm":"traffic_summary","sort_column":33,"centricity":"hos","group_by":"hos","columns":[6,33,34]}}}}},"Get report view (PDF, CSV)":{"httpmethod":"GET","description":"Get GUI view of a report (PDF, CSV).","path":"reporting\/reports\/{report_id}\/view"},"Get report queries":{"httpmethod":"GET","description":"Get information for all queries run as part of this report. Each query has a list of columns.","path":"reporting\/reports\/{report_id}\/queries","response":{"type":"array","id":"queries","description":"List of queries. Query is one tabular unit of report data.","items":{"properties":{"actual_log":{"description":"Type of data log file that was used to get data for the query.","required":true,"type":"string","id":"actual_log"},"actual_t0":{"description":"Actual start time for data in the query. This could be different from the requested start time because of time interval snapping and other similar features. ","required":true,"type":"number","id":"actual_t0"},"actual_t1":{"description":"Actual end time for the data in the query. See 'actual_t0' for more detail.","required":true,"type":"number","id":"actual_t1"},"area":{"description":"Query 'area'. See 'reporting\/areas'.","required":true,"type":"string","id":"area"},"columns":{"type":"array","id":"columns","description":"List of reporting query columns.","items":{"properties":{"area":{"description":"Column 'area'. See 'reporting\/area'.","required":true,"type":"string","id":"area"},"available":{"description":"Boolean flag indicating that the data for the column is available without the need to re-run the template.","required":true,"type":"boolean","id":"available"},"category":{"description":"Column 'category'. See 'reporting\/categories'.","required":true,"type":"string","id":"category"},"cli_srv":{"description":"Text flag indicating if the column is for the clients or servers.","required":true,"type":"string","id":"cli_srv"},"comparison":{"description":"Column 'comparison'. See 'reporting\/comparisons'.","required":true,"type":"string","id":"comparison"},"comparison_parameter":{"description":"Parameter for column comparison.","required":true,"type":"string","id":"comparison_parameter"},"context":{"description":"Internal flag used for formatting certain kinds of data.","required":true,"type":"boolean","id":"context"},"direction":{"description":"Column 'direction'. See 'reporting\/directions'.","required":true,"type":"string","id":"direction"},"has_others":{"description":"Boolean flag indicating if the column's 'other' row can be computed.","required":true,"type":"boolean","id":"has_others"},"id":{"description":"System ID for the column. Used in the API.","required":true,"type":"number","id":"id"},"internal":{"description":"Boolean flag indicating if the column is internal to the system.","required":true,"type":"boolean","id":"internal"},"metric":{"description":"Column 'metric'. See 'reporting\/metrics'.","required":true,"type":"string","id":"metric"},"name":{"description":"Column name. Format used for column names is similar to the format used for column data.","required":true,"type":"string","id":"name"},"name_type":{"description":"Type of the column name. See 'reporting\/types'.","required":true,"type":"string","id":"name_type"},"rate":{"description":"Column 'rate'. See 'reporting\/rates'.","required":true,"type":"string","id":"rate"},"role":{"description":"Column 'role'. See 'reporting\/roles'.","required":true,"type":"string","id":"role"},"severity":{"description":"Column 'severity'. See 'reporting\/severities.","required":true,"type":"string","id":"severity"},"sortable":{"description":"Boolean flag indicating if this data can be sorted on this column when running the template.","required":true,"type":"boolean","id":"sortable"},"statistic":{"description":"Column 'statistic'. See 'reporting\/statistics'.","required":true,"type":"string","id":"statistic"},"strid":{"description":"String ID for the column. Not used by the API, but easier for the human user to see.","required":true,"type":"string","id":"strid"},"type":{"description":"Type of the column data. See 'reporting\/types'.","required":true,"type":"string","id":"type"},"unit":{"description":"Column 'unit'. See 'reporting\/units'.","required":true,"type":"string","id":"unit"}},"type":"object","id":"column","description":"A column for reporting query."}},"direction":{"description":"Query 'direction. See 'reporting\/directions'.","required":true,"type":"string","id":"direction"},"group_by":{"description":"Grouping of data in the query. See 'reporting\/group_bys'.","required":true,"type":"string","id":"group_by"},"id":{"description":"ID for the query. Used in the API.","required":true,"type":"string","id":"id"},"metric":{"description":"Query 'metric'. See 'reporting\/metrics'.","required":true,"type":"string","id":"metric"},"parent_id":{"description":"Query ID of the query that preceeded this query and influenced data selection for it. For example, if one runs a query that returns time-series data for top 10 protocols in the network, the first query that would need to run is the one to pick top 10 protocols. That query would be the parent one to the follow-up query to get time-series data for those selected 10 protocols.","required":true,"type":"string","id":"parent_id"},"rate":{"description":"Query 'rate'. See 'reporting\/rates.","required":true,"type":"string","id":"rate"},"role":{"description":"Query 'role'. See 'reporting\/roles.'","required":true,"type":"string","id":"role"},"sort_col":{"description":"ID of that column that was used to sort the query when it ran.","required":true,"type":"number","id":"sort_col"},"sort_desc":{"description":"Boolean flag indicating if the sorting was in the descending order.","required":true,"type":"boolean","id":"sort_desc"},"statistic":{"description":"Query 'statistic'. See 'reporting\/statistics'.","required":true,"type":"string","id":"statistic"},"type":{"description":"Internal value. Reserved.","required":true,"type":"string","id":"type"},"unit":{"description":"Query 'unit'. See 'reporting\/units'.","required":true,"type":"string","id":"unit"}},"type":"object","id":"query","description":"A query."},"example":[{"direction":"none","actual_log":"flow","actual_t0":1352319840,"sort_desc":true,"area":"none","metric":"none","sort_col":33,"parent_id":"","rate":"none","group_by":"hos","role":"none","columns":[{"strid":"ID_AVG_BYTES","metric":"net_bw","rate":"persec","statistic":"avg","id":33,"unit":"bytes","category":"data","severity":"none","area":"none","internal":false,"role":"none","cli_srv":"none","type":"float","available":true,"direction":"none","comparison":"none","sortable":true,"name":"Avg Bytes\/s","comparison_parameter":"","has_others":false,"context":false,"name_type":"colname_parts"},{"strid":"ID_AVG_BYTES_RTX","metric":"rtx","rate":"persec","statistic":"avg","id":391,"unit":"bytes","category":"data","severity":"none","area":"none","internal":false,"role":"none","cli_srv":"none","type":"float","available":false,"direction":"none","comparison":"none","sortable":true,"name":"Avg Retrans Bytes\/s","comparison_parameter":"","has_others":false,"context":false,"name_type":"colname_parts"}],"statistic":"none","type":"summary","id":"0:sum_hos_non_non_non_non_non_non_non_33_d_0","unit":"none","actual_t1":1352320200}]}},"Get query data":{"httpmethod":"GET","description":"Get data for one or many columns from this query.","path":"reporting\/reports\/{report_id}\/queries\/{query_id}","parameters":{"offset":{"type":"number","description":"Start row.","required":false},"limit":{"type":"number","description":"Number of rows to be returned.","required":false},"columns":{"type":"string","description":"Comma-separated list of column ids.","required":false}},"response":{"properties":{"data":{"type":"array","id":"data","description":"List of rows.","items":{"type":"array","id":"row","description":"A row of data.","items":{"description":"One value datum.","required":false,"type":"string","id":"value"}}},"data_size":{"description":"Number of rows in the data array.","required":false,"type":"number","id":"data_size"},"totals":{"type":"array","id":"totals","description":"List of totals.","items":{"description":"One total datum.","required":false,"type":"string","id":"value"}}},"type":"object","id":"data_results","description":"Object representing a 2-dimensional array of query data and totals.","example":{"data":[["10.38.8.202|","6878717.15556","7041.06111111"],["10.38.9.152|","1996165.24167","2049.01388889"]],"data_size":3744,"totals":["","20293913.8417","23577.3055556"]}}},"List templates":{"httpmethod":"GET","description":"Get a list of templates.","path":"reporting\/templates","response":{"type":"array","id":"report_templates","description":"List of templates available on the system.","items":{"properties":{"id":{"description":"ID of the template.","required":true,"type":"number","id":"id"},"name":{"description":"Human-readable name of the template.","required":true,"type":"string","id":"name"},"next_run":{"description":"Next run time for the template if the template is scheduled to run.","required":false,"type":"number","id":"next_run"},"schedule_type":{"description":"Type of template scheduling.","required":false,"type":"string","id":"schedule_type","enum":["Once","Hourly","Daily","Weekly","Monthly","Quarterly"]},"scheduled":{"description":"Flag indicating that the template is scheduled.","required":true,"type":"boolean","id":"scheduled"},"user_id":{"description":"ID of the user who owns the template.","required":false,"type":"number","id":"user_id"}},"type":"object","id":"report_template","description":"A template for running reports."},"example":[{"scheduled":false,"name":"Default template for class QUERY","id":184},{"scheduled":true,"next_run":1352328480,"user_id":1,"name":"My Template","schedule_type":"Hourly","id":1000}]}},"Get template":{"httpmethod":"GET","description":"Get a template.","path":"reporting\/templates\/{template_id}","response":{"properties":{"id":{"description":"ID of the template.","required":true,"type":"number","id":"id"},"name":{"description":"Human-readable name of the template.","required":true,"type":"string","id":"name"},"next_run":{"description":"Next run time for the template if the template is scheduled to run.","required":false,"type":"number","id":"next_run"},"schedule_type":{"description":"Type of template scheduling.","required":false,"type":"string","id":"schedule_type","enum":["Once","Hourly","Daily","Weekly","Monthly","Quarterly"]},"scheduled":{"description":"Flag indicating that the template is scheduled.","required":true,"type":"boolean","id":"scheduled"},"user_id":{"description":"ID of the user who owns the template.","required":false,"type":"number","id":"user_id"}},"type":"object","id":"report_template","description":"A template for running reports.","example":{"scheduled":true,"next_run":1352328480,"user_id":1,"name":"My Template","schedule_type":"Hourly","id":1000}}},"List units":{"httpmethod":"GET","description":"Get a list of units that this version of the API supports.","path":"reporting\/units","response":{"type":"array","id":"units","description":"List of units.","items":{"properties":{"id":{"description":"ID of a unit. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a unit.","required":true,"type":"string","id":"name"}},"type":"object","id":"unit","description":"Object representing a unit."},"example":[{"id":"byt","name":"bytes"},{"id":"pkt","name":"packet"},{"id":"con","name":"conntions"}]}},"List realms":{"httpmethod":"GET","description":"Get a list of realms.","path":"reporting\/realms","response":{"type":"array","id":"realms","description":"List of type of report queries (realms) that could be requested and run.","items":{"properties":{"id":{"description":"ID of a realm. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a realm.","required":true,"type":"string","id":"name"}},"type":"object","id":"realm","description":"Object representing a realm."},"example":[{"id":"traffic_summary","name":"traffic summary"},{"id":"traffic_flow_list","name":"traffic flow list"},{"id":"traffic_overall_time_series","name":"traffic overall time series"}]}},"List group bys":{"httpmethod":"GET","description":"Get a list of reporting summarizations (group bys).","path":"reporting\/group_bys","response":{"type":"array","id":"group_bys","description":"List of reporting summarizations (group-bys).","items":{"properties":{"id":{"description":"ID of a group by. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a group by.","required":true,"type":"string","id":"name"}},"type":"object","id":"group_by","description":"Object representing a group by."},"example":[{"id":"hos","name":"host"},{"id":"hop","name":"host pair"},{"id":"gro","name":"host group"},{"id":"gpp","name":"host group pair"}]}},"List roles":{"httpmethod":"GET","description":"Get a list of roles that this version of the API supports.","path":"reporting\/roles","response":{"type":"array","id":"roles","description":"List of roles.","items":{"properties":{"id":{"description":"ID of a role. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a role.","required":true,"type":"string","id":"name"}},"type":"object","id":"role","description":"Object representing a roles."},"example":[{"id":"cli","name":"client"},{"id":"srv","name":"server"}]}},"List rates":{"httpmethod":"GET","description":"Get a list of rates that this version of the API supports.","path":"reporting\/rates","response":{"type":"array","id":"rates","description":"List of rates.","items":{"properties":{"id":{"description":"ID of a rate. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a rate.","required":true,"type":"string","id":"name"}},"type":"object","id":"rate","description":"Object representing a rate."},"example":[{"id":"cnt","name":"count"},{"id":"psc","name":"per second"}]}},"List categories":{"httpmethod":"GET","description":"Get a list of categories that this version of the API supports.","path":"reporting\/categories","response":{"type":"array","id":"categories","description":"List of categories.","items":{"properties":{"id":{"description":"ID of a category. To be used in the API.","required":true,"type":"string","id":"id"},"name":{"description":"Human-readable name of a category.","required":true,"type":"string","id":"name"}},"type":"object","id":"category","description":"Object representing a category."},"example":[{"id":"idx","name":"index"},{"id":"key","name":"key"}]}}}},"Vnis":{"methods":{"LIST VNIs":{"httpmethod":"GET","description":"Get a list of Virtual Network Identifiers.","path":"vnis","response":{"type":"array","id":"vnis","description":"List of VNIs (Virtual Network Identifiers of SDN setup).","items":{"properties":{"description":{"description":"Description of the VNI.","required":false,"type":"string","id":"description"},"id":{"description":"ID of the VNI.","required":true,"type":"number","id":"id"},"name":{"description":"Name of the VNI.","required":false,"type":"string","id":"name"}},"type":"object","id":"vni","description":"Object representing a VNI."},"example":[{"description":"Customer A. Blue Network.","id":100,"name":"Blue_Network"},{"description":"Customer B. Blue Network.","id":200,"name":"Red_Network"}]}},"Update VNIs":{"httpmethod":"PUT","description":"Update one or many Virtual Network Identifiers.","path":"vnis","request":{"type":"array","id":"vnis","description":"List of VNIs (Virtual Network Identifiers of SDN setup).","items":{"properties":{"description":{"description":"Description of the VNI.","required":false,"type":"string","id":"description"},"id":{"description":"ID of the VNI.","required":true,"type":"number","id":"id"},"name":{"description":"Name of the VNI.","required":false,"type":"string","id":"name"}},"type":"object","id":"vni","description":"Object representing a VNI."},"example":[{"description":"Customer A. Blue Network.","id":100,"name":"Blue_Network"},{"description":"Customer B. Blue Network.","id":200,"name":"Red_Network"}]}},"Get VNI":{"httpmethod":"GET","description":"Get a Virtual Network Identifier.","path":"vnis\/{vni_id}","response":{"properties":{"description":{"description":"Description of the VNI.","required":false,"type":"string","id":"description"},"id":{"description":"ID of the VNI.","required":true,"type":"number","id":"id"},"name":{"description":"Name of the VNI.","required":false,"type":"string","id":"name"}},"type":"object","id":"vni","description":"Object representing a VNI.","example":{"description":"Customer A. Blue Network.","id":100,"name":"Blue_Network"}}},"Update VNI":{"httpmethod":"PUT","description":"Update one Virtual Network Identifier.","path":"vnis\/{vni_id}","request":{"properties":{"description":{"description":"Description of the VNI.","required":false,"type":"string","id":"description"},"id":{"description":"ID of the VNI.","required":true,"type":"number","id":"id"},"name":{"description":"Name of the VNI.","required":false,"type":"string","id":"name"}},"type":"object","id":"vni","description":"Object representing a VNI.","example":{"description":"Customer A. Blue Network.","id":100,"name":"Blue_Network"}}},"Delete VNI":{"httpmethod":"DELETE","description":"Delete a Virtual Network Identifier.","path":"vnis\/{vni_id}"}}},"Users":{"methods":{"List users":{"httpmethod":"GET","description":"Get a list of user accounts.","path":"users","response":{"type":"array","id":"users","description":"List of user accounts on the system.","items":{"properties":{"authentication_type":{"description":"Type of authentication for the user, such as Local or RADIUS.","required":true,"type":"string","id":"authentication_type","enum":["Local","RADIUS"]},"authorization_type":{"description":"Type of authorization for the user, such as Local or RADIUS.","required":true,"type":"string","id":"authorization_type","enum":["Local","RADIUS"]},"enabled":{"description":"Boolean flag indicating if the user account is enabled.","required":true,"type":"boolean","id":"enabled"},"first_name":{"description":"First name of the user.","required":true,"type":"string","id":"first_name"},"id":{"description":"Numeric ID of the user that the system uses internally and in the API.","required":true,"type":"number","id":"id"},"last_access":{"description":"Time of last access to the system. Unix time (epoch).","required":true,"type":"number","id":"last_access"},"last_authentication":{"description":"Time of last authentication. Unix time (epoch).","required":true,"type":"number","id":"last_authentication"},"last_login":{"description":"Time of last login. Unix time (epoch).","required":true,"type":"number","id":"last_login"},"last_name":{"description":"Last name of the user.","required":true,"type":"string","id":"last_name"},"login_timeout":{"description":"Timeout (in seconds) during which the user cannot log in to the system because of security policies.","required":true,"type":"number","id":"login_timeout"},"role":{"description":"Role of the user. Defines permissions.","required":true,"type":"string","id":"role","enum":["Developer","Administrator","Operator","Monitor","Event_Viewer","Dashboard_Viewer"]},"username":{"description":"User name (short name) that identifies the user to the system, such as 'admin'.","required":true,"type":"string","id":"username"},"view_packet_details":{"description":"Boolean flag indicating if the user has access to packet data.","required":false,"type":"boolean","id":"view_packet_details"},"view_user_information":{"description":"Boolean flag indicating if the user has access to identity information, such as Active Directory information.","required":false,"type":"boolean","id":"view_user_information"}},"type":"object","id":"user","description":"User account."},"example":[{"username":"admin","last_authentication":1352313328,"first_name":"Jonh","last_name":"Smith","authorization_type":"Local","enabled":true,"view_user_information":true,"authentication_type":"Local","role":"Administrator","login_timeout":900,"last_login":1352313328,"last_access":1352313328,"id":123},{"username":"admin2","last_authentication":1352313328,"first_name":"Mark","last_name":"Greg","authorization_type":"Local","enabled":true,"view_user_information":true,"authentication_type":"Local","role":"Administrator","login_timeout":900,"last_login":1352313328,"last_access":1352313328,"id":124}]}},"Test RADIUS user":{"httpmethod":"GET","description":"Test a RADIUS user.","path":"users\/radius\/test_user","parameters":{"username":{"type":"string","description":"RADIUS username.","required":true},"password":{"type":"string","description":"RADIUS password.","required":true}},"response":{"properties":{"attributes":{"type":"array","id":"attributes","description":"Radius Attributes List object.","items":{"type":"object","id":"attribute","description":"RADIUS attributes map.","required":false,"additionalProperties":{"description":"RADIUS attribute value.","type":"string","id":"attr","xmlKeyName":"name"}}},"authenticated":{"description":"Flag indication if the RADIUS user was authenticated.","required":true,"type":"boolean","id":"authenticated"},"authorized":{"description":"Flag indication if the RADIUS user was authorized (as Administrator, Monitor, etc).","required":true,"type":"boolean","id":"authorized"},"details":{"description":"RADIUS user test details.","required":true,"type":"string","id":"details"},"error_message":{"description":"Error message.","required":true,"type":"string","id":"error_message"},"permission":{"description":"Matched permission name.","required":true,"type":"string","id":"permission"},"permission_id":{"description":"Matched permission ID.","required":true,"type":"string","id":"permission_id"},"role":{"description":"Matched role name.","required":true,"type":"string","id":"role"},"role_id":{"description":"Matched role ID.","required":true,"type":"number","id":"role_id"},"server_ip":{"description":"RADIUS Server IP Address.","required":true,"type":"string","id":"server_ip"}},"type":"object","id":"test_server","description":"RadiusTestUserResponse object.","example":{"authenticated":true,"permission":"","permission_id":"","error_message":"","role_id":0,"role":"","authorized":false,"server_ip":"10.38.8.112:1812","attributes":[{"25":"operatorClass"},{"25":"monitorClass"},{"25":"eventviewerClass"},{"17164":"unMappedRole"},{"17164":"monitorCascade"},{"17164":"eventviewerCascade"},{"17164":"dashboardCascade"},{"25":"DBAccess"},{"25":"dashboardClass"},{"17164":"AbC10~!@#$%^&*()_+{}|[]:;<>?\/.'z"},{"17164":"operatorCascade"},{"LOGIN_RADIUS_SERVER":"10.38.8.112:1812"},{"25":"adminClass1"},{"25":"unMappedClass"},{"25":"eventviewerClass"},{"17164":"adminCascade"}],"details":"Using 10.38.8.112:1812 - Unable to match a role."}}},"Test RADIUS server":{"httpmethod":"GET","description":"Test the connection to a RADIUS server.","path":"users\/radius\/test_server","parameters":{"server":{"type":"string","description":"RADIUS server identifier, example server=IP:PORT.","required":true}},"response":{"properties":{"message":{"description":"Response message.","required":true,"type":"string","id":"message"},"success":{"description":"Flag indication if the RADIUS server test was successful.","required":true,"type":"boolean","id":"success"}},"type":"object","id":"test_server","description":"RadiusTestServerResponse object.","example":{"message":"RADIUS connection attempt succeeded","success":true}}},"Re-authenticate user":{"httpmethod":"GET","description":"Re-authenticate user account. Requires basic authentication.","path":"users\/re_authenticate"},"Get user":{"httpmethod":"GET","description":"Get a user account by user ID.","path":"users\/{user_id}","response":{"properties":{"authentication_type":{"description":"Type of authentication for the user, such as Local or RADIUS.","required":true,"type":"string","id":"authentication_type","enum":["Local","RADIUS"]},"authorization_type":{"description":"Type of authorization for the user, such as Local or RADIUS.","required":true,"type":"string","id":"authorization_type","enum":["Local","RADIUS"]},"enabled":{"description":"Boolean flag indicating if the user account is enabled.","required":true,"type":"boolean","id":"enabled"},"first_name":{"description":"First name of the user.","required":true,"type":"string","id":"first_name"},"id":{"description":"Numeric ID of the user that the system uses internally and in the API.","required":true,"type":"number","id":"id"},"last_access":{"description":"Time of last access to the system. Unix time (epoch).","required":true,"type":"number","id":"last_access"},"last_authentication":{"description":"Time of last authentication. Unix time (epoch).","required":true,"type":"number","id":"last_authentication"},"last_login":{"description":"Time of last login. Unix time (epoch).","required":true,"type":"number","id":"last_login"},"last_name":{"description":"Last name of the user.","required":true,"type":"string","id":"last_name"},"login_timeout":{"description":"Timeout (in seconds) during which the user cannot log in to the system because of security policies.","required":true,"type":"number","id":"login_timeout"},"role":{"description":"Role of the user. Defines permissions.","required":true,"type":"string","id":"role","enum":["Developer","Administrator","Operator","Monitor","Event_Viewer","Dashboard_Viewer"]},"username":{"description":"User name (short name) that identifies the user to the system, such as 'admin'.","required":true,"type":"string","id":"username"},"view_packet_details":{"description":"Boolean flag indicating if the user has access to packet data.","required":false,"type":"boolean","id":"view_packet_details"},"view_user_information":{"description":"Boolean flag indicating if the user has access to identity information, such as Active Directory information.","required":false,"type":"boolean","id":"view_user_information"}},"type":"object","id":"user","description":"User account.","example":{"username":"admin","last_authentication":1352313328,"first_name":"Jonh","last_name":"Smith","authorization_type":"Local","enabled":true,"view_user_information":true,"authentication_type":"Local","role":"Administrator","login_timeout":900,"last_login":1352313328,"last_access":1352313328,"id":123}}}}}},"errors":[{"error_id":"INTERNAL_ERROR","description":"Internal server error.","http_status":"500"},{"error_id":"AUTH_REQUIRED","description":"The requested resource requires authentication.","http_status":"401"},{"error_id":"AUTH_INVALID_CREDENTIALS","description":"Invalid username and\/or password.","http_status":"401"},{"error_id":"AUTH_INVALID_SESSION","description":"Session ID is invalid.","http_status":"401"},{"error_id":"AUTH_EXPIRED_PASSWORD","description":"The password must be changed. Access only to password change resources.","http_status":"403"},{"error_id":"AUTH_DISABLED_ACCOUNT","description":"Account is either temporarily or permanently disabled.","http_status":"403"},{"error_id":"AUTH_FORBIDDEN","description":"User is not authorized to access the requested resource.","http_status":"403"},{"error_id":"AUTH_INVALID_TOKEN","description":"OAuth access token is invalid.","http_status":"401"},{"error_id":"AUTH_EXPIRED_TOKEN","description":"OAuth access token is expired.","http_status":"401"},{"error_id":"AUTH_INVALID_CODE","description":"OAuth access code is invalid.","http_status":"401"},{"error_id":"AUTH_EXPIRED_CODE","description":"OAuth access code is expired.","http_status":"401"},{"error_id":"RESOURCE_NOT_FOUND","description":"Requested resource was not found.","http_status":"404"},{"error_id":"HTTP_INVALID_METHOD","description":"Requested method is not available for this resource.","http_status":"405"},{"error_id":"HTTP_INVALID_HEADER","description":"An HTTP header was malformed.","http_status":"400"},{"error_id":"REQUEST_INVALID_INPUT","description":"Malformed input structure.","http_status":"400"},{"error_id":"URI_INVALID_PARAMETER","description":"URI parameter is not supported or malformed.","http_status":"400"},{"error_id":"URI_MISSING_PARAMETER","description":"Missing required parameter.","http_status":"400"}]}